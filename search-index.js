var N = null;var searchIndex = {};
searchIndex["wayland_client"]={"doc":"Client-side Wayland connector","items":[[3,"AnonymousObject","wayland_client","Anonymous interface",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[10,"c_interface","","Pointer to the C representation of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,N],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Display","","A connection to a wayland server",N,N],[3,"EventQueue","","An event queue for protocol messages",N,N],[3,"QueueToken","","A token representing this event queue",N,N],[3,"ReadEventsGuard","","A guard over a read intention.",N,N],[3,"GlobalManager","","An utility to manage global objects",N,N],[3,"NewProxy","","A newly-created proxy that needs implementation",N,N],[3,"Proxy","","An handle to a wayland proxy",N,N],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",N,N],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",2,N],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",2,N],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",2,N],[13,"InvalidName","","The provided socket name is invalid",2,N],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",2,N],[4,"GlobalError","","An error that occurred trying to bind a global",N,N],[13,"Missing","","The requested global was missing",3,N],[13,"VersionTooLow","","The global advertised by the server has a lower version number than the one requested",3,N],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",N,N],[13,"New","","A new global was created",4,N],[12,"id","wayland_client::GlobalEvent","Id of the new global",4,N],[12,"interface","","Interface of the new global",4,N],[12,"version","","Maximum supported version of the new global",4,N],[13,"Removed","wayland_client","A global was removed",4,N],[12,"id","wayland_client::GlobalEvent","Id of the removed global",4,N],[12,"interface","","Interface of the removed global",4,N],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with the rust implementation.",N,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",5,[[],["result",["connecterror"]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",5,[[["s"]],["result",["connecterror"]]]],[11,"from_fd","","Attempt to use an already connected unix socket on given FD to start a wayland connection",5,[[["rawfd"]],["result",["connecterror"]]]],[11,"flush","","Non-blocking write to the server",5,[[["self"]],["result"]]],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",5,[[["self"]],["eventqueue"]]],[11,"from_external_display","","Create a Display and Event Queue from an external display",5,N],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",5,N],[11,"deref","","",5,[[["self"]],["proxy"]]],[11,"dispatch","","Dispatches events from the internal buffer.",6,[[["self"]],["result",["u32"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",6,[[["self"]],["result",["u32"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",6,[[["self"]],["result",["u32"]]]],[11,"get_token","","Create a new token associated with this event queue",6,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an concurrent read",6,[[["self"]],["option",["readeventsguard"]]]],[11,"read_events","","Read events",7,[[["self"]],["result",["i32"]]]],[11,"cancel","","Cancel the read",7,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"clone","","",8,[[["self"]],["globalmanager"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["globalerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["globalerror"]],["bool"]]],[11,"new","","Create a global manager handling a registry",8,[[["proxy"]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",8,[[["proxy"],["f"]],["globalmanager"]]],[11,"instantiate_auto","","Instantiate a global with highest available version",8,[[["self"],["f"]],["result",["proxy","globalerror"]]]],[11,"instantiate_exact","","Instantiate a global with a specific version",8,[[["self"],["u32"],["f"]],["result",["proxy","globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",8,[[["self"]],["vec"]]],[11,"clone","","",9,[[["self"]],["proxy"]]],[11,"eq","","",9,[[["self"],["proxy"]],["bool"]]],[11,"send","","Send a request through this object",9,N],[11,"send_constructor","","Send a request creating an object through this object",9,N],[11,"is_alive","","Check if the object associated with this proxy is still alive",9,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",9,[[["self"]],["u32"]]],[11,"id","","Retrieve the object id of this wayland object",9,[[["self"]],["u32"]]],[11,"user_data","","Access the arbitrary payload associated to this object",9,[[["self"]],["option"]]],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",9,[[["self"],["proxy"]],["bool"]]],[11,"child","","Create a new child object",9,[[["self"]],["newproxy"]]],[11,"anonymize","","Creates a handle of this proxy with its actual type erased",9,[[["self"]],["proxy",["anonymousobject"]]]],[11,"make_wrapper","","Create a wrapper for this object for queue management",9,[[["self"],["queuetoken"]],["result",["proxy"]]]],[11,"child_placeholder","","Create a placeholder object, to be used with `send_constructor`",9,[[["self"]],["proxy"]]],[11,"is_external","","Check whether this proxy is managed by the library or not",9,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",9,N],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",9,N],[11,"implement","","Implement this proxy using given function and implementation data.",10,[[["self"],["f"],["ud"]],["proxy"]]],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",10,[[["self"],["impl"],["ud"],["queuetoken"]],["proxy"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",10,N],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",10,N],[0,"cursor","","Cursor utilities",N,N],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",N,N],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",N,N],[3,"CursorImageBuffer","","A buffer containing a cursor image.",N,N],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",N,[[],["bool"]]],[5,"load_theme","","Attempts to load a cursor theme from given name.",N,[[["option",["str"]],["u32"],["proxy"]],["cursortheme"]]],[11,"get_cursor","","Retrieve a cursor from the theme.",11,[[["self"],["str"]],["option",["cursor"]]]],[11,"drop","","",11,[[["self"]]]],[11,"name","","Retrieve the name of this cursor.",12,[[["self"]],["string"]]],[11,"image_count","","Retrieve the number of images contained in this animated cursor",12,[[["self"]],["usize"]]],[11,"frame","","Retrieve the image number of cursor animation.",12,[[["self"],["u32"]],["usize"]]],[11,"frame_and_duration","","Retrieve the image number and its duration.",12,N],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",12,[[["self"],["usize"]],["option",["cursorimagebuffer"]]]],[11,"frame_info","","Retrieve the metadata associated with given frame of the animation.",12,[[["self"],["usize"]],["option"]]],[11,"deref","","",13,[[["self"]],["proxy"]]],[0,"egl","wayland_client","EGL utilities",N,N],[3,"WlEglSurface","wayland_client::egl","EGL surface",N,N],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",N,[[],["bool"]]],[11,"new","","Create an EGL surface from a wayland surface",14,[[["proxy"],["i32"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",14,N],[11,"get_size","","Fetch current size of the EGL surface",14,N],[11,"resize","","Resize the EGL surface",14,[[["self"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ptr","","Raw pointer to the EGL surface",14,N],[11,"drop","","",14,[[["self"]]]],[11,"get","wayland_client","Unusable method only existing for type-level compatibility",15,[[["self"],["u32"]],["option",["proxy"]]]],[11,"get_new","","Unusable method only existing for type-level compatibility",15,[[["self"],["u32"]],["option",["newproxy"]]]],[0,"sys","","C-associated types",N,N],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",N,N],[4,"wl_proxy","wayland_client::sys::client","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[3,"WaylandClient","","",N,N],[12,"wl_display_connect_to_fd","","",16,N],[12,"wl_display_connect","","",16,N],[12,"wl_display_disconnect","","",16,N],[12,"wl_display_get_fd","","",16,N],[12,"wl_display_roundtrip","","",16,N],[12,"wl_display_read_events","","",16,N],[12,"wl_display_prepare_read","","",16,N],[12,"wl_display_cancel_read","","",16,N],[12,"wl_display_dispatch","","",16,N],[12,"wl_display_dispatch_pending","","",16,N],[12,"wl_display_get_error","","",16,N],[12,"wl_display_get_protocol_error","","",16,N],[12,"wl_display_flush","","",16,N],[12,"wl_event_queue_destroy","","",16,N],[12,"wl_display_create_queue","","",16,N],[12,"wl_display_roundtrip_queue","","",16,N],[12,"wl_display_prepare_read_queue","","",16,N],[12,"wl_display_dispatch_queue","","",16,N],[12,"wl_display_dispatch_queue_pending","","",16,N],[12,"wl_proxy_create","","",16,N],[12,"wl_proxy_destroy","","",16,N],[12,"wl_proxy_add_listener","","",16,N],[12,"wl_proxy_get_listener","","",16,N],[12,"wl_proxy_add_dispatcher","","",16,N],[12,"wl_proxy_marshal_array_constructor","","",16,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",16,N],[12,"wl_proxy_marshal_array","","",16,N],[12,"wl_proxy_set_user_data","","",16,N],[12,"wl_proxy_get_user_data","","",16,N],[12,"wl_proxy_get_id","","",16,N],[12,"wl_proxy_get_class","","",16,N],[12,"wl_proxy_set_queue","","",16,N],[12,"wl_proxy_get_version","","",16,N],[12,"wl_proxy_create_wrapper","","",16,N],[12,"wl_proxy_wrapper_destroy","","",16,N],[12,"wl_log_set_handler_client","","",16,N],[12,"wl_list_init","","",16,N],[12,"wl_list_insert","","",16,N],[12,"wl_list_remove","","",16,N],[12,"wl_list_length","","",16,N],[12,"wl_list_empty","","",16,N],[12,"wl_list_insert_list","","",16,N],[12,"wl_array_init","","",16,N],[12,"wl_array_release","","",16,N],[12,"wl_array_add","","",16,N],[12,"wl_array_copy","","",16,N],[12,"wl_proxy_marshal_constructor","","",16,N],[12,"wl_proxy_marshal_constructor_versioned","","",16,N],[12,"wl_proxy_marshal","","",16,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"common","wayland_client::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_client::sys::common","",N,N],[12,"name","","",17,N],[12,"signature","","",17,N],[12,"types","","",17,N],[3,"wl_interface","","",N,N],[12,"name","","",18,N],[12,"version","","",18,N],[12,"request_count","","",18,N],[12,"requests","","",18,N],[12,"event_count","","",18,N],[12,"events","","",18,N],[3,"wl_list","","",N,N],[12,"prev","","",19,N],[12,"next","","",19,N],[3,"wl_array","","",N,N],[12,"size","","",20,N],[12,"alloc","","",20,N],[12,"data","","",20,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",21,N],[12,"u","","",21,N],[12,"f","","",21,N],[12,"s","","",21,N],[12,"o","","",21,N],[12,"n","","",21,N],[12,"a","","",21,N],[12,"h","","",21,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"protocol_interfaces","wayland_client::sys","",N,N],[7,"wl_display_requests","wayland_client::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[0,"protocol","wayland_client","Generated interfaces for the core wayland protocol",N,N],[0,"wl_display","wayland_client::protocol","core global object",N,N],[3,"WlDisplay","wayland_client::protocol::wl_display","",N,N],[4,"Error","","global error values",N,N],[13,"InvalidObject","","server couldn't find object",22,N],[13,"InvalidMethod","","method doesn't exist on the specified interface",22,N],[13,"NoMemory","","server is out of memory",22,N],[4,"Request","","",N,N],[13,"Sync","","asynchronous roundtrip",23,N],[12,"callback","wayland_client::protocol::wl_display::Request","",23,N],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",23,N],[12,"registry","wayland_client::protocol::wl_display::Request","",23,N],[4,"Event","wayland_client::protocol::wl_display","",N,N],[13,"Error","","fatal error event",24,N],[12,"object_id","wayland_client::protocol::wl_display::Event","",24,N],[12,"code","","",24,N],[12,"message","","",24,N],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",24,N],[12,"id","wayland_client::protocol::wl_display::Event","",24,N],[8,"RequestsTrait","wayland_client::protocol::wl_display","",N,N],[10,"sync","","asynchronous roundtrip",25,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_registry","","get global registry object",25,[[["self"],["f"]],["result",["proxy"]]]],[0,"wl_registry","wayland_client::protocol","global registry object",N,N],[3,"WlRegistry","wayland_client::protocol::wl_registry","",N,N],[4,"Request","","",N,N],[13,"Bind","","bind an object to the display",26,N],[12,"name","wayland_client::protocol::wl_registry::Request","",26,N],[12,"id","","",26,N],[4,"Event","wayland_client::protocol::wl_registry","",N,N],[13,"Global","","announce global object",27,N],[12,"name","wayland_client::protocol::wl_registry::Event","",27,N],[12,"interface","","",27,N],[12,"version","","",27,N],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",27,N],[12,"name","wayland_client::protocol::wl_registry::Event","",27,N],[8,"RequestsTrait","wayland_client::protocol::wl_registry","",N,N],[10,"bind","","bind an object to the display",28,[[["self"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[0,"wl_callback","wayland_client::protocol","callback object",N,N],[3,"WlCallback","wayland_client::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",29,N],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",29,N],[8,"RequestsTrait","wayland_client::protocol::wl_callback","",N,N],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",30,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,N],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",30,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,N],[4,"Event","wayland_client::protocol::wl_compositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_surface","","create new surface",31,[[["self"],["f"]],["result",["proxy"]]]],[10,"create_region","","create new region",31,[[["self"],["f"]],["result",["proxy"]]]],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",32,N],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",32,N],[12,"offset","","",32,N],[12,"width","","",32,N],[12,"height","","",32,N],[12,"stride","","",32,N],[12,"format","","",32,N],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",32,N],[13,"Resize","","change the size of the pool mapping",32,N],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",32,N],[4,"Event","wayland_client::protocol::wl_shm_pool","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_buffer","","create a buffer from the pool",33,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the pool",33,N],[10,"resize","","change the size of the pool mapping",33,N],[0,"wl_shm","wayland_client::protocol","shared memory support",N,N],[3,"WlShm","wayland_client::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",34,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",34,N],[13,"InvalidFd","","mmapping the file descriptor failed",34,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",35,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",35,N],[13,"C8","","8-bit color index format, [7:0] C",35,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",35,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",35,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",35,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",35,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",35,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",35,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",35,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",35,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",35,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",35,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",35,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",35,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",35,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",35,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",35,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",35,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",35,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",35,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",35,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",35,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",35,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",35,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",35,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",35,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",35,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",35,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",35,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",35,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",35,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",35,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",35,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",35,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",35,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",35,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",35,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",35,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",35,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",35,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",35,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",35,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",35,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",35,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",35,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",35,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",35,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",35,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",36,N],[12,"id","wayland_client::protocol::wl_shm::Request","",36,N],[12,"fd","","",36,N],[12,"size","","",36,N],[4,"Event","wayland_client::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",37,N],[12,"format","wayland_client::protocol::wl_shm::Event","",37,N],[8,"RequestsTrait","wayland_client::protocol::wl_shm","",N,N],[10,"create_pool","","create a shm pool",38,[[["self"],["rawfd"],["i32"],["f"]],["result",["proxy"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",39,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",40,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy a buffer",41,N],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",42,N],[13,"InvalidActionMask","","action mask contains invalid values",42,N],[13,"InvalidAction","","action argument has an invalid value",42,N],[13,"InvalidOffer","","offer doesn't accept this request",42,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",43,N],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"mime_type","","",43,N],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",43,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"fd","","",43,N],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",43,N],[13,"Finish","","the offer will no longer be used",43,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",43,N],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"preferred_action","","",43,N],[4,"Event","wayland_client::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",44,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",44,N],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",44,N],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",44,N],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",44,N],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",44,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_offer","",N,N],[10,"accept","","accept one of the offered mime types",45,N],[10,"receive","","request that the data is transferred",45,N],[10,"destroy","","destroy data offer",45,N],[10,"finish","","the offer will no longer be used",45,N],[10,"set_actions","","set the available/preferred drag-and-drop actions",45,N],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",46,N],[13,"InvalidSource","","source doesn't accept this request",46,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",47,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",47,N],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",47,N],[13,"SetActions","","set the available drag-and-drop actions",47,N],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",47,N],[4,"Event","wayland_client::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",48,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,N],[13,"Send","wayland_client::protocol::wl_data_source","send the data",48,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,N],[12,"fd","","",48,N],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",48,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",48,N],[13,"DndFinished","","the drag-and-drop operation concluded",48,N],[13,"Action","","notify the selected action",48,N],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",48,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_source","",N,N],[10,"offer","","add an offered mime type",49,N],[10,"destroy","","destroy the data source",49,N],[10,"set_actions","","set the available drag-and-drop actions",49,N],[0,"wl_data_device","wayland_client::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",50,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",51,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,N],[12,"origin","","",51,N],[12,"icon","","",51,N],[12,"serial","","",51,N],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",51,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,N],[12,"serial","","",51,N],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",51,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",52,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,N],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",52,N],[12,"serial","wayland_client::protocol::wl_data_device::Event","",52,N],[12,"surface","","",52,N],[12,"x","","",52,N],[12,"y","","",52,N],[12,"id","","",52,N],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",52,N],[13,"Motion","","drag-and-drop session motion",52,N],[12,"time","wayland_client::protocol::wl_data_device::Event","",52,N],[12,"x","","",52,N],[12,"y","","",52,N],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",52,N],[13,"Selection","","advertise new selection",52,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_device","",N,N],[10,"start_drag","","start drag-and-drop operation",53,N],[10,"set_selection","","copy data to the selection",53,N],[10,"release","","destroy data device",53,N],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",N,N],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",54,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,N],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",54,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,N],[12,"seat","","",54,N],[4,"Event","wayland_client::protocol::wl_data_device_manager","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_data_source","","create a new data source",55,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_data_device","","create a new data device",55,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_client::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",56,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",57,N],[12,"id","wayland_client::protocol::wl_shell::Request","",57,N],[12,"surface","","",57,N],[4,"Event","wayland_client::protocol::wl_shell","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_shell_surface","","create a shell surface from a surface",58,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",59,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",59,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",59,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",59,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",60,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[12,"edges","","",60,N],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",60,N],[13,"SetTransient","","make the surface a transient surface",60,N],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"x","","",60,N],[12,"y","","",60,N],[12,"flags","","",60,N],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",60,N],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"framerate","","",60,N],[12,"output","","",60,N],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[12,"parent","","",60,N],[12,"x","","",60,N],[12,"y","","",60,N],[12,"flags","","",60,N],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",60,N],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",60,N],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",60,N],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",60,N],[4,"Event","wayland_client::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",61,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",61,N],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",61,N],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",61,N],[8,"RequestsTrait","","",N,N],[10,"pong","","respond to a ping event",62,N],[10,"_move","","start an interactive move",62,N],[10,"resize","","start an interactive resize",62,N],[10,"set_toplevel","","make the surface a toplevel surface",62,N],[10,"set_transient","","make the surface a transient surface",62,N],[10,"set_fullscreen","","make the surface a fullscreen surface",62,N],[10,"set_popup","","make the surface a popup surface",62,N],[10,"set_maximized","","make the surface a maximized surface",62,N],[10,"set_title","","set surface title",62,N],[10,"set_class","","set surface class",62,N],[0,"wl_surface","wayland_client::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_client::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",63,N],[13,"InvalidTransform","","buffer transform value is invalid",63,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",64,N],[13,"Attach","","set the surface contents",64,N],[12,"buffer","wayland_client::protocol::wl_surface::Request","",64,N],[12,"x","","",64,N],[12,"y","","",64,N],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",64,N],[12,"x","wayland_client::protocol::wl_surface::Request","",64,N],[12,"y","","",64,N],[12,"width","","",64,N],[12,"height","","",64,N],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",64,N],[12,"callback","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",64,N],[12,"region","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",64,N],[12,"region","wayland_client::protocol::wl_surface::Request","",64,N],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",64,N],[13,"SetBufferTransform","","sets the buffer transformation",64,N],[12,"transform","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",64,N],[12,"scale","wayland_client::protocol::wl_surface::Request","",64,N],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",64,N],[12,"x","wayland_client::protocol::wl_surface::Request","",64,N],[12,"y","","",64,N],[12,"width","","",64,N],[12,"height","","",64,N],[4,"Event","wayland_client::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",65,N],[12,"output","wayland_client::protocol::wl_surface::Event","",65,N],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",65,N],[12,"output","wayland_client::protocol::wl_surface::Event","",65,N],[8,"RequestsTrait","wayland_client::protocol::wl_surface","",N,N],[10,"destroy","","delete surface",66,N],[10,"attach","","set the surface contents",66,N],[10,"damage","","mark part of the surface damaged",66,N],[10,"frame","","request a frame throttling hint",66,[[["self"],["f"]],["result",["proxy"]]]],[10,"set_opaque_region","","set opaque region",66,N],[10,"set_input_region","","set input region",66,N],[10,"commit","","commit pending surface state",66,N],[10,"set_buffer_transform","","sets the buffer transformation",66,N],[10,"set_buffer_scale","","sets the buffer scaling factor",66,N],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",66,N],[0,"wl_seat","wayland_client::protocol","group of input devices",N,N],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",67,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",68,N],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",68,N],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",68,N],[12,"name","wayland_client::protocol::wl_seat::Event","",68,N],[8,"RequestsTrait","wayland_client::protocol::wl_seat","",N,N],[10,"get_pointer","","return pointer object",69,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_keyboard","","return keyboard object",69,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_touch","","return touch object",69,[[["self"],["f"]],["result",["proxy"]]]],[10,"release","","release the seat object",69,N],[0,"wl_pointer","wayland_client::protocol","pointer input device",N,N],[3,"WlPointer","wayland_client::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",70,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",71,N],[13,"Pressed","","the button is pressed",71,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",72,N],[13,"HorizontalScroll","","horizontal axis",72,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",73,N],[13,"Finger","","finger on a touch surface",73,N],[13,"Continuous","","continuous coordinate space",73,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",74,N],[12,"serial","wayland_client::protocol::wl_pointer::Request","",74,N],[12,"surface","","",74,N],[12,"hotspot_x","","",74,N],[12,"hotspot_y","","",74,N],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",74,N],[4,"Event","","",N,N],[13,"Enter","","enter event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface","","",75,N],[12,"surface_x","","",75,N],[12,"surface_y","","",75,N],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface","","",75,N],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface_x","","",75,N],[12,"surface_y","","",75,N],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"time","","",75,N],[12,"button","","",75,N],[12,"state","","",75,N],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"axis","","",75,N],[12,"value","","",75,N],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",75,N],[13,"AxisSource","","axis source event",75,N],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",75,N],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"axis","","",75,N],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",75,N],[12,"axis","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"discrete","","",75,N],[8,"RequestsTrait","wayland_client::protocol::wl_pointer","",N,N],[10,"set_cursor","","set the pointer surface",76,N],[10,"release","","release the pointer object",76,N],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",77,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",77,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",78,N],[13,"Pressed","","key is pressed",78,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",79,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",80,N],[12,"format","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"fd","","",80,N],[12,"size","","",80,N],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"surface","","",80,N],[12,"keys","","",80,N],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"surface","","",80,N],[13,"Key","wayland_client::protocol::wl_keyboard","key event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"time","","",80,N],[12,"key","","",80,N],[12,"state","","",80,N],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"mods_depressed","","",80,N],[12,"mods_latched","","",80,N],[12,"mods_locked","","",80,N],[12,"group","","",80,N],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",80,N],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"delay","","",80,N],[8,"RequestsTrait","wayland_client::protocol::wl_keyboard","",N,N],[10,"release","","release the keyboard object",81,N],[0,"wl_touch","wayland_client::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_client::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",82,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",83,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,N],[12,"time","","",83,N],[12,"surface","","",83,N],[12,"id","","",83,N],[12,"x","","",83,N],[12,"y","","",83,N],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",83,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,N],[12,"time","","",83,N],[12,"id","","",83,N],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",83,N],[12,"time","wayland_client::protocol::wl_touch::Event","",83,N],[12,"id","","",83,N],[12,"x","","",83,N],[12,"y","","",83,N],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",83,N],[13,"Cancel","","touch session cancelled",83,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the touch object",84,N],[0,"wl_output","wayland_client::protocol","compositor output region",N,N],[3,"Mode","wayland_client::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",85,N],[13,"None","","no geometry",85,N],[13,"HorizontalRgb","","horizontal RGB",85,N],[13,"HorizontalBgr","","horizontal BGR",85,N],[13,"VerticalRgb","","vertical RGB",85,N],[13,"VerticalBgr","","vertical BGR",85,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",86,N],[13,"_90","","90 degrees counter-clockwise",86,N],[13,"_180","","180 degrees counter-clockwise",86,N],[13,"_270","","270 degrees counter-clockwise",86,N],[13,"Flipped","","180 degree flip around a vertical axis",86,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",86,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",86,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",86,N],[4,"Request","","",N,N],[13,"Release","","release the output object",87,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",88,N],[12,"x","wayland_client::protocol::wl_output::Event","",88,N],[12,"y","","",88,N],[12,"physical_width","","",88,N],[12,"physical_height","","",88,N],[12,"subpixel","","",88,N],[12,"make","","",88,N],[12,"model","","",88,N],[12,"transform","","",88,N],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",88,N],[12,"flags","wayland_client::protocol::wl_output::Event","",88,N],[12,"width","","",88,N],[12,"height","","",88,N],[12,"refresh","","",88,N],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",88,N],[13,"Scale","","output scaling properties",88,N],[12,"factor","wayland_client::protocol::wl_output::Event","",88,N],[8,"RequestsTrait","wayland_client::protocol::wl_output","",N,N],[10,"release","","release the output object",89,N],[0,"wl_region","wayland_client::protocol","region interface",N,N],[3,"WlRegion","wayland_client::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",90,N],[13,"Add","","add rectangle to region",90,N],[12,"x","wayland_client::protocol::wl_region::Request","",90,N],[12,"y","","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",90,N],[12,"x","wayland_client::protocol::wl_region::Request","",90,N],[12,"y","","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[4,"Event","wayland_client::protocol::wl_region","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy region",91,N],[10,"add","","add rectangle to region",91,N],[10,"subtract","","subtract rectangle from region",91,N],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",92,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",93,N],[13,"GetSubsurface","","give a surface the role sub-surface",93,N],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",93,N],[12,"surface","","",93,N],[12,"parent","","",93,N],[4,"Event","wayland_client::protocol::wl_subcompositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the subcompositor interface",94,N],[10,"get_subsurface","","give a surface the role sub-surface",94,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",95,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",96,N],[13,"SetPosition","","reposition the sub-surface",96,N],[12,"x","wayland_client::protocol::wl_subsurface::Request","",96,N],[12,"y","","",96,N],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,N],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,N],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",96,N],[13,"SetDesync","","set sub-surface to desynchronized mode",96,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove sub-surface interface",97,N],[10,"set_position","","reposition the sub-surface",97,N],[10,"place_above","","restack the sub-surface",97,N],[10,"place_below","","restack the sub-surface",97,N],[10,"set_sync","","set sub-surface to synchronized mode",97,N],[10,"set_desync","","set sub-surface to desynchronized mode",97,N],[11,"clone","wayland_client::protocol::wl_display","",22,[[["self"]],["error"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"eq","","",22,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",22,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",22,[[["self"]],["u32"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",24,N],[11,"into_raw","","",24,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"c_interface","","",98,N],[11,"sync","wayland_client","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_registry","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",26,N],[11,"as_raw_c_in","","",26,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"c_interface","","",99,N],[11,"bind","wayland_client","",9,[[["self"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",100,[[["self"]],["bool"]]],[11,"opcode","","",100,[[["self"]],["u16"]]],[11,"child","","",100,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",100,N],[11,"into_raw","","",100,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",100,N],[11,"as_raw_c_in","","",100,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"c_interface","","",101,N],[11,"is_destructor","wayland_client::protocol::wl_compositor","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",102,[[["self"]],["bool"]]],[11,"opcode","","",102,[[["self"]],["u16"]]],[11,"child","","",102,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",102,N],[11,"into_raw","","",102,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",102,N],[11,"as_raw_c_in","","",102,[[["self"],["f"]],["t"]]],[11,"c_interface","","",103,N],[11,"create_surface","wayland_client","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"create_region","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",32,[[["self"]],["bool"]]],[11,"opcode","","",32,[[["self"]],["u16"]]],[11,"child","","",32,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",32,N],[11,"into_raw","","",32,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",32,N],[11,"as_raw_c_in","","",32,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",104,[[["self"]],["bool"]]],[11,"opcode","","",104,[[["self"]],["u16"]]],[11,"child","","",104,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",104,N],[11,"into_raw","","",104,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"c_interface","","",105,N],[11,"create_buffer","wayland_client","",9,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"],["f"]],["result",["proxy"]]]],[11,"destroy","","",9,N],[11,"resize","","",9,N],[11,"clone","wayland_client::protocol::wl_shm","",34,[[["self"]],["error"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"eq","","",34,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",34,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"clone","","",35,[[["self"]],["format"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"eq","","",35,[[["self"],["format"]],["bool"]]],[11,"from_raw","","",35,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",35,[[["self"]],["u32"]]],[11,"is_destructor","","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"c_interface","","",106,N],[11,"create_pool","wayland_client","",9,[[["self"],["rawfd"],["i32"],["f"]],["result",["proxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"c_interface","","",107,N],[11,"destroy","wayland_client","",9,N],[11,"clone","wayland_client::protocol::wl_data_offer","",42,[[["self"]],["error"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"eq","","",42,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",42,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",42,[[["self"]],["u32"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"c_interface","","",108,N],[11,"accept","wayland_client","",9,N],[11,"receive","","",9,N],[11,"destroy","","",9,N],[11,"finish","","",9,N],[11,"set_actions","","",9,N],[11,"clone","wayland_client::protocol::wl_data_source","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",47,N],[11,"into_raw","","",47,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",47,N],[11,"as_raw_c_in","","",47,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",48,[[["self"]],["bool"]]],[11,"opcode","","",48,[[["self"]],["u16"]]],[11,"child","","",48,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",48,N],[11,"into_raw","","",48,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",48,N],[11,"as_raw_c_in","","",48,[[["self"],["f"]],["t"]]],[11,"c_interface","","",109,N],[11,"offer","wayland_client","",9,N],[11,"destroy","","",9,N],[11,"set_actions","","",9,N],[11,"clone","wayland_client::protocol::wl_data_device","",50,[[["self"]],["error"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"eq","","",50,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",50,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",50,[[["self"]],["u32"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",52,[[["self"]],["bool"]]],[11,"opcode","","",52,[[["self"]],["u16"]]],[11,"child","","",52,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",52,N],[11,"into_raw","","",52,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",52,N],[11,"as_raw_c_in","","",52,[[["self"],["f"]],["t"]]],[11,"c_interface","","",110,N],[11,"start_drag","wayland_client","",9,N],[11,"set_selection","","",9,N],[11,"release","","",9,N],[11,"eq","wayland_client::protocol::wl_data_device_manager","",111,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"clone","","",111,[[["self"]],["dndaction"]]],[11,"partial_cmp","","",111,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"cmp","","",111,[[["self"],["dndaction"]],["ordering"]]],[11,"hash","","",111,N],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[18,"None","","no action",111,N],[18,"Copy","","copy action",111,N],[18,"Move","","move action",111,N],[18,"Ask","","ask action",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",111,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,[[["self"],["dndaction"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor_assign","","Adds the set of flags.",111,[[["self"],["dndaction"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor_assign","","Toggles the set of flags.",111,[[["self"],["dndaction"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,[[["self"],["dndaction"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,[[["self"],["dndaction"]]]],[11,"not","","Returns the complement of this set of flags.",111,[[["self"]],["dndaction"]]],[11,"extend","","",111,[[["self"],["t"]]]],[11,"from_iter","","",111,[[["t"]],["dndaction"]]],[11,"from_raw","","",111,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",111,[[["self"]],["u32"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",54,N],[11,"as_raw_c_in","","",54,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",112,[[["self"]],["bool"]]],[11,"opcode","","",112,[[["self"]],["u16"]]],[11,"child","","",112,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",112,N],[11,"into_raw","","",112,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",112,N],[11,"as_raw_c_in","","",112,[[["self"],["f"]],["t"]]],[11,"c_interface","","",113,N],[11,"create_data_source","wayland_client","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_data_device","","",9,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[11,"clone","wayland_client::protocol::wl_shell","",56,[[["self"]],["error"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"eq","","",56,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",56,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"is_destructor","","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",57,N],[11,"into_raw","","",57,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",114,N],[11,"into_raw","","",114,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",114,N],[11,"as_raw_c_in","","",114,[[["self"],["f"]],["t"]]],[11,"c_interface","","",115,N],[11,"get_shell_surface","wayland_client","",9,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",116,[[["self"],["resize"]],["bool"]]],[11,"ne","","",116,[[["self"],["resize"]],["bool"]]],[11,"clone","","",116,[[["self"]],["resize"]]],[11,"partial_cmp","","",116,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",116,[[["self"],["resize"]],["bool"]]],[11,"le","","",116,[[["self"],["resize"]],["bool"]]],[11,"gt","","",116,[[["self"],["resize"]],["bool"]]],[11,"ge","","",116,[[["self"],["resize"]],["bool"]]],[11,"cmp","","",116,[[["self"],["resize"]],["ordering"]]],[11,"hash","","",116,N],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[18,"None","","no edge",116,N],[18,"Top","","top edge",116,N],[18,"Bottom","","bottom edge",116,N],[18,"Left","","left edge",116,N],[18,"TopLeft","","top and left edges",116,N],[18,"BottomLeft","","bottom and left edges",116,N],[18,"Right","","right edge",116,N],[18,"TopRight","","top and right edges",116,N],[18,"BottomRight","","bottom and right edges",116,N],[11,"empty","","Returns an empty set of flags.",116,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",116,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",116,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",116,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",116,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",116,[[["self"],["resize"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"bitor_assign","","Adds the set of flags.",116,[[["self"],["resize"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,[[["self"],["resize"]],["resize"]]],[11,"bitxor_assign","","Toggles the set of flags.",116,[[["self"],["resize"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",116,[[["self"],["resize"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"sub_assign","","Disables all flags enabled in the set.",116,[[["self"],["resize"]]]],[11,"not","","Returns the complement of this set of flags.",116,[[["self"]],["resize"]]],[11,"extend","","",116,[[["self"],["t"]]]],[11,"from_iter","","",116,[[["t"]],["resize"]]],[11,"from_raw","","",116,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",116,[[["self"]],["u32"]]],[11,"eq","","",117,[[["self"],["transient"]],["bool"]]],[11,"ne","","",117,[[["self"],["transient"]],["bool"]]],[11,"clone","","",117,[[["self"]],["transient"]]],[11,"partial_cmp","","",117,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",117,[[["self"],["transient"]],["bool"]]],[11,"le","","",117,[[["self"],["transient"]],["bool"]]],[11,"gt","","",117,[[["self"],["transient"]],["bool"]]],[11,"ge","","",117,[[["self"],["transient"]],["bool"]]],[11,"cmp","","",117,[[["self"],["transient"]],["ordering"]]],[11,"hash","","",117,N],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[18,"Inactive","","do not set keyboard focus",117,N],[11,"empty","","Returns an empty set of flags.",117,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",117,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,[[["self"],["transient"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["self"],["transient"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,[[["self"],["transient"]],["transient"]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["self"],["transient"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["self"],["transient"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["self"],["transient"]]]],[11,"not","","Returns the complement of this set of flags.",117,[[["self"]],["transient"]]],[11,"extend","","",117,[[["self"],["t"]]]],[11,"from_iter","","",117,[[["t"]],["transient"]]],[11,"from_raw","","",117,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",117,[[["self"]],["u32"]]],[11,"clone","","",59,[[["self"]],["fullscreenmethod"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"eq","","",59,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"from_raw","","",59,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"c_interface","","",118,N],[11,"pong","wayland_client","",9,N],[11,"_move","","",9,N],[11,"resize","","",9,N],[11,"set_toplevel","","",9,N],[11,"set_transient","","",9,N],[11,"set_fullscreen","","",9,N],[11,"set_popup","","",9,N],[11,"set_maximized","","",9,N],[11,"set_title","","",9,N],[11,"set_class","","",9,N],[11,"clone","wayland_client::protocol::wl_surface","",63,[[["self"]],["error"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"eq","","",63,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",63,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"is_destructor","","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",64,N],[11,"into_raw","","",64,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",65,[[["self"]],["bool"]]],[11,"opcode","","",65,[[["self"]],["u16"]]],[11,"child","","",65,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",65,N],[11,"into_raw","","",65,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",65,N],[11,"as_raw_c_in","","",65,[[["self"],["f"]],["t"]]],[11,"c_interface","","",119,N],[11,"destroy","wayland_client","",9,N],[11,"attach","","",9,N],[11,"damage","","",9,N],[11,"frame","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"set_opaque_region","","",9,N],[11,"set_input_region","","",9,N],[11,"commit","","",9,N],[11,"set_buffer_transform","","",9,N],[11,"set_buffer_scale","","",9,N],[11,"damage_buffer","","",9,N],[11,"eq","wayland_client::protocol::wl_seat","",120,[[["self"],["capability"]],["bool"]]],[11,"ne","","",120,[[["self"],["capability"]],["bool"]]],[11,"clone","","",120,[[["self"]],["capability"]]],[11,"partial_cmp","","",120,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",120,[[["self"],["capability"]],["bool"]]],[11,"le","","",120,[[["self"],["capability"]],["bool"]]],[11,"gt","","",120,[[["self"],["capability"]],["bool"]]],[11,"ge","","",120,[[["self"],["capability"]],["bool"]]],[11,"cmp","","",120,[[["self"],["capability"]],["ordering"]]],[11,"hash","","",120,N],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[18,"Pointer","","the seat has pointer devices",120,N],[18,"Keyboard","","the seat has one or more keyboards",120,N],[18,"Touch","","the seat has touch devices",120,N],[11,"empty","","Returns an empty set of flags.",120,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",120,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",120,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",120,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",120,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",120,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",120,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",120,[[["self"],["capability"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["self"],["capability"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",120,[[["self"],["capability"]],["capability"]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["self"],["capability"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["self"],["capability"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["self"],["capability"]]]],[11,"not","","Returns the complement of this set of flags.",120,[[["self"]],["capability"]]],[11,"extend","","",120,[[["self"],["t"]]]],[11,"from_iter","","",120,[[["t"]],["capability"]]],[11,"from_raw","","",120,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",120,[[["self"]],["u32"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",68,[[["self"]],["bool"]]],[11,"opcode","","",68,[[["self"]],["u16"]]],[11,"child","","",68,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",68,N],[11,"into_raw","","",68,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",68,N],[11,"as_raw_c_in","","",68,[[["self"],["f"]],["t"]]],[11,"c_interface","","",121,N],[11,"get_pointer","wayland_client","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_keyboard","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_touch","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"release","","",9,N],[11,"clone","wayland_client::protocol::wl_pointer","",70,[[["self"]],["error"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"eq","","",70,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",70,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"clone","","",71,[[["self"]],["buttonstate"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"eq","","",71,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",71,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",71,[[["self"]],["u32"]]],[11,"clone","","",72,[[["self"]],["axis"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"eq","","",72,[[["self"],["axis"]],["bool"]]],[11,"from_raw","","",72,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"clone","","",73,[[["self"]],["axissource"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"eq","","",73,[[["self"],["axissource"]],["bool"]]],[11,"from_raw","","",73,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[11,"is_destructor","","",74,[[["self"]],["bool"]]],[11,"opcode","","",74,[[["self"]],["u16"]]],[11,"child","","",74,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",74,N],[11,"into_raw","","",74,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",74,N],[11,"as_raw_c_in","","",74,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",75,N],[11,"into_raw","","",75,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",75,N],[11,"as_raw_c_in","","",75,[[["self"],["f"]],["t"]]],[11,"c_interface","","",122,N],[11,"set_cursor","wayland_client","",9,N],[11,"release","","",9,N],[11,"clone","wayland_client::protocol::wl_keyboard","",77,[[["self"]],["keymapformat"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"eq","","",77,[[["self"],["keymapformat"]],["bool"]]],[11,"from_raw","","",77,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",77,[[["self"]],["u32"]]],[11,"clone","","",78,[[["self"]],["keystate"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"eq","","",78,[[["self"],["keystate"]],["bool"]]],[11,"from_raw","","",78,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",80,[[["self"]],["bool"]]],[11,"opcode","","",80,[[["self"]],["u16"]]],[11,"child","","",80,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",80,N],[11,"into_raw","","",80,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",80,N],[11,"as_raw_c_in","","",80,[[["self"],["f"]],["t"]]],[11,"c_interface","","",123,N],[11,"release","wayland_client","",9,N],[11,"is_destructor","wayland_client::protocol::wl_touch","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",82,N],[11,"into_raw","","",82,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",82,N],[11,"as_raw_c_in","","",82,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"opcode","","",83,[[["self"]],["u16"]]],[11,"child","","",83,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",83,N],[11,"into_raw","","",83,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",83,N],[11,"as_raw_c_in","","",83,[[["self"],["f"]],["t"]]],[11,"c_interface","","",124,N],[11,"release","wayland_client","",9,N],[11,"clone","wayland_client::protocol::wl_output","",85,[[["self"]],["subpixel"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"eq","","",85,[[["self"],["subpixel"]],["bool"]]],[11,"from_raw","","",85,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[11,"clone","","",86,[[["self"]],["transform"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"eq","","",86,[[["self"],["transform"]],["bool"]]],[11,"from_raw","","",86,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",86,[[["self"]],["u32"]]],[11,"eq","","",125,[[["self"],["mode"]],["bool"]]],[11,"ne","","",125,[[["self"],["mode"]],["bool"]]],[11,"clone","","",125,[[["self"]],["mode"]]],[11,"partial_cmp","","",125,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",125,[[["self"],["mode"]],["bool"]]],[11,"le","","",125,[[["self"],["mode"]],["bool"]]],[11,"gt","","",125,[[["self"],["mode"]],["bool"]]],[11,"ge","","",125,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",125,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",125,N],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[18,"Current","","indicates this is the current mode",125,N],[18,"Preferred","","indicates this is the preferred mode",125,N],[11,"empty","","Returns an empty set of flags.",125,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",125,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",125,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",125,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",125,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",125,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",125,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",125,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",125,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",125,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",125,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",125,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",125,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",125,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",125,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",125,[[["self"]],["mode"]]],[11,"extend","","",125,[[["self"],["t"]]]],[11,"from_iter","","",125,[[["t"]],["mode"]]],[11,"from_raw","","",125,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",125,[[["self"]],["u32"]]],[11,"is_destructor","","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",87,N],[11,"into_raw","","",87,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",88,[[["self"]],["bool"]]],[11,"opcode","","",88,[[["self"]],["u16"]]],[11,"child","","",88,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",88,N],[11,"into_raw","","",88,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",88,N],[11,"as_raw_c_in","","",88,[[["self"],["f"]],["t"]]],[11,"c_interface","","",126,N],[11,"release","wayland_client","",9,N],[11,"is_destructor","wayland_client::protocol::wl_region","",90,[[["self"]],["bool"]]],[11,"opcode","","",90,[[["self"]],["u16"]]],[11,"child","","",90,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",90,N],[11,"into_raw","","",90,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",90,N],[11,"as_raw_c_in","","",90,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",127,[[["self"]],["bool"]]],[11,"opcode","","",127,[[["self"]],["u16"]]],[11,"child","","",127,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",127,N],[11,"into_raw","","",127,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",127,N],[11,"as_raw_c_in","","",127,[[["self"],["f"]],["t"]]],[11,"c_interface","","",128,N],[11,"destroy","wayland_client","",9,N],[11,"add","","",9,N],[11,"subtract","","",9,N],[11,"clone","wayland_client::protocol::wl_subcompositor","",92,[[["self"]],["error"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"eq","","",92,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",92,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"is_destructor","","",93,[[["self"]],["bool"]]],[11,"opcode","","",93,[[["self"]],["u16"]]],[11,"child","","",93,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",93,N],[11,"into_raw","","",93,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",93,N],[11,"as_raw_c_in","","",93,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",129,[[["self"]],["bool"]]],[11,"opcode","","",129,[[["self"]],["u16"]]],[11,"child","","",129,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",129,N],[11,"into_raw","","",129,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",129,N],[11,"as_raw_c_in","","",129,[[["self"],["f"]],["t"]]],[11,"c_interface","","",130,N],[11,"destroy","wayland_client","",9,N],[11,"get_subsurface","","",9,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[11,"clone","wayland_client::protocol::wl_subsurface","",95,[[["self"]],["error"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"eq","","",95,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",95,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",95,[[["self"]],["u32"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"opcode","","",96,[[["self"]],["u16"]]],[11,"child","","",96,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",96,N],[11,"into_raw","","",96,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",131,[[["self"]],["bool"]]],[11,"opcode","","",131,[[["self"]],["u16"]]],[11,"child","","",131,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",131,N],[11,"into_raw","","",131,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"c_interface","","",132,N],[11,"destroy","wayland_client","",9,N],[11,"set_position","","",9,N],[11,"place_above","","",9,N],[11,"place_below","","",9,N],[11,"set_sync","","",9,N],[11,"set_desync","","",9,N],[8,"GlobalImplementor","","A trait for implementation of the global advertisement",N,N],[10,"new_global","","A new global of given interface has been instantiated and you are supposed to provide an implementation for it.",133,[[["self"],["newproxy"]],["proxy"]]],[11,"error","","A global was advertised but its version was lower than the minimal version you requested.",133,[[["self"],["u32"]]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"interest","","",6,[[["self"]],["ready"]]],[11,"pollopts","","",6,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",6,[[["self"],["f"]],["rc",["refcell"]]]],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",N,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"is_destructor","","",135,[[["self"]],["bool"]]],[11,"opcode","","",135,[[["self"]],["u16"]]],[11,"child","","",135,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",135,N],[11,"into_raw","","",135,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",135,N],[11,"as_raw_c_in","","",135,[[["self"],["f"]],["t"]]],[11,"c_interface","","",134,N],[11,"deref","wayland_client::sys::client","",136,[[["self"]],["waylandclient"]]],[11,"deref","","",137,[[["self"]],["option"]]],[11,"initialize","","",137,N],[11,"initialize","","",136,N],[11,"from","wayland_client","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"error","","A global was advertised but its version was lower than the minimal version you requested.",133,[[["self"],["u32"]]]],[11,"from","wayland_client::cursor","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","wayland_client::egl","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","wayland_client::sys::client","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"open","","",16,[[["str"]],["result",["waylandclient","dlerror"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","wayland_client::sys::common","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_display","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_registry","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_callback","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_compositor","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shm","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_buffer","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_offer","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_source","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_device","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","wayland_client::protocol::wl_data_device_manager","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shell","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","wayland_client::protocol::wl_shell_surface","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_surface","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","wayland_client::protocol::wl_seat","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_pointer","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_keyboard","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_touch","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","wayland_client::protocol::wl_output","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_region","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_subsurface","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlEglSurface"],[4,"ProxyMap"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"WlDisplay"],[3,"WlRegistry"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[3,"AnonymousObject"],[4,"NoMessage"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WAYLAND_CLIENT_OPTION"],[3,"QueueToken"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"]]};
searchIndex["wayland_commons"]={"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",N,N],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[0,"map","","Wayland objects map",N,N],[3,"Object","wayland_commons::map","The representation of a protocol object",N,N],[12,"interface","","Interface name of this object",0,N],[12,"version","","Version of this object",0,N],[12,"requests","","Description of the requests of this object",0,N],[12,"events","","Description of the events of this object",0,N],[12,"meta","","Metadata associated to this object (ex: its event queue client side)",0,N],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this event if any",0,N],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this request if any",0,N],[3,"ObjectMap","","A holder for the object store of a connection",N,N],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created objects IDs in the namespace",N,N],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation may attach to an object.",N,N],[10,"child","","Create the metadata for a child object",1,[[["self"]],["self"]]],[11,"clone","","",0,[[["self"]],["object"]]],[11,"from_interface","","Create an Object corresponding to given interface and version",0,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given event opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given request opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"is_interface","","Check whether this object is of given interface",0,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the message logic",0,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",2,[[],["objectmap"]]],[11,"find","","Find an object in the store",2,[[["self"],["u32"]],["option",["object"]]]],[11,"remove","","Remove an object from the store",2,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",2,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",2,[[["self"],["u32"],["f"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",2,[[["self"],["f"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",N,N],[3,"Socket","wayland_commons::socket","A wayland socket",N,N],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles buffering and conversion from/to wayland messages",N,N],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket message",N,N],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single socket message",N,N],[11,"send_msg","","Send a single message to the socket",3,N],[11,"rcv_msg","","Receive a single message from the socket",3,N],[11,"from_raw_fd","","",3,[[["rawfd"]],["socket"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"drop","","",3,[[["self"]]]],[11,"new","","Wrap a Socket into a Buffered Socket",4,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",4,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",4,[[["self"]],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",4,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",4,[[["self"],["message"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to prepare a new round of parsing.",4,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming buffers socket",4,[[["self"],["f"]],["result",["message","messageparseerror"]]]],[11,"read_messages","","Read and deserialize messages from the socket",4,[[["self"],["f1"],["f2"]],["nixresult",["result"]]]],[0,"utils","wayland_commons","Various utilities used for other implementations",N,N],[3,"UserData","wayland_commons::utils","A wrapper for user data, able to store any type, and correctly handling access from a wrong thread",N,N],[3,"UserDataMap","","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[11,"new_threadsafe","","Create a new `UserData` using a threadsafe type",5,[[["t"]],["userdata"]]],[11,"new","","Create a new `UserData` using a non-threadsafe type",5,[[["t"]],["userdata"]]],[11,"empty","","Create a new `UserData` containing nothing",5,[[],["userdata"]]],[11,"get","","Attempt to access the wrapped user data",5,[[["self"]],["option"]]],[11,"new","","Create a new map",6,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",6,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the wire format",N,N],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",N,N],[12,"name","","Name of this message",7,N],[12,"signature","","Signature of the message",7,N],[12,"since","","Minimum required version of the interface",7,N],[3,"Message","","A wire message",N,N],[12,"sender_id","","ID of the object sending this message",8,N],[12,"opcode","","Opcode of the message",8,N],[12,"args","","Arguments of the message",8,N],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",N,N],[13,"Int","","i32",9,N],[13,"Uint","","u32",9,N],[13,"Fixed","","fixed point, 1/256 precision",9,N],[13,"Str","","CString",9,N],[13,"Object","","id of a wayland object",9,N],[13,"NewId","","id of a newly created wayland object",9,N],[13,"Array","","Vec",9,N],[13,"Fd","","RawFd",9,N],[4,"Argument","","Enum of possible argument as recognized by the wire, including values",N,N],[13,"Int","","i32",10,N],[13,"Uint","","u32",10,N],[13,"Fixed","","fixed point, 1/256 precision",10,N],[13,"Str","","CString",10,N],[13,"Object","","id of a wayland object",10,N],[13,"NewId","","id of a newly created wayland object",10,N],[13,"Array","","Vec",10,N],[13,"Fd","","RawFd",10,N],[4,"MessageWriteError","","Error generated when trying to serialize a message into buffers",N,N],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",11,N],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",11,N],[4,"MessageParseError","","Error generated when trying to deserialize a message from buffers",N,N],[13,"MissingFD","","The message references a FD but the buffer FD is empty",12,N],[13,"MissingData","","More data is needed to deserialize the message",12,N],[13,"Malformed","","The message is malformed and cannot be parsed",12,N],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",N,[[["rawfd"]],["nixresult",["rawfd"]]]],[11,"clone","","",9,[[["self"]],["argumenttype"]]],[11,"eq","","",9,[[["self"],["argumenttype"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["argument"]]],[11,"eq","","",10,[[["self"],["argument"]],["bool"]]],[11,"ne","","",10,[[["self"],["argument"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"get_type","","Retrieve the type of a given argument instance",10,[[["self"]],["argumenttype"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["message"]]],[11,"eq","","",8,[[["self"],["message"]],["bool"]]],[11,"ne","","",8,[[["self"],["message"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["messagewriteerror"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["messageparseerror"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",8,N],[11,"from_raw","","Attempts to parse a single wayland message with the given signature.",8,N],[8,"MessageGroup","wayland_commons","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",13,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",13,N],[10,"opcode","","The opcode of this message",13,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",13,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",13,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",13,N],[10,"into_raw","","Turn this message into its raw representation",13,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",13,N],[10,"as_raw_c_in","","Build a C representation of this message",13,[[["self"],["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",14,N],[16,"Event","","Set of events associated to this interface",14,N],[18,"NAME","","Name of this interface",14,N],[18,"VERSION","","Maximum supported version of this interface",14,N],[10,"c_interface","","Pointer to the C representation of this interface",14,N],[11,"c_interface","","",15,N],[11,"is_destructor","","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"child","","",16,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","wayland_commons::map","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_commons::utils","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_protocols"]={"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",N,N],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",N,N],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",N,N],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,N],[13,"CursorPlane","","compositor has a separate cursor plane",0,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",1,N],[13,"Center","","center the surface on the output",1,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",1,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",1,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",1,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",2,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",3,N],[13,"PresentSurface","","present surface for display",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"method","","",3,N],[12,"output","","",3,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"output","","",3,N],[12,"framerate","","",3,N],[12,"feedback","","",3,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",4,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",4,N],[8,"RequestsTrait","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[10,"release","","release the wl_fullscreen_shell interface",5,N],[10,"present_surface","","present surface for display",5,N],[10,"present_surface_for_mode","","present surface for display at a particular mode",5,[[["self"],["proxy"],["proxy"],["i32"],["f"]],["result",["proxy"]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",6,N],[13,"ModeFailed","","mode switch failed",6,N],[13,"PresentCancelled","","mode switch cancelled",6,N],[8,"RequestsTrait","","",N,N],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",7,N],[13,"CursorPlane","","compositor has a separate cursor plane",7,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",8,N],[13,"Center","","center the surface on the output",8,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",8,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",8,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",8,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",9,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",10,N],[13,"PresentSurface","","present surface for display",10,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,N],[12,"method","","",10,N],[12,"output","","",10,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",10,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,N],[12,"output","","",10,N],[12,"framerate","","",10,N],[12,"feedback","","",10,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",11,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",11,N],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",12,N],[13,"ModeFailed","","mode switch failed",12,N],[13,"PresentCancelled","","mode switch cancelled",12,N],[0,"c_interfaces","wayland_protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::fullscreen_shell::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwp_fullscreen_shell_v1_requests","","",N,N],[7,"zwp_fullscreen_shell_v1_events","","",N,N],[7,"zwp_fullscreen_shell_v1_interface","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"]],["capability"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",0,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",0,[[["self"]],["u32"]]],[11,"clone","","",1,[[["self"]],["presentmethod"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["presentmethod"]],["bool"]]],[11,"from_raw","","",1,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",1,[[["self"]],["u32"]]],[11,"clone","","",2,[[["self"]],["error"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",2,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",2,[[["self"]],["u32"]]],[11,"is_destructor","","",3,[[["self"]],["bool"]]],[11,"opcode","","",3,[[["self"]],["u16"]]],[11,"child","","",3,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",3,N],[11,"into_raw","","",3,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",3,N],[11,"as_raw_c_in","","",3,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"opcode","","",4,[[["self"]],["u16"]]],[11,"child","","",4,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",4,N],[11,"into_raw","","",4,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",4,N],[11,"as_raw_c_in","","",4,[[["self"],["f"]],["t"]]],[11,"c_interface","","",13,N],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",14,[[["self"]],["bool"]]],[11,"opcode","","",14,[[["self"]],["u16"]]],[11,"child","","",14,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",14,N],[11,"into_raw","","",14,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",14,N],[11,"as_raw_c_in","","",14,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",6,[[["self"]],["bool"]]],[11,"opcode","","",6,[[["self"]],["u16"]]],[11,"child","","",6,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",6,N],[11,"into_raw","","",6,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",6,N],[11,"as_raw_c_in","","",6,[[["self"],["f"]],["t"]]],[11,"c_interface","","",15,N],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,[[["self"]],["capability"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",7,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",7,[[["self"]],["u32"]]],[11,"clone","","",8,[[["self"]],["presentmethod"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["presentmethod"]],["bool"]]],[11,"from_raw","","",8,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",8,[[["self"]],["u32"]]],[11,"clone","","",9,[[["self"]],["error"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"eq","","",9,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",9,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",9,[[["self"]],["u32"]]],[11,"is_destructor","","",10,[[["self"]],["bool"]]],[11,"opcode","","",10,[[["self"]],["u16"]]],[11,"child","","",10,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",10,N],[11,"into_raw","","",10,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",10,N],[11,"as_raw_c_in","","",10,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",11,N],[11,"into_raw","","",11,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",11,N],[11,"as_raw_c_in","","",11,[[["self"],["f"]],["t"]]],[11,"c_interface","","",16,N],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",17,N],[11,"as_raw_c_in","","",17,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",12,[[["self"]],["bool"]]],[11,"opcode","","",12,[[["self"]],["u16"]]],[11,"child","","",12,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",12,N],[11,"into_raw","","",12,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",12,N],[11,"as_raw_c_in","","",12,[[["self"],["f"]],["t"]]],[11,"c_interface","","",18,N],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",N,N],[0,"v1","wayland_protocols::unstable::idle_inhibit","",N,N],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",19,N],[13,"CreateInhibitor","","create a new inhibitor object",19,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",19,N],[12,"surface","","",19,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",20,N],[10,"create_inhibitor","","create a new inhibitor object",20,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",21,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",22,N],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",23,N],[13,"CreateInhibitor","","create a new inhibitor object",23,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",23,N],[12,"surface","","",23,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",24,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::idle_inhibit::v1::c_interfaces","",N,N],[7,"zwp_idle_inhibit_manager_v1_requests","","",N,N],[7,"zwp_idle_inhibit_manager_v1_interface","","",N,N],[7,"zwp_idle_inhibitor_v1_requests","","",N,N],[7,"zwp_idle_inhibitor_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",19,N],[11,"as_raw_c_in","","",19,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",25,N],[11,"into_raw","","",25,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"c_interface","","",26,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",21,[[["self"]],["bool"]]],[11,"opcode","","",21,[[["self"]],["u16"]]],[11,"child","","",21,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",21,N],[11,"into_raw","","",21,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",21,N],[11,"as_raw_c_in","","",21,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"c_interface","","",28,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"c_interface","","",30,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",24,N],[11,"into_raw","","",24,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"c_interface","","",32,N],[0,"input_method","wayland_protocols::unstable","Input method protocol",N,N],[0,"v1","wayland_protocols::unstable::input_method","",N,N],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",33,N],[13,"CommitString","","commit string",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"text","","",33,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"text","","",33,N],[12,"commit","","",33,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",33,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"length","","",33,N],[12,"style","","",33,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",33,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",33,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"length","","",33,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",33,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"anchor","","",33,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,N],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"time","","",33,N],[12,"sym","","",33,N],[12,"state","","",33,N],[12,"modifiers","","",33,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",33,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"time","","",33,N],[12,"key","","",33,N],[12,"state","","",33,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"mods_depressed","","",33,N],[12,"mods_latched","","",33,N],[12,"mods_locked","","",33,N],[12,"group","","",33,N],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"language","","",33,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,N],[12,"direction","","",33,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",34,N],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,N],[12,"cursor","","",34,N],[12,"anchor","","",34,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,N],[13,"ContentType","","",34,N],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,N],[12,"purpose","","",34,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,N],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,N],[12,"index","","",34,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,N],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",35,N],[10,"commit_string","","commit string",35,N],[10,"preedit_string","","pre-edit string",35,N],[10,"preedit_styling","","pre-edit styling",35,N],[10,"preedit_cursor","","pre-edit cursor",35,N],[10,"delete_surrounding_text","","delete text",35,N],[10,"cursor_position","","set cursor to a new position",35,N],[10,"modifiers_map","","",35,N],[10,"keysym","","keysym",35,N],[10,"grab_keyboard","","grab hardware keyboard",35,[[["self"],["f"]],["result",["proxy"]]]],[10,"key","","forward key event",35,N],[10,"modifiers","","forward modifiers event",35,N],[10,"language","","",35,N],[10,"text_direction","","",35,N],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",36,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",36,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",36,N],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",36,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",37,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",37,N],[12,"surface","","",37,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_input_panel_surface","","",38,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",39,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",40,N],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",40,N],[12,"position","","",40,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",40,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_toplevel","","set the surface type as a keyboard",41,N],[10,"set_overlay_panel","","set the surface type as an overlay panel",41,N],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",42,N],[13,"CommitString","","commit string",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"text","","",42,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"text","","",42,N],[12,"commit","","",42,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",42,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"length","","",42,N],[12,"style","","",42,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",42,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",42,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"length","","",42,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",42,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"anchor","","",42,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,N],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"time","","",42,N],[12,"sym","","",42,N],[12,"state","","",42,N],[12,"modifiers","","",42,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",42,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"time","","",42,N],[12,"key","","",42,N],[12,"state","","",42,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"mods_depressed","","",42,N],[12,"mods_latched","","",42,N],[12,"mods_locked","","",42,N],[12,"group","","",42,N],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"language","","",42,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,N],[12,"direction","","",42,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",43,N],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,N],[12,"cursor","","",43,N],[12,"anchor","","",43,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,N],[13,"ContentType","","",43,N],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,N],[12,"purpose","","",43,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,N],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,N],[12,"index","","",43,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,N],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,N],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",44,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",44,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",44,N],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",44,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",45,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",45,N],[12,"surface","","",45,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",46,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",47,N],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",47,N],[12,"position","","",47,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",47,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::input_method::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::input_method::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"zwp_input_method_context_v1_requests","","",N,N],[7,"zwp_input_method_context_v1_events","","",N,N],[7,"zwp_input_method_context_v1_interface","","",N,N],[7,"zwp_input_method_v1_events","","",N,N],[7,"zwp_input_method_v1_interface","","",N,N],[7,"zwp_input_panel_v1_requests","","",N,N],[7,"zwp_input_panel_v1_interface","","",N,N],[7,"zwp_input_panel_surface_v1_requests","","",N,N],[7,"zwp_input_panel_surface_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",33,N],[11,"as_raw_c_in","","",33,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",34,N],[11,"as_raw_c_in","","",34,[[["self"],["f"]],["t"]]],[11,"c_interface","","",48,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",49,N],[11,"into_raw","","",49,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",49,N],[11,"as_raw_c_in","","",49,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"c_interface","","",50,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"c_interface","","",52,N],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",39,[[["self"]],["position"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"eq","","",39,[[["self"],["position"]],["bool"]]],[11,"from_raw","","",39,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",39,[[["self"]],["u32"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",53,N],[11,"as_raw_c_in","","",53,[[["self"],["f"]],["t"]]],[11,"c_interface","","",54,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"c_interface","","",55,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",56,N],[11,"as_raw_c_in","","",56,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"c_interface","","",57,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",45,N],[11,"into_raw","","",45,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",45,N],[11,"as_raw_c_in","","",45,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",58,N],[11,"into_raw","","",58,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",58,N],[11,"as_raw_c_in","","",58,[[["self"],["f"]],["t"]]],[11,"c_interface","","",59,N],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",46,[[["self"]],["position"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["position"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",47,N],[11,"into_raw","","",47,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",47,N],[11,"as_raw_c_in","","",47,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"c_interface","","",61,N],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",N,N],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",N,N],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",62,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",63,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",63,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",63,N],[12,"surface","","",63,N],[12,"seat","","",63,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",64,N],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",64,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",65,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",66,N],[13,"Inactive","","shortcuts are restored",66,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",67,N],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",68,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",69,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",69,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",69,N],[12,"surface","","",69,N],[12,"seat","","",69,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",70,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",71,N],[13,"Inactive","","shortcuts are restored",71,N],[0,"c_interfaces","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",62,[[["self"]],["error"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"eq","","",62,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",62,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[11,"is_destructor","","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",63,N],[11,"into_raw","","",63,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",63,N],[11,"as_raw_c_in","","",63,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",72,[[["self"]],["bool"]]],[11,"opcode","","",72,[[["self"]],["u16"]]],[11,"child","","",72,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",72,N],[11,"into_raw","","",72,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",72,N],[11,"as_raw_c_in","","",72,[[["self"],["f"]],["t"]]],[11,"c_interface","","",73,N],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",65,[[["self"]],["bool"]]],[11,"opcode","","",65,[[["self"]],["u16"]]],[11,"child","","",65,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",65,N],[11,"into_raw","","",65,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",65,N],[11,"as_raw_c_in","","",65,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",66,N],[11,"as_raw_c_in","","",66,[[["self"],["f"]],["t"]]],[11,"c_interface","","",74,N],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",68,[[["self"]],["error"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"eq","","",68,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",68,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",68,[[["self"]],["u32"]]],[11,"is_destructor","","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",69,N],[11,"into_raw","","",69,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",69,N],[11,"as_raw_c_in","","",69,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",75,N],[11,"into_raw","","",75,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",75,N],[11,"as_raw_c_in","","",75,[[["self"],["f"]],["t"]]],[11,"c_interface","","",76,N],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",70,N],[11,"into_raw","","",70,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",70,N],[11,"as_raw_c_in","","",70,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",71,N],[11,"into_raw","","",71,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",71,N],[11,"as_raw_c_in","","",71,[[["self"],["f"]],["t"]]],[11,"c_interface","","",77,N],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",N,N],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",78,N],[13,"CreateParams","","create a temporary object for buffer parameters",78,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",78,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",79,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",79,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",79,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",79,N],[12,"modifier_hi","","",79,N],[12,"modifier_lo","","",79,N],[8,"RequestsTrait","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[10,"destroy","","unbind the factory",80,N],[10,"create_params","","create a temporary object for buffer parameters",80,[[["self"],["f"]],["result",["proxy"]]]],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",81,N],[13,"PlaneIdx","","plane index out of bounds",81,N],[13,"PlaneSet","","the plane index was already set",81,N],[13,"Incomplete","","missing or too many planes to create a buffer",81,N],[13,"InvalidFormat","","format not supported",81,N],[13,"InvalidDimensions","","invalid width or height",81,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",81,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",81,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",82,N],[13,"Interlaced","","content is interlaced",82,N],[13,"BottomFirst","","bottom field first",82,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",83,N],[13,"Add","","add a dmabuf to the temporary set",83,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,N],[12,"plane_idx","","",83,N],[12,"offset","","",83,N],[12,"stride","","",83,N],[12,"modifier_hi","","",83,N],[12,"modifier_lo","","",83,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",83,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,N],[12,"height","","",83,N],[12,"format","","",83,N],[12,"flags","","",83,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",83,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,N],[12,"width","","",83,N],[12,"height","","",83,N],[12,"format","","",83,N],[12,"flags","","",83,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",84,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",84,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",84,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","delete this object, used or not",85,N],[10,"add","","add a dmabuf to the temporary set",85,N],[10,"create","","create a wl_buffer from the given dmabufs",85,N],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",85,[[["self"],["i32"],["i32"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",86,N],[13,"CreateParams","","create a temporary object for buffer parameters",86,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",86,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",87,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",87,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",87,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",87,N],[12,"modifier_hi","","",87,N],[12,"modifier_lo","","",87,N],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",88,N],[13,"PlaneIdx","","plane index out of bounds",88,N],[13,"PlaneSet","","the plane index was already set",88,N],[13,"Incomplete","","missing or too many planes to create a buffer",88,N],[13,"InvalidFormat","","format not supported",88,N],[13,"InvalidDimensions","","invalid width or height",88,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",88,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",88,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",89,N],[13,"Interlaced","","content is interlaced",89,N],[13,"BottomFirst","","bottom field first",89,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",90,N],[13,"Add","","add a dmabuf to the temporary set",90,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,N],[12,"plane_idx","","",90,N],[12,"offset","","",90,N],[12,"stride","","",90,N],[12,"modifier_hi","","",90,N],[12,"modifier_lo","","",90,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",90,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,N],[12,"height","","",90,N],[12,"format","","",90,N],[12,"flags","","",90,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",90,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[12,"format","","",90,N],[12,"flags","","",90,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",91,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",91,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",91,N],[0,"c_interfaces","wayland_protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",N,N],[7,"wl_buffer_interface","wayland_protocols::unstable::linux_dmabuf::v1::c_interfaces","",N,N],[7,"zwp_linux_dmabuf_v1_requests","","",N,N],[7,"zwp_linux_dmabuf_v1_events","","",N,N],[7,"zwp_linux_dmabuf_v1_interface","","",N,N],[7,"zwp_linux_buffer_params_v1_requests","","",N,N],[7,"zwp_linux_buffer_params_v1_events","","",N,N],[7,"zwp_linux_buffer_params_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",78,[[["self"]],["bool"]]],[11,"opcode","","",78,[[["self"]],["u16"]]],[11,"child","","",78,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",78,N],[11,"into_raw","","",78,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",78,N],[11,"as_raw_c_in","","",78,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"c_interface","","",92,N],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",81,[[["self"]],["error"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"eq","","",81,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",81,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",81,[[["self"]],["u32"]]],[11,"clone","","",82,[[["self"]],["flags"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"eq","","",82,[[["self"],["flags"]],["bool"]]],[11,"from_raw","","",82,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",82,[[["self"]],["u32"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"opcode","","",83,[[["self"]],["u16"]]],[11,"child","","",83,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",83,N],[11,"into_raw","","",83,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",83,N],[11,"as_raw_c_in","","",83,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",84,[[["self"]],["bool"]]],[11,"opcode","","",84,[[["self"]],["u16"]]],[11,"child","","",84,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",84,N],[11,"into_raw","","",84,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",84,N],[11,"as_raw_c_in","","",84,[[["self"],["f"]],["t"]]],[11,"c_interface","","",93,N],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",86,[[["self"]],["bool"]]],[11,"opcode","","",86,[[["self"]],["u16"]]],[11,"child","","",86,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",86,N],[11,"into_raw","","",86,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",86,N],[11,"as_raw_c_in","","",86,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",87,N],[11,"into_raw","","",87,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"c_interface","","",94,N],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",88,[[["self"]],["error"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"eq","","",88,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",88,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",88,[[["self"]],["u32"]]],[11,"clone","","",89,[[["self"]],["flags"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"eq","","",89,[[["self"],["flags"]],["bool"]]],[11,"from_raw","","",89,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",89,[[["self"]],["u32"]]],[11,"is_destructor","","",90,[[["self"]],["bool"]]],[11,"opcode","","",90,[[["self"]],["u16"]]],[11,"child","","",90,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",90,N],[11,"into_raw","","",90,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",90,N],[11,"as_raw_c_in","","",90,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",91,[[["self"]],["bool"]]],[11,"opcode","","",91,[[["self"]],["u16"]]],[11,"child","","",91,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",91,N],[11,"into_raw","","",91,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",91,N],[11,"as_raw_c_in","","",91,[[["self"],["f"]],["t"]]],[11,"c_interface","","",95,N],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",N,N],[0,"v1","wayland_protocols::unstable::pointer_constraints","",N,N],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",96,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",97,N],[13,"Persistent","","the pointer constraint may reactivate",97,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",98,N],[13,"LockPointer","","lock pointer to a position",98,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",98,N],[12,"surface","","",98,N],[12,"pointer","","",98,N],[12,"region","","",98,N],[12,"lifetime","","",98,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",98,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",98,N],[12,"surface","","",98,N],[12,"pointer","","",98,N],[12,"region","","",98,N],[12,"lifetime","","",98,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pointer constraints manager object",99,N],[10,"lock_pointer","","lock pointer to a position",99,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"],["f"]],["result",["proxy"]]]],[10,"confine_pointer","","confine pointer to a region",99,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"],["f"]],["result",["proxy"]]]],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",100,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",100,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",100,N],[12,"surface_y","","",100,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",100,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",100,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",101,N],[13,"Unlocked","","lock deactivation event",101,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the locked pointer object",102,N],[10,"set_cursor_position_hint","","set the pointer cursor position hint",102,N],[10,"set_region","","set a new lock region",102,N],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",103,N],[13,"SetRegion","","set a new confine region",103,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",103,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",104,N],[13,"Unconfined","","pointer unconfined",104,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the confined pointer object",105,N],[10,"set_region","","set a new confine region",105,N],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",106,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",107,N],[13,"Persistent","","the pointer constraint may reactivate",107,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",108,N],[13,"LockPointer","","lock pointer to a position",108,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",108,N],[12,"surface","","",108,N],[12,"pointer","","",108,N],[12,"region","","",108,N],[12,"lifetime","","",108,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",108,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",108,N],[12,"surface","","",108,N],[12,"pointer","","",108,N],[12,"region","","",108,N],[12,"lifetime","","",108,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",109,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",109,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",109,N],[12,"surface_y","","",109,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",109,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",109,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",110,N],[13,"Unlocked","","lock deactivation event",110,N],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",111,N],[13,"SetRegion","","set a new confine region",111,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",111,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",112,N],[13,"Unconfined","","pointer unconfined",112,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_constraints::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_region_interface","","",N,N],[7,"zwp_pointer_constraints_v1_requests","","",N,N],[7,"zwp_pointer_constraints_v1_interface","","",N,N],[7,"zwp_locked_pointer_v1_requests","","",N,N],[7,"zwp_locked_pointer_v1_events","","",N,N],[7,"zwp_locked_pointer_v1_interface","","",N,N],[7,"zwp_confined_pointer_v1_requests","","",N,N],[7,"zwp_confined_pointer_v1_events","","",N,N],[7,"zwp_confined_pointer_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",96,[[["self"]],["error"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"eq","","",96,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",96,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",96,[[["self"]],["u32"]]],[11,"clone","","",97,[[["self"]],["lifetime"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"eq","","",97,[[["self"],["lifetime"]],["bool"]]],[11,"from_raw","","",97,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",97,[[["self"]],["u32"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",98,N],[11,"as_raw_c_in","","",98,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",113,[[["self"]],["bool"]]],[11,"opcode","","",113,[[["self"]],["u16"]]],[11,"child","","",113,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",113,N],[11,"into_raw","","",113,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",113,N],[11,"as_raw_c_in","","",113,[[["self"],["f"]],["t"]]],[11,"c_interface","","",114,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",100,[[["self"]],["bool"]]],[11,"opcode","","",100,[[["self"]],["u16"]]],[11,"child","","",100,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",100,N],[11,"into_raw","","",100,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",100,N],[11,"as_raw_c_in","","",100,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",101,N],[11,"as_raw_c_in","","",101,[[["self"],["f"]],["t"]]],[11,"c_interface","","",115,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",103,[[["self"]],["bool"]]],[11,"opcode","","",103,[[["self"]],["u16"]]],[11,"child","","",103,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",103,N],[11,"into_raw","","",103,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",103,N],[11,"as_raw_c_in","","",103,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",104,[[["self"]],["bool"]]],[11,"opcode","","",104,[[["self"]],["u16"]]],[11,"child","","",104,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",104,N],[11,"into_raw","","",104,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"c_interface","","",116,N],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",106,[[["self"]],["error"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"eq","","",106,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",106,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",106,[[["self"]],["u32"]]],[11,"clone","","",107,[[["self"]],["lifetime"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"eq","","",107,[[["self"],["lifetime"]],["bool"]]],[11,"from_raw","","",107,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",107,[[["self"]],["u32"]]],[11,"is_destructor","","",108,[[["self"]],["bool"]]],[11,"opcode","","",108,[[["self"]],["u16"]]],[11,"child","","",108,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",108,N],[11,"into_raw","","",108,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",108,N],[11,"as_raw_c_in","","",108,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"opcode","","",117,[[["self"]],["u16"]]],[11,"child","","",117,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",117,N],[11,"into_raw","","",117,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",117,N],[11,"as_raw_c_in","","",117,[[["self"],["f"]],["t"]]],[11,"c_interface","","",118,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",109,[[["self"]],["bool"]]],[11,"opcode","","",109,[[["self"]],["u16"]]],[11,"child","","",109,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",109,N],[11,"into_raw","","",109,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",109,N],[11,"as_raw_c_in","","",109,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",110,[[["self"]],["bool"]]],[11,"opcode","","",110,[[["self"]],["u16"]]],[11,"child","","",110,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",110,N],[11,"into_raw","","",110,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",110,N],[11,"as_raw_c_in","","",110,[[["self"],["f"]],["t"]]],[11,"c_interface","","",119,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",111,[[["self"]],["bool"]]],[11,"opcode","","",111,[[["self"]],["u16"]]],[11,"child","","",111,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",111,N],[11,"into_raw","","",111,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",111,N],[11,"as_raw_c_in","","",111,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",112,[[["self"]],["bool"]]],[11,"opcode","","",112,[[["self"]],["u16"]]],[11,"child","","",112,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",112,N],[11,"into_raw","","",112,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",112,N],[11,"as_raw_c_in","","",112,[[["self"],["f"]],["t"]]],[11,"c_interface","","",120,N],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",N,N],[0,"v1","wayland_protocols::unstable::pointer_gestures","",N,N],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",121,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",121,N],[12,"pointer","","",121,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",121,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",121,N],[12,"pointer","","",121,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_swipe_gesture","","get swipe gesture",122,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_pinch_gesture","","get pinch gesture",122,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",123,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",124,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,N],[12,"time","","",124,N],[12,"surface","","",124,N],[12,"fingers","","",124,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",124,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,N],[12,"dx","","",124,N],[12,"dy","","",124,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",124,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,N],[12,"time","","",124,N],[12,"cancelled","","",124,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[10,"destroy","","destroy the pointer swipe gesture object",125,N],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",126,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",127,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,N],[12,"time","","",127,N],[12,"surface","","",127,N],[12,"fingers","","",127,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",127,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,N],[12,"dx","","",127,N],[12,"dy","","",127,N],[12,"scale","","",127,N],[12,"rotation","","",127,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",127,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,N],[12,"time","","",127,N],[12,"cancelled","","",127,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[10,"destroy","","destroy the pinch gesture object",128,N],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",129,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",129,N],[12,"pointer","","",129,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",129,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",129,N],[12,"pointer","","",129,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",130,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",131,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,N],[12,"time","","",131,N],[12,"surface","","",131,N],[12,"fingers","","",131,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",131,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,N],[12,"dx","","",131,N],[12,"dy","","",131,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",131,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,N],[12,"time","","",131,N],[12,"cancelled","","",131,N],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",132,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",133,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,N],[12,"time","","",133,N],[12,"surface","","",133,N],[12,"fingers","","",133,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",133,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,N],[12,"dx","","",133,N],[12,"dy","","",133,N],[12,"scale","","",133,N],[12,"rotation","","",133,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",133,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,N],[12,"time","","",133,N],[12,"cancelled","","",133,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_gestures::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"zwp_pointer_gestures_v1_requests","","",N,N],[7,"zwp_pointer_gestures_v1_interface","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_requests","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_events","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_interface","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_requests","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_events","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",121,[[["self"]],["bool"]]],[11,"opcode","","",121,[[["self"]],["u16"]]],[11,"child","","",121,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",121,N],[11,"into_raw","","",121,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",121,N],[11,"as_raw_c_in","","",121,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",134,[[["self"]],["bool"]]],[11,"opcode","","",134,[[["self"]],["u16"]]],[11,"child","","",134,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",134,N],[11,"into_raw","","",134,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",134,N],[11,"as_raw_c_in","","",134,[[["self"],["f"]],["t"]]],[11,"c_interface","","",135,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",123,[[["self"]],["bool"]]],[11,"opcode","","",123,[[["self"]],["u16"]]],[11,"child","","",123,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",123,N],[11,"into_raw","","",123,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",123,N],[11,"as_raw_c_in","","",123,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",124,[[["self"]],["bool"]]],[11,"opcode","","",124,[[["self"]],["u16"]]],[11,"child","","",124,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",124,N],[11,"into_raw","","",124,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",124,N],[11,"as_raw_c_in","","",124,[[["self"],["f"]],["t"]]],[11,"c_interface","","",136,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",126,[[["self"]],["bool"]]],[11,"opcode","","",126,[[["self"]],["u16"]]],[11,"child","","",126,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",126,N],[11,"into_raw","","",126,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",126,N],[11,"as_raw_c_in","","",126,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",127,[[["self"]],["bool"]]],[11,"opcode","","",127,[[["self"]],["u16"]]],[11,"child","","",127,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",127,N],[11,"into_raw","","",127,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",127,N],[11,"as_raw_c_in","","",127,[[["self"],["f"]],["t"]]],[11,"c_interface","","",137,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",129,[[["self"]],["bool"]]],[11,"opcode","","",129,[[["self"]],["u16"]]],[11,"child","","",129,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",129,N],[11,"into_raw","","",129,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",129,N],[11,"as_raw_c_in","","",129,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",138,[[["self"]],["bool"]]],[11,"opcode","","",138,[[["self"]],["u16"]]],[11,"child","","",138,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",138,N],[11,"into_raw","","",138,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",138,N],[11,"as_raw_c_in","","",138,[[["self"],["f"]],["t"]]],[11,"c_interface","","",139,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",130,[[["self"]],["bool"]]],[11,"opcode","","",130,[[["self"]],["u16"]]],[11,"child","","",130,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",130,N],[11,"into_raw","","",130,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",130,N],[11,"as_raw_c_in","","",130,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",131,[[["self"]],["bool"]]],[11,"opcode","","",131,[[["self"]],["u16"]]],[11,"child","","",131,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",131,N],[11,"into_raw","","",131,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"c_interface","","",140,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",132,[[["self"]],["bool"]]],[11,"opcode","","",132,[[["self"]],["u16"]]],[11,"child","","",132,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",132,N],[11,"into_raw","","",132,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",132,N],[11,"as_raw_c_in","","",132,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",133,[[["self"]],["bool"]]],[11,"opcode","","",133,[[["self"]],["u16"]]],[11,"child","","",133,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",133,N],[11,"into_raw","","",133,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",133,N],[11,"as_raw_c_in","","",133,[[["self"],["f"]],["t"]]],[11,"c_interface","","",141,N],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",N,N],[0,"v1","wayland_protocols::unstable::relative_pointer","",N,N],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",142,N],[13,"GetRelativePointer","","get a relative pointer object",142,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",142,N],[12,"pointer","","",142,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the relative pointer manager object",143,N],[10,"get_relative_pointer","","get a relative pointer object",143,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",144,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",145,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",145,N],[12,"utime_lo","","",145,N],[12,"dx","","",145,N],[12,"dy","","",145,N],[12,"dx_unaccel","","",145,N],[12,"dy_unaccel","","",145,N],[8,"RequestsTrait","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[10,"destroy","","release the relative pointer object",146,N],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",147,N],[13,"GetRelativePointer","","get a relative pointer object",147,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",147,N],[12,"pointer","","",147,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",148,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",149,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",149,N],[12,"utime_lo","","",149,N],[12,"dx","","",149,N],[12,"dy","","",149,N],[12,"dx_unaccel","","",149,N],[12,"dy_unaccel","","",149,N],[0,"c_interfaces","wayland_protocols::unstable::relative_pointer::v1","C interfaces for this protocol",N,N],[7,"wl_pointer_interface","wayland_protocols::unstable::relative_pointer::v1::c_interfaces","",N,N],[7,"zwp_relative_pointer_manager_v1_requests","","",N,N],[7,"zwp_relative_pointer_manager_v1_interface","","",N,N],[7,"zwp_relative_pointer_v1_requests","","",N,N],[7,"zwp_relative_pointer_v1_events","","",N,N],[7,"zwp_relative_pointer_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",142,[[["self"]],["bool"]]],[11,"opcode","","",142,[[["self"]],["u16"]]],[11,"child","","",142,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",142,N],[11,"into_raw","","",142,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",142,N],[11,"as_raw_c_in","","",142,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",150,[[["self"]],["bool"]]],[11,"opcode","","",150,[[["self"]],["u16"]]],[11,"child","","",150,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",150,N],[11,"into_raw","","",150,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",150,N],[11,"as_raw_c_in","","",150,[[["self"],["f"]],["t"]]],[11,"c_interface","","",151,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",144,[[["self"]],["bool"]]],[11,"opcode","","",144,[[["self"]],["u16"]]],[11,"child","","",144,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",144,N],[11,"into_raw","","",144,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",144,N],[11,"as_raw_c_in","","",144,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",145,[[["self"]],["bool"]]],[11,"opcode","","",145,[[["self"]],["u16"]]],[11,"child","","",145,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",145,N],[11,"into_raw","","",145,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",145,N],[11,"as_raw_c_in","","",145,[[["self"],["f"]],["t"]]],[11,"c_interface","","",152,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",147,[[["self"]],["bool"]]],[11,"opcode","","",147,[[["self"]],["u16"]]],[11,"child","","",147,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",147,N],[11,"into_raw","","",147,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",147,N],[11,"as_raw_c_in","","",147,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",153,[[["self"]],["bool"]]],[11,"opcode","","",153,[[["self"]],["u16"]]],[11,"child","","",153,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",153,N],[11,"into_raw","","",153,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",153,N],[11,"as_raw_c_in","","",153,[[["self"],["f"]],["t"]]],[11,"c_interface","","",154,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",148,[[["self"]],["bool"]]],[11,"opcode","","",148,[[["self"]],["u16"]]],[11,"child","","",148,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",148,N],[11,"into_raw","","",148,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",148,N],[11,"as_raw_c_in","","",148,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",149,[[["self"]],["bool"]]],[11,"opcode","","",149,[[["self"]],["u16"]]],[11,"child","","",149,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",149,N],[11,"into_raw","","",149,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",149,N],[11,"as_raw_c_in","","",149,[[["self"],["f"]],["t"]]],[11,"c_interface","","",155,N],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",N,N],[0,"v1","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",156,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",156,N],[12,"seat","","",156,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",156,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",157,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","release the memory for the tablet manager object",157,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",158,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",159,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",159,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",159,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",159,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[10,"destroy","","release the memory for the tablet seat object",160,N],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",161,N],[13,"Eraser","","Eraser",161,N],[13,"Brush","","Brush",161,N],[13,"Pencil","","Pencil",161,N],[13,"Airbrush","","Airbrush",161,N],[13,"Finger","","Finger",161,N],[13,"Mouse","","Mouse",161,N],[13,"Lens","","Lens",161,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",162,N],[13,"Pressure","","Pressure axis",162,N],[13,"Distance","","Distance axis",162,N],[13,"Rotation","","Z-rotation axis",162,N],[13,"Slider","","Slider axis",162,N],[13,"Wheel","","Wheel axis",162,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",163,N],[13,"Pressed","","button is pressed",163,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",164,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",165,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",165,N],[12,"surface","","",165,N],[12,"hotspot_x","","",165,N],[12,"hotspot_y","","",165,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",165,N],[4,"Event","","",N,N],[13,"Type","","tool type",166,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",166,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"hardware_serial_lo","","",166,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",166,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"hardware_id_lo","","",166,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",166,N],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",166,N],[13,"Removed","","tool removed",166,N],[13,"ProximityIn","","proximity in event",166,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"tablet","","",166,N],[12,"surface","","",166,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",166,N],[13,"Down","","tablet tool is making contact",166,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",166,N],[13,"Motion","","motion event",166,N],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"y","","",166,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",166,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",166,N],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",166,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"tilt_y","","",166,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",166,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",166,N],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",166,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"clicks","","",166,N],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",166,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[12,"button","","",166,N],[12,"state","","",166,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",166,N],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[10,"set_cursor","","set the tablet tool's surface",167,N],[10,"destroy","","destroy the tool object",167,N],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",168,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",169,N],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,N],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",169,N],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,N],[12,"pid","","",169,N],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",169,N],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",169,N],[13,"Removed","","tablet removed event",169,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",170,N],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",171,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",171,N],[12,"seat","","",171,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",171,N],[4,"Event","","",N,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",172,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",173,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",173,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",173,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",173,N],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",174,N],[13,"Eraser","","Eraser",174,N],[13,"Brush","","Brush",174,N],[13,"Pencil","","Pencil",174,N],[13,"Airbrush","","Airbrush",174,N],[13,"Finger","","Finger",174,N],[13,"Mouse","","Mouse",174,N],[13,"Lens","","Lens",174,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",175,N],[13,"Pressure","","Pressure axis",175,N],[13,"Distance","","Distance axis",175,N],[13,"Rotation","","Z-rotation axis",175,N],[13,"Slider","","Slider axis",175,N],[13,"Wheel","","Wheel axis",175,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",176,N],[13,"Pressed","","button is pressed",176,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",177,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",178,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",178,N],[12,"surface","","",178,N],[12,"hotspot_x","","",178,N],[12,"hotspot_y","","",178,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",178,N],[4,"Event","","",N,N],[13,"Type","","tool type",179,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",179,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"hardware_serial_lo","","",179,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom's format",179,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"hardware_id_lo","","",179,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",179,N],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",179,N],[13,"Removed","","tool removed",179,N],[13,"ProximityIn","","proximity in event",179,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"tablet","","",179,N],[12,"surface","","",179,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",179,N],[13,"Down","","tablet tool is making contact",179,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",179,N],[13,"Motion","","motion event",179,N],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"y","","",179,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",179,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",179,N],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",179,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"tilt_y","","",179,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",179,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",179,N],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",179,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"clicks","","",179,N],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",179,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[12,"button","","",179,N],[12,"state","","",179,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",179,N],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,N],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",180,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",181,N],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,N],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",181,N],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,N],[12,"pid","","",181,N],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",181,N],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",181,N],[13,"Removed","","tablet removed event",181,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v1_requests","","",N,N],[7,"zwp_tablet_manager_v1_interface","","",N,N],[7,"zwp_tablet_seat_v1_requests","","",N,N],[7,"zwp_tablet_seat_v1_events","","",N,N],[7,"zwp_tablet_seat_v1_interface","","",N,N],[7,"zwp_tablet_tool_v1_requests","","",N,N],[7,"zwp_tablet_tool_v1_events","","",N,N],[7,"zwp_tablet_tool_v1_interface","","",N,N],[7,"zwp_tablet_v1_requests","","",N,N],[7,"zwp_tablet_v1_events","","",N,N],[7,"zwp_tablet_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",156,[[["self"]],["bool"]]],[11,"opcode","","",156,[[["self"]],["u16"]]],[11,"child","","",156,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",156,N],[11,"into_raw","","",156,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",156,N],[11,"as_raw_c_in","","",156,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",182,[[["self"]],["bool"]]],[11,"opcode","","",182,[[["self"]],["u16"]]],[11,"child","","",182,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",182,N],[11,"into_raw","","",182,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",182,N],[11,"as_raw_c_in","","",182,[[["self"],["f"]],["t"]]],[11,"c_interface","","",183,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",158,[[["self"]],["bool"]]],[11,"opcode","","",158,[[["self"]],["u16"]]],[11,"child","","",158,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",158,N],[11,"into_raw","","",158,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",158,N],[11,"as_raw_c_in","","",158,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",159,[[["self"]],["bool"]]],[11,"opcode","","",159,[[["self"]],["u16"]]],[11,"child","","",159,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",159,N],[11,"into_raw","","",159,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",159,N],[11,"as_raw_c_in","","",159,[[["self"],["f"]],["t"]]],[11,"c_interface","","",184,N],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",161,[[["self"]],["type"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"eq","","",161,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",161,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",161,[[["self"]],["u32"]]],[11,"clone","","",162,[[["self"]],["capability"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"eq","","",162,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",162,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",162,[[["self"]],["u32"]]],[11,"clone","","",163,[[["self"]],["buttonstate"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"eq","","",163,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",163,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",163,[[["self"]],["u32"]]],[11,"clone","","",164,[[["self"]],["error"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"eq","","",164,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",164,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",164,[[["self"]],["u32"]]],[11,"is_destructor","","",165,[[["self"]],["bool"]]],[11,"opcode","","",165,[[["self"]],["u16"]]],[11,"child","","",165,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",165,N],[11,"into_raw","","",165,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",165,N],[11,"as_raw_c_in","","",165,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",166,[[["self"]],["bool"]]],[11,"opcode","","",166,[[["self"]],["u16"]]],[11,"child","","",166,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",166,N],[11,"into_raw","","",166,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",166,N],[11,"as_raw_c_in","","",166,[[["self"],["f"]],["t"]]],[11,"c_interface","","",185,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",168,[[["self"]],["bool"]]],[11,"opcode","","",168,[[["self"]],["u16"]]],[11,"child","","",168,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",168,N],[11,"into_raw","","",168,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",168,N],[11,"as_raw_c_in","","",168,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",169,[[["self"]],["bool"]]],[11,"opcode","","",169,[[["self"]],["u16"]]],[11,"child","","",169,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",169,N],[11,"into_raw","","",169,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",169,N],[11,"as_raw_c_in","","",169,[[["self"],["f"]],["t"]]],[11,"c_interface","","",186,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",171,[[["self"]],["bool"]]],[11,"opcode","","",171,[[["self"]],["u16"]]],[11,"child","","",171,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",171,N],[11,"into_raw","","",171,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",171,N],[11,"as_raw_c_in","","",171,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",187,[[["self"]],["bool"]]],[11,"opcode","","",187,[[["self"]],["u16"]]],[11,"child","","",187,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",187,N],[11,"into_raw","","",187,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",187,N],[11,"as_raw_c_in","","",187,[[["self"],["f"]],["t"]]],[11,"c_interface","","",188,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",172,[[["self"]],["bool"]]],[11,"opcode","","",172,[[["self"]],["u16"]]],[11,"child","","",172,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",172,N],[11,"into_raw","","",172,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",172,N],[11,"as_raw_c_in","","",172,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",173,[[["self"]],["bool"]]],[11,"opcode","","",173,[[["self"]],["u16"]]],[11,"child","","",173,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",173,N],[11,"into_raw","","",173,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",173,N],[11,"as_raw_c_in","","",173,[[["self"],["f"]],["t"]]],[11,"c_interface","","",189,N],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",174,[[["self"]],["type"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"eq","","",174,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",174,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",174,[[["self"]],["u32"]]],[11,"clone","","",175,[[["self"]],["capability"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"eq","","",175,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",175,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",175,[[["self"]],["u32"]]],[11,"clone","","",176,[[["self"]],["buttonstate"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"eq","","",176,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",176,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",176,[[["self"]],["u32"]]],[11,"clone","","",177,[[["self"]],["error"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"eq","","",177,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",177,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",177,[[["self"]],["u32"]]],[11,"is_destructor","","",178,[[["self"]],["bool"]]],[11,"opcode","","",178,[[["self"]],["u16"]]],[11,"child","","",178,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",178,N],[11,"into_raw","","",178,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",178,N],[11,"as_raw_c_in","","",178,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",179,[[["self"]],["bool"]]],[11,"opcode","","",179,[[["self"]],["u16"]]],[11,"child","","",179,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",179,N],[11,"into_raw","","",179,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",179,N],[11,"as_raw_c_in","","",179,[[["self"],["f"]],["t"]]],[11,"c_interface","","",190,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",180,[[["self"]],["bool"]]],[11,"opcode","","",180,[[["self"]],["u16"]]],[11,"child","","",180,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",180,N],[11,"into_raw","","",180,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",180,N],[11,"as_raw_c_in","","",180,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",181,[[["self"]],["bool"]]],[11,"opcode","","",181,[[["self"]],["u16"]]],[11,"child","","",181,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",181,N],[11,"into_raw","","",181,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",181,N],[11,"as_raw_c_in","","",181,[[["self"],["f"]],["t"]]],[11,"c_interface","","",191,N],[0,"v2","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",192,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",192,N],[12,"seat","","",192,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",192,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",193,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","release the memory for the tablet manager object",193,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",194,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",195,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",195,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",195,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[10,"destroy","","release the memory for the tablet seat object",196,N],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",197,N],[13,"Eraser","","Eraser",197,N],[13,"Brush","","Brush",197,N],[13,"Pencil","","Pencil",197,N],[13,"Airbrush","","Airbrush",197,N],[13,"Finger","","Finger",197,N],[13,"Mouse","","Mouse",197,N],[13,"Lens","","Lens",197,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",198,N],[13,"Pressure","","Pressure axis",198,N],[13,"Distance","","Distance axis",198,N],[13,"Rotation","","Z-rotation axis",198,N],[13,"Slider","","Slider axis",198,N],[13,"Wheel","","Wheel axis",198,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",199,N],[13,"Pressed","","button is pressed",199,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",200,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",201,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",201,N],[12,"surface","","",201,N],[12,"hotspot_x","","",201,N],[12,"hotspot_y","","",201,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",201,N],[4,"Event","","",N,N],[13,"Type","","tool type",202,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",202,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"hardware_serial_lo","","",202,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",202,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"hardware_id_lo","","",202,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",202,N],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",202,N],[13,"Removed","","tool removed",202,N],[13,"ProximityIn","","proximity in event",202,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"tablet","","",202,N],[12,"surface","","",202,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",202,N],[13,"Down","","tablet tool is making contact",202,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",202,N],[13,"Motion","","motion event",202,N],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"y","","",202,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",202,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",202,N],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",202,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"tilt_y","","",202,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",202,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",202,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",202,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"clicks","","",202,N],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",202,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[12,"button","","",202,N],[12,"state","","",202,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",202,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[10,"set_cursor","","set the tablet tool's surface",203,N],[10,"destroy","","destroy the tool object",203,N],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",204,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",205,N],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,N],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",205,N],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,N],[12,"pid","","",205,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",205,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",205,N],[13,"Removed","","tablet removed event",205,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",206,N],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",207,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",208,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",208,N],[12,"serial","","",208,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",208,N],[4,"Event","","",N,N],[13,"Source","","ring event source",209,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",209,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",209,N],[13,"Frame","","end of a ring event sequence",209,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[10,"set_feedback","","set compositor feedback",210,N],[10,"destroy","","destroy the ring object",210,N],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",211,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",212,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",212,N],[12,"serial","","",212,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",212,N],[4,"Event","","",N,N],[13,"Source","","strip event source",213,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,N],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",213,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",213,N],[13,"Frame","","end of a strip event sequence",213,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[10,"set_feedback","","set compositor feedback",214,N],[10,"destroy","","destroy the strip object",214,N],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",215,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",216,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",216,N],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",216,N],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",216,N],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",216,N],[13,"ModeSwitch","","mode switch event",216,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,N],[12,"serial","","",216,N],[12,"mode","","",216,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[10,"destroy","","destroy the pad object",217,N],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",218,N],[13,"Pressed","","the button is pressed",218,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",219,N],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",219,N],[12,"description","","",219,N],[12,"serial","","",219,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",219,N],[4,"Event","","",N,N],[13,"Group","","group announced",220,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",220,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",220,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",220,N],[13,"Button","","physical button state",220,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[12,"button","","",220,N],[12,"state","","",220,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",220,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[12,"tablet","","",220,N],[12,"surface","","",220,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",220,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,N],[12,"surface","","",220,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",220,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",221,N],[10,"destroy","","destroy the pad object",221,N],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",222,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",222,N],[12,"seat","","",222,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",222,N],[4,"Event","","",N,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",223,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",224,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",224,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",224,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,N],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",225,N],[13,"Eraser","","Eraser",225,N],[13,"Brush","","Brush",225,N],[13,"Pencil","","Pencil",225,N],[13,"Airbrush","","Airbrush",225,N],[13,"Finger","","Finger",225,N],[13,"Mouse","","Mouse",225,N],[13,"Lens","","Lens",225,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",226,N],[13,"Pressure","","Pressure axis",226,N],[13,"Distance","","Distance axis",226,N],[13,"Rotation","","Z-rotation axis",226,N],[13,"Slider","","Slider axis",226,N],[13,"Wheel","","Wheel axis",226,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",227,N],[13,"Pressed","","button is pressed",227,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",228,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",229,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",229,N],[12,"surface","","",229,N],[12,"hotspot_x","","",229,N],[12,"hotspot_y","","",229,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",229,N],[4,"Event","","",N,N],[13,"Type","","tool type",230,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",230,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"hardware_serial_lo","","",230,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom's format",230,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"hardware_id_lo","","",230,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",230,N],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",230,N],[13,"Removed","","tool removed",230,N],[13,"ProximityIn","","proximity in event",230,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"tablet","","",230,N],[12,"surface","","",230,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",230,N],[13,"Down","","tablet tool is making contact",230,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",230,N],[13,"Motion","","motion event",230,N],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"y","","",230,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",230,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",230,N],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",230,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"tilt_y","","",230,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",230,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",230,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",230,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"clicks","","",230,N],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",230,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[12,"button","","",230,N],[12,"state","","",230,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",230,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,N],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",231,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",232,N],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,N],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",232,N],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,N],[12,"pid","","",232,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",232,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",232,N],[13,"Removed","","tablet removed event",232,N],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",233,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",234,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",234,N],[12,"serial","","",234,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",234,N],[4,"Event","","",N,N],[13,"Source","","ring event source",235,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",235,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",235,N],[13,"Frame","","end of a ring event sequence",235,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,N],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",236,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",237,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",237,N],[12,"serial","","",237,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",237,N],[4,"Event","","",N,N],[13,"Source","","strip event source",238,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,N],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",238,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",238,N],[13,"Frame","","end of a strip event sequence",238,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,N],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",239,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",240,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",240,N],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",240,N],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",240,N],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",240,N],[13,"ModeSwitch","","mode switch event",240,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,N],[12,"serial","","",240,N],[12,"mode","","",240,N],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",241,N],[13,"Pressed","","the button is pressed",241,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",242,N],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",242,N],[12,"description","","",242,N],[12,"serial","","",242,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",242,N],[4,"Event","","",N,N],[13,"Group","","group announced",243,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",243,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",243,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",243,N],[13,"Button","","physical button state",243,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[12,"button","","",243,N],[12,"state","","",243,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",243,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[12,"tablet","","",243,N],[12,"surface","","",243,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",243,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,N],[12,"surface","","",243,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",243,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v2","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v2::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v2_requests","","",N,N],[7,"zwp_tablet_manager_v2_interface","","",N,N],[7,"zwp_tablet_seat_v2_requests","","",N,N],[7,"zwp_tablet_seat_v2_events","","",N,N],[7,"zwp_tablet_seat_v2_interface","","",N,N],[7,"zwp_tablet_tool_v2_requests","","",N,N],[7,"zwp_tablet_tool_v2_events","","",N,N],[7,"zwp_tablet_tool_v2_interface","","",N,N],[7,"zwp_tablet_v2_requests","","",N,N],[7,"zwp_tablet_v2_events","","",N,N],[7,"zwp_tablet_v2_interface","","",N,N],[7,"zwp_tablet_pad_ring_v2_requests","","",N,N],[7,"zwp_tablet_pad_ring_v2_events","","",N,N],[7,"zwp_tablet_pad_ring_v2_interface","","",N,N],[7,"zwp_tablet_pad_strip_v2_requests","","",N,N],[7,"zwp_tablet_pad_strip_v2_events","","",N,N],[7,"zwp_tablet_pad_strip_v2_interface","","",N,N],[7,"zwp_tablet_pad_group_v2_requests","","",N,N],[7,"zwp_tablet_pad_group_v2_events","","",N,N],[7,"zwp_tablet_pad_group_v2_interface","","",N,N],[7,"zwp_tablet_pad_v2_requests","","",N,N],[7,"zwp_tablet_pad_v2_events","","",N,N],[7,"zwp_tablet_pad_v2_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",192,[[["self"]],["bool"]]],[11,"opcode","","",192,[[["self"]],["u16"]]],[11,"child","","",192,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",192,N],[11,"into_raw","","",192,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",192,N],[11,"as_raw_c_in","","",192,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",244,[[["self"]],["bool"]]],[11,"opcode","","",244,[[["self"]],["u16"]]],[11,"child","","",244,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",244,N],[11,"into_raw","","",244,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",244,N],[11,"as_raw_c_in","","",244,[[["self"],["f"]],["t"]]],[11,"c_interface","","",245,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",194,[[["self"]],["bool"]]],[11,"opcode","","",194,[[["self"]],["u16"]]],[11,"child","","",194,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",194,N],[11,"into_raw","","",194,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",194,N],[11,"as_raw_c_in","","",194,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",195,[[["self"]],["bool"]]],[11,"opcode","","",195,[[["self"]],["u16"]]],[11,"child","","",195,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",195,N],[11,"into_raw","","",195,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",195,N],[11,"as_raw_c_in","","",195,[[["self"],["f"]],["t"]]],[11,"c_interface","","",246,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",197,[[["self"]],["type"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"eq","","",197,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",197,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",197,[[["self"]],["u32"]]],[11,"clone","","",198,[[["self"]],["capability"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"eq","","",198,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",198,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",198,[[["self"]],["u32"]]],[11,"clone","","",199,[[["self"]],["buttonstate"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"eq","","",199,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",199,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",199,[[["self"]],["u32"]]],[11,"clone","","",200,[[["self"]],["error"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"eq","","",200,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",200,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",200,[[["self"]],["u32"]]],[11,"is_destructor","","",201,[[["self"]],["bool"]]],[11,"opcode","","",201,[[["self"]],["u16"]]],[11,"child","","",201,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",201,N],[11,"into_raw","","",201,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",201,N],[11,"as_raw_c_in","","",201,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",202,[[["self"]],["bool"]]],[11,"opcode","","",202,[[["self"]],["u16"]]],[11,"child","","",202,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",202,N],[11,"into_raw","","",202,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",202,N],[11,"as_raw_c_in","","",202,[[["self"],["f"]],["t"]]],[11,"c_interface","","",247,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",204,[[["self"]],["bool"]]],[11,"opcode","","",204,[[["self"]],["u16"]]],[11,"child","","",204,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",204,N],[11,"into_raw","","",204,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",204,N],[11,"as_raw_c_in","","",204,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",205,[[["self"]],["bool"]]],[11,"opcode","","",205,[[["self"]],["u16"]]],[11,"child","","",205,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",205,N],[11,"into_raw","","",205,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",205,N],[11,"as_raw_c_in","","",205,[[["self"],["f"]],["t"]]],[11,"c_interface","","",248,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",207,[[["self"]],["source"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"eq","","",207,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",207,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",207,[[["self"]],["u32"]]],[11,"is_destructor","","",208,[[["self"]],["bool"]]],[11,"opcode","","",208,[[["self"]],["u16"]]],[11,"child","","",208,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",208,N],[11,"into_raw","","",208,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",208,N],[11,"as_raw_c_in","","",208,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",209,[[["self"]],["bool"]]],[11,"opcode","","",209,[[["self"]],["u16"]]],[11,"child","","",209,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",209,N],[11,"into_raw","","",209,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",209,N],[11,"as_raw_c_in","","",209,[[["self"],["f"]],["t"]]],[11,"c_interface","","",249,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",211,[[["self"]],["source"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"eq","","",211,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",211,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",211,[[["self"]],["u32"]]],[11,"is_destructor","","",212,[[["self"]],["bool"]]],[11,"opcode","","",212,[[["self"]],["u16"]]],[11,"child","","",212,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",212,N],[11,"into_raw","","",212,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",212,N],[11,"as_raw_c_in","","",212,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",213,[[["self"]],["bool"]]],[11,"opcode","","",213,[[["self"]],["u16"]]],[11,"child","","",213,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",213,N],[11,"into_raw","","",213,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",213,N],[11,"as_raw_c_in","","",213,[[["self"],["f"]],["t"]]],[11,"c_interface","","",250,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",215,[[["self"]],["bool"]]],[11,"opcode","","",215,[[["self"]],["u16"]]],[11,"child","","",215,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",215,N],[11,"into_raw","","",215,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",215,N],[11,"as_raw_c_in","","",215,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",216,[[["self"]],["bool"]]],[11,"opcode","","",216,[[["self"]],["u16"]]],[11,"child","","",216,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",216,N],[11,"into_raw","","",216,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",216,N],[11,"as_raw_c_in","","",216,[[["self"],["f"]],["t"]]],[11,"c_interface","","",251,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",218,[[["self"]],["buttonstate"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"eq","","",218,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",218,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",218,[[["self"]],["u32"]]],[11,"is_destructor","","",219,[[["self"]],["bool"]]],[11,"opcode","","",219,[[["self"]],["u16"]]],[11,"child","","",219,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",219,N],[11,"into_raw","","",219,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",219,N],[11,"as_raw_c_in","","",219,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",220,[[["self"]],["bool"]]],[11,"opcode","","",220,[[["self"]],["u16"]]],[11,"child","","",220,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",220,N],[11,"into_raw","","",220,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",220,N],[11,"as_raw_c_in","","",220,[[["self"],["f"]],["t"]]],[11,"c_interface","","",252,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",222,[[["self"]],["bool"]]],[11,"opcode","","",222,[[["self"]],["u16"]]],[11,"child","","",222,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",222,N],[11,"into_raw","","",222,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",222,N],[11,"as_raw_c_in","","",222,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",253,[[["self"]],["bool"]]],[11,"opcode","","",253,[[["self"]],["u16"]]],[11,"child","","",253,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",253,N],[11,"into_raw","","",253,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",253,N],[11,"as_raw_c_in","","",253,[[["self"],["f"]],["t"]]],[11,"c_interface","","",254,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",223,[[["self"]],["bool"]]],[11,"opcode","","",223,[[["self"]],["u16"]]],[11,"child","","",223,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",223,N],[11,"into_raw","","",223,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",223,N],[11,"as_raw_c_in","","",223,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",224,[[["self"]],["bool"]]],[11,"opcode","","",224,[[["self"]],["u16"]]],[11,"child","","",224,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",224,N],[11,"into_raw","","",224,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",224,N],[11,"as_raw_c_in","","",224,[[["self"],["f"]],["t"]]],[11,"c_interface","","",255,N],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",225,[[["self"]],["type"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"eq","","",225,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",225,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",225,[[["self"]],["u32"]]],[11,"clone","","",226,[[["self"]],["capability"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"eq","","",226,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",226,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",226,[[["self"]],["u32"]]],[11,"clone","","",227,[[["self"]],["buttonstate"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"eq","","",227,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",227,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",227,[[["self"]],["u32"]]],[11,"clone","","",228,[[["self"]],["error"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"eq","","",228,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",228,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",228,[[["self"]],["u32"]]],[11,"is_destructor","","",229,[[["self"]],["bool"]]],[11,"opcode","","",229,[[["self"]],["u16"]]],[11,"child","","",229,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",229,N],[11,"into_raw","","",229,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",229,N],[11,"as_raw_c_in","","",229,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",230,[[["self"]],["bool"]]],[11,"opcode","","",230,[[["self"]],["u16"]]],[11,"child","","",230,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",230,N],[11,"into_raw","","",230,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",230,N],[11,"as_raw_c_in","","",230,[[["self"],["f"]],["t"]]],[11,"c_interface","","",256,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",231,[[["self"]],["bool"]]],[11,"opcode","","",231,[[["self"]],["u16"]]],[11,"child","","",231,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",231,N],[11,"into_raw","","",231,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",231,N],[11,"as_raw_c_in","","",231,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",232,[[["self"]],["bool"]]],[11,"opcode","","",232,[[["self"]],["u16"]]],[11,"child","","",232,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",232,N],[11,"into_raw","","",232,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",232,N],[11,"as_raw_c_in","","",232,[[["self"],["f"]],["t"]]],[11,"c_interface","","",257,N],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",233,[[["self"]],["source"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"eq","","",233,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",233,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",233,[[["self"]],["u32"]]],[11,"is_destructor","","",234,[[["self"]],["bool"]]],[11,"opcode","","",234,[[["self"]],["u16"]]],[11,"child","","",234,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",234,N],[11,"into_raw","","",234,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",234,N],[11,"as_raw_c_in","","",234,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",235,[[["self"]],["bool"]]],[11,"opcode","","",235,[[["self"]],["u16"]]],[11,"child","","",235,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",235,N],[11,"into_raw","","",235,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",235,N],[11,"as_raw_c_in","","",235,[[["self"],["f"]],["t"]]],[11,"c_interface","","",258,N],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",236,[[["self"]],["source"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"eq","","",236,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",236,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",236,[[["self"]],["u32"]]],[11,"is_destructor","","",237,[[["self"]],["bool"]]],[11,"opcode","","",237,[[["self"]],["u16"]]],[11,"child","","",237,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",237,N],[11,"into_raw","","",237,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",237,N],[11,"as_raw_c_in","","",237,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",238,[[["self"]],["bool"]]],[11,"opcode","","",238,[[["self"]],["u16"]]],[11,"child","","",238,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",238,N],[11,"into_raw","","",238,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",238,N],[11,"as_raw_c_in","","",238,[[["self"],["f"]],["t"]]],[11,"c_interface","","",259,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",239,[[["self"]],["bool"]]],[11,"opcode","","",239,[[["self"]],["u16"]]],[11,"child","","",239,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",239,N],[11,"into_raw","","",239,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",239,N],[11,"as_raw_c_in","","",239,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",240,[[["self"]],["bool"]]],[11,"opcode","","",240,[[["self"]],["u16"]]],[11,"child","","",240,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",240,N],[11,"into_raw","","",240,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",240,N],[11,"as_raw_c_in","","",240,[[["self"],["f"]],["t"]]],[11,"c_interface","","",260,N],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",241,[[["self"]],["buttonstate"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"eq","","",241,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",241,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",241,[[["self"]],["u32"]]],[11,"is_destructor","","",242,[[["self"]],["bool"]]],[11,"opcode","","",242,[[["self"]],["u16"]]],[11,"child","","",242,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",242,N],[11,"into_raw","","",242,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",242,N],[11,"as_raw_c_in","","",242,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",243,[[["self"]],["bool"]]],[11,"opcode","","",243,[[["self"]],["u16"]]],[11,"child","","",243,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",243,N],[11,"into_raw","","",243,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",243,N],[11,"as_raw_c_in","","",243,[[["self"],["f"]],["t"]]],[11,"c_interface","","",261,N],[0,"text_input","wayland_protocols::unstable","Text input protocol",N,N],[0,"v1","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",262,N],[13,"Default","","auto completion, correction and capitalization",262,N],[13,"Password","","hidden and sensitive text",262,N],[13,"AutoCompletion","","suggest word completions",262,N],[13,"AutoCorrection","","suggest word corrections",262,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",262,N],[13,"Lowercase","","prefer lowercase letters",262,N],[13,"Uppercase","","prefer uppercase letters",262,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",262,N],[13,"HiddenText","","characters should be hidden",262,N],[13,"SensitiveData","","typed text should not be stored",262,N],[13,"Latin","","just latin characters should be entered",262,N],[13,"Multiline","","the text input is multiline",262,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",263,N],[13,"Alpha","","allow only alphabetic characters",263,N],[13,"Digits","","allow only digits",263,N],[13,"Number","","input a number (including decimal separator and sign)",263,N],[13,"Phone","","input a phone number",263,N],[13,"Url","","input an URL",263,N],[13,"Email","","input an email address",263,N],[13,"Name","","input a name of a person",263,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",263,N],[13,"Date","","input a date",263,N],[13,"Time","","input a time",263,N],[13,"Datetime","","input a date and time",263,N],[13,"Terminal","","input for a terminal",263,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",264,N],[13,"None","","style should be the same as in non-composing text",264,N],[13,"Active","","",264,N],[13,"Inactive","","",264,N],[13,"Highlight","","",264,N],[13,"Underline","","",264,N],[13,"Selection","","",264,N],[13,"Incorrect","","",264,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",265,N],[13,"Ltr","","left-to-right",265,N],[13,"Rtl","","right-to-left",265,N],[4,"Request","","",N,N],[13,"Activate","","request activation",266,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[12,"surface","","",266,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",266,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",266,N],[13,"HideInputPanel","","hide input panels",266,N],[13,"Reset","","reset",266,N],[13,"SetSurroundingText","","sets the surrounding text",266,N],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[12,"cursor","","",266,N],[12,"anchor","","",266,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",266,N],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[12,"purpose","","",266,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,N],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[12,"y","","",266,N],[12,"width","","",266,N],[12,"height","","",266,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",266,N],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,N],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,N],[12,"index","","",266,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",267,N],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",267,N],[13,"ModifiersMap","","modifiers map",267,N],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",267,N],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",267,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"text","","",267,N],[12,"commit","","",267,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",267,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"length","","",267,N],[12,"style","","",267,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",267,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",267,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"text","","",267,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",267,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"anchor","","",267,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",267,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"length","","",267,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",267,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"time","","",267,N],[12,"sym","","",267,N],[12,"state","","",267,N],[12,"modifiers","","",267,N],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",267,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"language","","",267,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",267,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,N],[12,"direction","","",267,N],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[10,"activate","","request activation",268,N],[10,"deactivate","","request deactivation",268,N],[10,"show_input_panel","","show input panels",268,N],[10,"hide_input_panel","","hide input panels",268,N],[10,"reset","","reset",268,N],[10,"set_surrounding_text","","sets the surrounding text",268,N],[10,"set_content_type","","set content purpose and hint",268,N],[10,"set_cursor_rectangle","","",268,N],[10,"set_preferred_language","","sets preferred language",268,N],[10,"commit_state","","",268,N],[10,"invoke_action","","",268,N],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",269,N],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",269,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_text_input","","create text input",270,[[["self"],["f"]],["result",["proxy"]]]],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",271,N],[13,"Default","","auto completion, correction and capitalization",271,N],[13,"Password","","hidden and sensitive text",271,N],[13,"AutoCompletion","","suggest word completions",271,N],[13,"AutoCorrection","","suggest word corrections",271,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",271,N],[13,"Lowercase","","prefer lowercase letters",271,N],[13,"Uppercase","","prefer uppercase letters",271,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",271,N],[13,"HiddenText","","characters should be hidden",271,N],[13,"SensitiveData","","typed text should not be stored",271,N],[13,"Latin","","just latin characters should be entered",271,N],[13,"Multiline","","the text input is multiline",271,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",272,N],[13,"Alpha","","allow only alphabetic characters",272,N],[13,"Digits","","allow only digits",272,N],[13,"Number","","input a number (including decimal separator and sign)",272,N],[13,"Phone","","input a phone number",272,N],[13,"Url","","input an URL",272,N],[13,"Email","","input an email address",272,N],[13,"Name","","input a name of a person",272,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",272,N],[13,"Date","","input a date",272,N],[13,"Time","","input a time",272,N],[13,"Datetime","","input a date and time",272,N],[13,"Terminal","","input for a terminal",272,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",273,N],[13,"None","","style should be the same as in non-composing text",273,N],[13,"Active","","",273,N],[13,"Inactive","","",273,N],[13,"Highlight","","",273,N],[13,"Underline","","",273,N],[13,"Selection","","",273,N],[13,"Incorrect","","",273,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",274,N],[13,"Ltr","","left-to-right",274,N],[13,"Rtl","","right-to-left",274,N],[4,"Request","","",N,N],[13,"Activate","","request activation",275,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[12,"surface","","",275,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",275,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",275,N],[13,"HideInputPanel","","hide input panels",275,N],[13,"Reset","","reset",275,N],[13,"SetSurroundingText","","sets the surrounding text",275,N],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[12,"cursor","","",275,N],[12,"anchor","","",275,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",275,N],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[12,"purpose","","",275,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,N],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[12,"y","","",275,N],[12,"width","","",275,N],[12,"height","","",275,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",275,N],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,N],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,N],[12,"index","","",275,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",276,N],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",276,N],[13,"ModifiersMap","","modifiers map",276,N],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",276,N],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",276,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"text","","",276,N],[12,"commit","","",276,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",276,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"length","","",276,N],[12,"style","","",276,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",276,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",276,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"text","","",276,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",276,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"anchor","","",276,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",276,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"length","","",276,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",276,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"time","","",276,N],[12,"sym","","",276,N],[12,"state","","",276,N],[12,"modifiers","","",276,N],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",276,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"language","","",276,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",276,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,N],[12,"direction","","",276,N],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",277,N],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",277,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[0,"c_interfaces","wayland_protocols::unstable::text_input::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_text_input_v1_requests","","",N,N],[7,"zwp_text_input_v1_events","","",N,N],[7,"zwp_text_input_v1_interface","","",N,N],[7,"zwp_text_input_manager_v1_requests","","",N,N],[7,"zwp_text_input_manager_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",262,[[["self"]],["contenthint"]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result"]]],[11,"eq","","",262,[[["self"],["contenthint"]],["bool"]]],[11,"from_raw","","",262,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",262,[[["self"]],["u32"]]],[11,"clone","","",263,[[["self"]],["contentpurpose"]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result"]]],[11,"eq","","",263,[[["self"],["contentpurpose"]],["bool"]]],[11,"from_raw","","",263,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",263,[[["self"]],["u32"]]],[11,"clone","","",264,[[["self"]],["preeditstyle"]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result"]]],[11,"eq","","",264,[[["self"],["preeditstyle"]],["bool"]]],[11,"from_raw","","",264,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",264,[[["self"]],["u32"]]],[11,"clone","","",265,[[["self"]],["textdirection"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"eq","","",265,[[["self"],["textdirection"]],["bool"]]],[11,"from_raw","","",265,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",265,[[["self"]],["u32"]]],[11,"is_destructor","","",266,[[["self"]],["bool"]]],[11,"opcode","","",266,[[["self"]],["u16"]]],[11,"child","","",266,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",266,N],[11,"into_raw","","",266,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",266,N],[11,"as_raw_c_in","","",266,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",267,[[["self"]],["bool"]]],[11,"opcode","","",267,[[["self"]],["u16"]]],[11,"child","","",267,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",267,N],[11,"into_raw","","",267,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",267,N],[11,"as_raw_c_in","","",267,[[["self"],["f"]],["t"]]],[11,"c_interface","","",278,N],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",269,[[["self"]],["bool"]]],[11,"opcode","","",269,[[["self"]],["u16"]]],[11,"child","","",269,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",269,N],[11,"into_raw","","",269,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",269,N],[11,"as_raw_c_in","","",269,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",279,[[["self"]],["bool"]]],[11,"opcode","","",279,[[["self"]],["u16"]]],[11,"child","","",279,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",279,N],[11,"into_raw","","",279,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",279,N],[11,"as_raw_c_in","","",279,[[["self"],["f"]],["t"]]],[11,"c_interface","","",280,N],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",271,[[["self"]],["contenthint"]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"eq","","",271,[[["self"],["contenthint"]],["bool"]]],[11,"from_raw","","",271,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",271,[[["self"]],["u32"]]],[11,"clone","","",272,[[["self"]],["contentpurpose"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"eq","","",272,[[["self"],["contentpurpose"]],["bool"]]],[11,"from_raw","","",272,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",272,[[["self"]],["u32"]]],[11,"clone","","",273,[[["self"]],["preeditstyle"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"eq","","",273,[[["self"],["preeditstyle"]],["bool"]]],[11,"from_raw","","",273,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",273,[[["self"]],["u32"]]],[11,"clone","","",274,[[["self"]],["textdirection"]]],[11,"fmt","","",274,[[["self"],["formatter"]],["result"]]],[11,"eq","","",274,[[["self"],["textdirection"]],["bool"]]],[11,"from_raw","","",274,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",274,[[["self"]],["u32"]]],[11,"is_destructor","","",275,[[["self"]],["bool"]]],[11,"opcode","","",275,[[["self"]],["u16"]]],[11,"child","","",275,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",275,N],[11,"into_raw","","",275,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",275,N],[11,"as_raw_c_in","","",275,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",276,[[["self"]],["bool"]]],[11,"opcode","","",276,[[["self"]],["u16"]]],[11,"child","","",276,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",276,N],[11,"into_raw","","",276,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",276,N],[11,"as_raw_c_in","","",276,[[["self"],["f"]],["t"]]],[11,"c_interface","","",281,N],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",277,[[["self"]],["bool"]]],[11,"opcode","","",277,[[["self"]],["u16"]]],[11,"child","","",277,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",277,N],[11,"into_raw","","",277,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",277,N],[11,"as_raw_c_in","","",277,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",282,[[["self"]],["bool"]]],[11,"opcode","","",282,[[["self"]],["u16"]]],[11,"child","","",282,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",282,N],[11,"into_raw","","",282,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",282,N],[11,"as_raw_c_in","","",282,[[["self"],["f"]],["t"]]],[11,"c_interface","","",283,N],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",N,N],[0,"v1","wayland_protocols::unstable::xdg_decoration","",N,N],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",284,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",284,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",284,N],[12,"toplevel","","",284,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the decoration manager object",285,N],[10,"get_toplevel_decoration","","create a new toplevel decoration object",285,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",286,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",286,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",286,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",287,N],[13,"ServerSide","","server-side window decoration",287,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",288,N],[13,"SetMode","","set the decoration mode",288,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",288,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",288,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",289,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",289,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[10,"destroy","","destroy the decoration object",290,N],[10,"set_mode","","set the decoration mode",290,N],[10,"unset_mode","","unset the decoration mode",290,N],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",291,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",291,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",291,N],[12,"toplevel","","",291,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",292,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",292,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",292,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",293,N],[13,"ServerSide","","server-side window decoration",293,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",294,N],[13,"SetMode","","set the decoration mode",294,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",294,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",294,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",295,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",295,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",N,N],[7,"zxdg_decoration_manager_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::c_interfaces","",N,N],[7,"zxdg_decoration_manager_v1_interface","","",N,N],[7,"zxdg_toplevel_decoration_v1_requests","","",N,N],[7,"zxdg_toplevel_decoration_v1_events","","",N,N],[7,"zxdg_toplevel_decoration_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",284,[[["self"]],["bool"]]],[11,"opcode","","",284,[[["self"]],["u16"]]],[11,"child","","",284,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",284,N],[11,"into_raw","","",284,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",284,N],[11,"as_raw_c_in","","",284,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",296,[[["self"]],["bool"]]],[11,"opcode","","",296,[[["self"]],["u16"]]],[11,"child","","",296,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",296,N],[11,"into_raw","","",296,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",296,N],[11,"as_raw_c_in","","",296,[[["self"],["f"]],["t"]]],[11,"c_interface","","",297,N],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",286,[[["self"]],["error"]]],[11,"fmt","","",286,[[["self"],["formatter"]],["result"]]],[11,"eq","","",286,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",286,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",286,[[["self"]],["u32"]]],[11,"clone","","",287,[[["self"]],["mode"]]],[11,"fmt","","",287,[[["self"],["formatter"]],["result"]]],[11,"eq","","",287,[[["self"],["mode"]],["bool"]]],[11,"from_raw","","",287,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",287,[[["self"]],["u32"]]],[11,"is_destructor","","",288,[[["self"]],["bool"]]],[11,"opcode","","",288,[[["self"]],["u16"]]],[11,"child","","",288,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",288,N],[11,"into_raw","","",288,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",288,N],[11,"as_raw_c_in","","",288,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",289,[[["self"]],["bool"]]],[11,"opcode","","",289,[[["self"]],["u16"]]],[11,"child","","",289,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",289,N],[11,"into_raw","","",289,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",289,N],[11,"as_raw_c_in","","",289,[[["self"],["f"]],["t"]]],[11,"c_interface","","",298,N],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",291,[[["self"]],["bool"]]],[11,"opcode","","",291,[[["self"]],["u16"]]],[11,"child","","",291,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",291,N],[11,"into_raw","","",291,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",291,N],[11,"as_raw_c_in","","",291,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",299,[[["self"]],["bool"]]],[11,"opcode","","",299,[[["self"]],["u16"]]],[11,"child","","",299,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",299,N],[11,"into_raw","","",299,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",299,N],[11,"as_raw_c_in","","",299,[[["self"],["f"]],["t"]]],[11,"c_interface","","",300,N],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",292,[[["self"]],["error"]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result"]]],[11,"eq","","",292,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",292,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",292,[[["self"]],["u32"]]],[11,"clone","","",293,[[["self"]],["mode"]]],[11,"fmt","","",293,[[["self"],["formatter"]],["result"]]],[11,"eq","","",293,[[["self"],["mode"]],["bool"]]],[11,"from_raw","","",293,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",293,[[["self"]],["u32"]]],[11,"is_destructor","","",294,[[["self"]],["bool"]]],[11,"opcode","","",294,[[["self"]],["u16"]]],[11,"child","","",294,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",294,N],[11,"into_raw","","",294,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",294,N],[11,"as_raw_c_in","","",294,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",295,[[["self"]],["bool"]]],[11,"opcode","","",295,[[["self"]],["u16"]]],[11,"child","","",295,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",295,N],[11,"into_raw","","",295,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",295,N],[11,"as_raw_c_in","","",295,[[["self"],["f"]],["t"]]],[11,"c_interface","","",301,N],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",N,N],[0,"v1","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",302,N],[13,"Export","","export a surface",302,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",302,N],[12,"surface","","",302,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",303,N],[10,"export","","export a surface",303,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",304,N],[13,"Import","","import a surface",304,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",304,N],[12,"handle","","",304,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",305,N],[10,"import","","import a surface",305,[[["self"],["string"],["f"]],["result",["proxy"]]]],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",306,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",307,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",307,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[10,"destroy","","unexport the exported surface",308,N],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",309,N],[13,"SetParentOf","","set as the parent of some surface",309,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",309,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",310,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",311,N],[10,"set_parent_of","","set as the parent of some surface",311,N],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",312,N],[13,"Export","","export a surface",312,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",312,N],[12,"surface","","",312,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",313,N],[13,"Import","","import a surface",313,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",313,N],[12,"handle","","",313,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",314,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",315,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",315,N],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",316,N],[13,"SetParentOf","","set as the parent of some surface",316,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",316,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",317,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v1::c_interfaces","",N,N],[7,"zxdg_exporter_v1_requests","","",N,N],[7,"zxdg_exporter_v1_interface","","",N,N],[7,"zxdg_importer_v1_requests","","",N,N],[7,"zxdg_importer_v1_interface","","",N,N],[7,"zxdg_exported_v1_requests","","",N,N],[7,"zxdg_exported_v1_events","","",N,N],[7,"zxdg_exported_v1_interface","","",N,N],[7,"zxdg_imported_v1_requests","","",N,N],[7,"zxdg_imported_v1_events","","",N,N],[7,"zxdg_imported_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",302,[[["self"]],["bool"]]],[11,"opcode","","",302,[[["self"]],["u16"]]],[11,"child","","",302,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",302,N],[11,"into_raw","","",302,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",302,N],[11,"as_raw_c_in","","",302,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",318,[[["self"]],["bool"]]],[11,"opcode","","",318,[[["self"]],["u16"]]],[11,"child","","",318,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",318,N],[11,"into_raw","","",318,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",318,N],[11,"as_raw_c_in","","",318,[[["self"],["f"]],["t"]]],[11,"c_interface","","",319,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",304,[[["self"]],["bool"]]],[11,"opcode","","",304,[[["self"]],["u16"]]],[11,"child","","",304,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",304,N],[11,"into_raw","","",304,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",304,N],[11,"as_raw_c_in","","",304,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",320,[[["self"]],["bool"]]],[11,"opcode","","",320,[[["self"]],["u16"]]],[11,"child","","",320,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",320,N],[11,"into_raw","","",320,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",320,N],[11,"as_raw_c_in","","",320,[[["self"],["f"]],["t"]]],[11,"c_interface","","",321,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",306,[[["self"]],["bool"]]],[11,"opcode","","",306,[[["self"]],["u16"]]],[11,"child","","",306,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",306,N],[11,"into_raw","","",306,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",306,N],[11,"as_raw_c_in","","",306,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",307,[[["self"]],["bool"]]],[11,"opcode","","",307,[[["self"]],["u16"]]],[11,"child","","",307,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",307,N],[11,"into_raw","","",307,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",307,N],[11,"as_raw_c_in","","",307,[[["self"],["f"]],["t"]]],[11,"c_interface","","",322,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",309,[[["self"]],["bool"]]],[11,"opcode","","",309,[[["self"]],["u16"]]],[11,"child","","",309,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",309,N],[11,"into_raw","","",309,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",309,N],[11,"as_raw_c_in","","",309,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",310,[[["self"]],["bool"]]],[11,"opcode","","",310,[[["self"]],["u16"]]],[11,"child","","",310,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",310,N],[11,"into_raw","","",310,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",310,N],[11,"as_raw_c_in","","",310,[[["self"],["f"]],["t"]]],[11,"c_interface","","",323,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",312,[[["self"]],["bool"]]],[11,"opcode","","",312,[[["self"]],["u16"]]],[11,"child","","",312,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",312,N],[11,"into_raw","","",312,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",312,N],[11,"as_raw_c_in","","",312,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",324,[[["self"]],["bool"]]],[11,"opcode","","",324,[[["self"]],["u16"]]],[11,"child","","",324,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",324,N],[11,"into_raw","","",324,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",324,N],[11,"as_raw_c_in","","",324,[[["self"],["f"]],["t"]]],[11,"c_interface","","",325,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",313,[[["self"]],["bool"]]],[11,"opcode","","",313,[[["self"]],["u16"]]],[11,"child","","",313,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",313,N],[11,"into_raw","","",313,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",313,N],[11,"as_raw_c_in","","",313,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",326,[[["self"]],["bool"]]],[11,"opcode","","",326,[[["self"]],["u16"]]],[11,"child","","",326,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",326,N],[11,"into_raw","","",326,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",326,N],[11,"as_raw_c_in","","",326,[[["self"],["f"]],["t"]]],[11,"c_interface","","",327,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",314,[[["self"]],["bool"]]],[11,"opcode","","",314,[[["self"]],["u16"]]],[11,"child","","",314,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",314,N],[11,"into_raw","","",314,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",314,N],[11,"as_raw_c_in","","",314,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",315,[[["self"]],["bool"]]],[11,"opcode","","",315,[[["self"]],["u16"]]],[11,"child","","",315,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",315,N],[11,"into_raw","","",315,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",315,N],[11,"as_raw_c_in","","",315,[[["self"],["f"]],["t"]]],[11,"c_interface","","",328,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",316,[[["self"]],["bool"]]],[11,"opcode","","",316,[[["self"]],["u16"]]],[11,"child","","",316,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",316,N],[11,"into_raw","","",316,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",316,N],[11,"as_raw_c_in","","",316,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",317,[[["self"]],["bool"]]],[11,"opcode","","",317,[[["self"]],["u16"]]],[11,"child","","",317,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",317,N],[11,"into_raw","","",317,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",317,N],[11,"as_raw_c_in","","",317,[[["self"],["f"]],["t"]]],[11,"c_interface","","",329,N],[0,"v2","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",330,N],[13,"ExportToplevel","","export a toplevel surface",330,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",330,N],[12,"surface","","",330,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",331,N],[10,"export_toplevel","","export a toplevel surface",331,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",332,N],[13,"ImportToplevel","","import a toplevel surface",332,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",332,N],[12,"handle","","",332,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",333,N],[10,"import_toplevel","","import a toplevel surface",333,[[["self"],["string"],["f"]],["result",["proxy"]]]],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",334,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",335,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",335,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[10,"destroy","","unexport the exported surface",336,N],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",337,N],[13,"SetParentOf","","set as the parent of some surface",337,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",337,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",338,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",339,N],[10,"set_parent_of","","set as the parent of some surface",339,N],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",340,N],[13,"ExportToplevel","","export a toplevel surface",340,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",340,N],[12,"surface","","",340,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",341,N],[13,"ImportToplevel","","import a toplevel surface",341,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",341,N],[12,"handle","","",341,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",342,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",343,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",343,N],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",344,N],[13,"SetParentOf","","set as the parent of some surface",344,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",344,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",345,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v2::c_interfaces","",N,N],[7,"zxdg_exporter_v2_requests","","",N,N],[7,"zxdg_exporter_v2_interface","","",N,N],[7,"zxdg_importer_v2_requests","","",N,N],[7,"zxdg_importer_v2_interface","","",N,N],[7,"zxdg_exported_v2_requests","","",N,N],[7,"zxdg_exported_v2_events","","",N,N],[7,"zxdg_exported_v2_interface","","",N,N],[7,"zxdg_imported_v2_requests","","",N,N],[7,"zxdg_imported_v2_events","","",N,N],[7,"zxdg_imported_v2_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",330,[[["self"]],["bool"]]],[11,"opcode","","",330,[[["self"]],["u16"]]],[11,"child","","",330,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",330,N],[11,"into_raw","","",330,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",330,N],[11,"as_raw_c_in","","",330,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",346,[[["self"]],["bool"]]],[11,"opcode","","",346,[[["self"]],["u16"]]],[11,"child","","",346,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",346,N],[11,"into_raw","","",346,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",346,N],[11,"as_raw_c_in","","",346,[[["self"],["f"]],["t"]]],[11,"c_interface","","",347,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",332,[[["self"]],["bool"]]],[11,"opcode","","",332,[[["self"]],["u16"]]],[11,"child","","",332,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",332,N],[11,"into_raw","","",332,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",332,N],[11,"as_raw_c_in","","",332,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",348,[[["self"]],["bool"]]],[11,"opcode","","",348,[[["self"]],["u16"]]],[11,"child","","",348,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",348,N],[11,"into_raw","","",348,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",348,N],[11,"as_raw_c_in","","",348,[[["self"],["f"]],["t"]]],[11,"c_interface","","",349,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",334,[[["self"]],["bool"]]],[11,"opcode","","",334,[[["self"]],["u16"]]],[11,"child","","",334,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",334,N],[11,"into_raw","","",334,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",334,N],[11,"as_raw_c_in","","",334,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",335,[[["self"]],["bool"]]],[11,"opcode","","",335,[[["self"]],["u16"]]],[11,"child","","",335,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",335,N],[11,"into_raw","","",335,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",335,N],[11,"as_raw_c_in","","",335,[[["self"],["f"]],["t"]]],[11,"c_interface","","",350,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",337,[[["self"]],["bool"]]],[11,"opcode","","",337,[[["self"]],["u16"]]],[11,"child","","",337,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",337,N],[11,"into_raw","","",337,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",337,N],[11,"as_raw_c_in","","",337,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",338,[[["self"]],["bool"]]],[11,"opcode","","",338,[[["self"]],["u16"]]],[11,"child","","",338,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",338,N],[11,"into_raw","","",338,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",338,N],[11,"as_raw_c_in","","",338,[[["self"],["f"]],["t"]]],[11,"c_interface","","",351,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",340,[[["self"]],["bool"]]],[11,"opcode","","",340,[[["self"]],["u16"]]],[11,"child","","",340,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",340,N],[11,"into_raw","","",340,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",340,N],[11,"as_raw_c_in","","",340,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",352,[[["self"]],["bool"]]],[11,"opcode","","",352,[[["self"]],["u16"]]],[11,"child","","",352,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",352,N],[11,"into_raw","","",352,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",352,N],[11,"as_raw_c_in","","",352,[[["self"],["f"]],["t"]]],[11,"c_interface","","",353,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",341,[[["self"]],["bool"]]],[11,"opcode","","",341,[[["self"]],["u16"]]],[11,"child","","",341,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",341,N],[11,"into_raw","","",341,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",341,N],[11,"as_raw_c_in","","",341,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",354,[[["self"]],["bool"]]],[11,"opcode","","",354,[[["self"]],["u16"]]],[11,"child","","",354,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",354,N],[11,"into_raw","","",354,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",354,N],[11,"as_raw_c_in","","",354,[[["self"],["f"]],["t"]]],[11,"c_interface","","",355,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",342,[[["self"]],["bool"]]],[11,"opcode","","",342,[[["self"]],["u16"]]],[11,"child","","",342,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",342,N],[11,"into_raw","","",342,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",342,N],[11,"as_raw_c_in","","",342,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",343,[[["self"]],["bool"]]],[11,"opcode","","",343,[[["self"]],["u16"]]],[11,"child","","",343,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",343,N],[11,"into_raw","","",343,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",343,N],[11,"as_raw_c_in","","",343,[[["self"],["f"]],["t"]]],[11,"c_interface","","",356,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",344,[[["self"]],["bool"]]],[11,"opcode","","",344,[[["self"]],["u16"]]],[11,"child","","",344,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",344,N],[11,"into_raw","","",344,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",344,N],[11,"as_raw_c_in","","",344,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",345,[[["self"]],["bool"]]],[11,"opcode","","",345,[[["self"]],["u16"]]],[11,"child","","",345,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",345,N],[11,"into_raw","","",345,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",345,N],[11,"as_raw_c_in","","",345,[[["self"],["f"]],["t"]]],[11,"c_interface","","",357,N],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",N,N],[0,"v1","wayland_protocols::unstable::xdg_output","",N,N],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",358,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",358,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",358,N],[12,"output","","",358,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_output_manager object",359,N],[10,"get_xdg_output","","create an xdg output from a wl_output",359,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",360,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",361,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,N],[12,"y","","",361,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",361,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,N],[12,"height","","",361,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",361,N],[13,"Name","","name of this output",361,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",361,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[10,"destroy","","destroy the xdg_output object",362,N],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",363,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",363,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",363,N],[12,"output","","",363,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",364,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",365,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,N],[12,"y","","",365,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",365,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,N],[12,"height","","",365,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",365,N],[13,"Name","","name of this output",365,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",365,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_output::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::unstable::xdg_output::v1::c_interfaces","",N,N],[7,"zxdg_output_manager_v1_requests","","",N,N],[7,"zxdg_output_manager_v1_interface","","",N,N],[7,"zxdg_output_v1_requests","","",N,N],[7,"zxdg_output_v1_events","","",N,N],[7,"zxdg_output_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",358,[[["self"]],["bool"]]],[11,"opcode","","",358,[[["self"]],["u16"]]],[11,"child","","",358,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",358,N],[11,"into_raw","","",358,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",358,N],[11,"as_raw_c_in","","",358,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",366,[[["self"]],["bool"]]],[11,"opcode","","",366,[[["self"]],["u16"]]],[11,"child","","",366,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",366,N],[11,"into_raw","","",366,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",366,N],[11,"as_raw_c_in","","",366,[[["self"],["f"]],["t"]]],[11,"c_interface","","",367,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",360,[[["self"]],["bool"]]],[11,"opcode","","",360,[[["self"]],["u16"]]],[11,"child","","",360,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",360,N],[11,"into_raw","","",360,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",360,N],[11,"as_raw_c_in","","",360,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",361,[[["self"]],["bool"]]],[11,"opcode","","",361,[[["self"]],["u16"]]],[11,"child","","",361,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",361,N],[11,"into_raw","","",361,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",361,N],[11,"as_raw_c_in","","",361,[[["self"],["f"]],["t"]]],[11,"c_interface","","",368,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",363,[[["self"]],["bool"]]],[11,"opcode","","",363,[[["self"]],["u16"]]],[11,"child","","",363,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",363,N],[11,"into_raw","","",363,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",363,N],[11,"as_raw_c_in","","",363,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",369,[[["self"]],["bool"]]],[11,"opcode","","",369,[[["self"]],["u16"]]],[11,"child","","",369,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",369,N],[11,"into_raw","","",369,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",369,N],[11,"as_raw_c_in","","",369,[[["self"],["f"]],["t"]]],[11,"c_interface","","",370,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",364,[[["self"]],["bool"]]],[11,"opcode","","",364,[[["self"]],["u16"]]],[11,"child","","",364,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",364,N],[11,"into_raw","","",364,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",364,N],[11,"as_raw_c_in","","",364,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",365,[[["self"]],["bool"]]],[11,"opcode","","",365,[[["self"]],["u16"]]],[11,"child","","",365,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",365,N],[11,"into_raw","","",365,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",365,N],[11,"as_raw_c_in","","",365,[[["self"],["f"]],["t"]]],[11,"c_interface","","",371,N],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",N,N],[0,"v5","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",372,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",373,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",373,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",373,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",373,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",374,N],[13,"UseUnstableVersion","","enable use of this unstable version",374,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",374,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,N],[12,"surface","","",374,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",374,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,N],[12,"surface","","",374,N],[12,"parent","","",374,N],[12,"seat","","",374,N],[12,"serial","","",374,N],[12,"x","","",374,N],[12,"y","","",374,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",374,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",375,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",375,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[10,"destroy","","destroy xdg_shell",376,N],[10,"use_unstable_version","","enable use of this unstable version",376,N],[10,"get_xdg_surface","","create a shell surface from a surface",376,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_xdg_popup","","create a popup for a surface",376,[[["self"],["proxy"],["proxy"],["proxy"],["u32"],["i32"],["i32"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",376,N],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",377,N],[13,"Top","","",377,N],[13,"Bottom","","",377,N],[13,"Left","","",377,N],[13,"TopLeft","","",377,N],[13,"BottomLeft","","",377,N],[13,"Right","","",377,N],[13,"TopRight","","",377,N],[13,"BottomRight","","",377,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",378,N],[13,"Fullscreen","","the surface is fullscreen",378,N],[13,"Resizing","","the surface is being resized",378,N],[13,"Activated","","the surface is now activated",378,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",379,N],[13,"SetParent","","set the parent of this surface",379,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",379,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",379,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",379,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[12,"serial","","",379,N],[12,"x","","",379,N],[12,"y","","",379,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",379,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[12,"serial","","",379,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",379,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[12,"serial","","",379,N],[12,"edges","","",379,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",379,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",379,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[12,"y","","",379,N],[12,"width","","",379,N],[12,"height","","",379,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",379,N],[13,"UnsetMaximized","","unmaximize the window",379,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",379,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",379,N],[13,"SetMinimized","","set the window as minimized",379,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",380,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",380,N],[12,"height","","",380,N],[12,"states","","",380,N],[12,"serial","","",380,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",380,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","Destroy the xdg_surface",381,N],[10,"set_parent","","set the parent of this surface",381,N],[10,"set_title","","set surface title",381,N],[10,"set_app_id","","set application ID",381,N],[10,"show_window_menu","","show the window menu",381,N],[10,"_move","","start an interactive move",381,N],[10,"resize","","start an interactive resize",381,N],[10,"ack_configure","","ack a configure event",381,N],[10,"set_window_geometry","","set the new window geometry",381,N],[10,"set_maximized","","maximize the window",381,N],[10,"unset_maximized","","unmaximize the window",381,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",381,N],[10,"unset_fullscreen","","",381,N],[10,"set_minimized","","set the window as minimized",381,N],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",382,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",383,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",384,N],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",385,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",386,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",386,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",386,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",386,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",387,N],[13,"UseUnstableVersion","","enable use of this unstable version",387,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",387,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,N],[12,"surface","","",387,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",387,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,N],[12,"surface","","",387,N],[12,"parent","","",387,N],[12,"seat","","",387,N],[12,"serial","","",387,N],[12,"x","","",387,N],[12,"y","","",387,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",387,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",388,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",388,N],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",389,N],[13,"Top","","",389,N],[13,"Bottom","","",389,N],[13,"Left","","",389,N],[13,"TopLeft","","",389,N],[13,"BottomLeft","","",389,N],[13,"Right","","",389,N],[13,"TopRight","","",389,N],[13,"BottomRight","","",389,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",390,N],[13,"Fullscreen","","the surface is fullscreen",390,N],[13,"Resizing","","the surface is being resized",390,N],[13,"Activated","","the surface is now activated",390,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",391,N],[13,"SetParent","","set the parent of this surface",391,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",391,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",391,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",391,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[12,"serial","","",391,N],[12,"x","","",391,N],[12,"y","","",391,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",391,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[12,"serial","","",391,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",391,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[12,"serial","","",391,N],[12,"edges","","",391,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",391,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",391,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[12,"y","","",391,N],[12,"width","","",391,N],[12,"height","","",391,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",391,N],[13,"UnsetMaximized","","unmaximize the window",391,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",391,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",391,N],[13,"SetMinimized","","set the window as minimized",391,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",392,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",392,N],[12,"height","","",392,N],[12,"states","","",392,N],[12,"serial","","",392,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",392,N],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",393,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",394,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v5","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v5::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"xdg_shell_requests","","",N,N],[7,"xdg_shell_events","","",N,N],[7,"xdg_shell_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",372,[[["self"]],["version"]]],[11,"fmt","","",372,[[["self"],["formatter"]],["result"]]],[11,"eq","","",372,[[["self"],["version"]],["bool"]]],[11,"from_raw","","",372,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",372,[[["self"]],["u32"]]],[11,"clone","","",373,[[["self"]],["error"]]],[11,"fmt","","",373,[[["self"],["formatter"]],["result"]]],[11,"eq","","",373,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",373,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",373,[[["self"]],["u32"]]],[11,"is_destructor","","",374,[[["self"]],["bool"]]],[11,"opcode","","",374,[[["self"]],["u16"]]],[11,"child","","",374,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",374,N],[11,"into_raw","","",374,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",374,N],[11,"as_raw_c_in","","",374,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",375,[[["self"]],["bool"]]],[11,"opcode","","",375,[[["self"]],["u16"]]],[11,"child","","",375,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",375,N],[11,"into_raw","","",375,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",375,N],[11,"as_raw_c_in","","",375,[[["self"],["f"]],["t"]]],[11,"c_interface","","",395,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",377,[[["self"]],["resizeedge"]]],[11,"fmt","","",377,[[["self"],["formatter"]],["result"]]],[11,"eq","","",377,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",377,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",377,[[["self"]],["u32"]]],[11,"clone","","",378,[[["self"]],["state"]]],[11,"fmt","","",378,[[["self"],["formatter"]],["result"]]],[11,"eq","","",378,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",378,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",378,[[["self"]],["u32"]]],[11,"is_destructor","","",379,[[["self"]],["bool"]]],[11,"opcode","","",379,[[["self"]],["u16"]]],[11,"child","","",379,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",379,N],[11,"into_raw","","",379,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",379,N],[11,"as_raw_c_in","","",379,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",380,[[["self"]],["bool"]]],[11,"opcode","","",380,[[["self"]],["u16"]]],[11,"child","","",380,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",380,N],[11,"into_raw","","",380,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",380,N],[11,"as_raw_c_in","","",380,[[["self"],["f"]],["t"]]],[11,"c_interface","","",396,N],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",382,[[["self"]],["bool"]]],[11,"opcode","","",382,[[["self"]],["u16"]]],[11,"child","","",382,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",382,N],[11,"into_raw","","",382,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",382,N],[11,"as_raw_c_in","","",382,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",383,[[["self"]],["bool"]]],[11,"opcode","","",383,[[["self"]],["u16"]]],[11,"child","","",383,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",383,N],[11,"into_raw","","",383,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",383,N],[11,"as_raw_c_in","","",383,[[["self"],["f"]],["t"]]],[11,"c_interface","","",397,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",385,[[["self"]],["version"]]],[11,"fmt","","",385,[[["self"],["formatter"]],["result"]]],[11,"eq","","",385,[[["self"],["version"]],["bool"]]],[11,"from_raw","","",385,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",385,[[["self"]],["u32"]]],[11,"clone","","",386,[[["self"]],["error"]]],[11,"fmt","","",386,[[["self"],["formatter"]],["result"]]],[11,"eq","","",386,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",386,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",386,[[["self"]],["u32"]]],[11,"is_destructor","","",387,[[["self"]],["bool"]]],[11,"opcode","","",387,[[["self"]],["u16"]]],[11,"child","","",387,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",387,N],[11,"into_raw","","",387,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",387,N],[11,"as_raw_c_in","","",387,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",388,[[["self"]],["bool"]]],[11,"opcode","","",388,[[["self"]],["u16"]]],[11,"child","","",388,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",388,N],[11,"into_raw","","",388,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",388,N],[11,"as_raw_c_in","","",388,[[["self"],["f"]],["t"]]],[11,"c_interface","","",398,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",389,[[["self"]],["resizeedge"]]],[11,"fmt","","",389,[[["self"],["formatter"]],["result"]]],[11,"eq","","",389,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",389,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",389,[[["self"]],["u32"]]],[11,"clone","","",390,[[["self"]],["state"]]],[11,"fmt","","",390,[[["self"],["formatter"]],["result"]]],[11,"eq","","",390,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",390,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",390,[[["self"]],["u32"]]],[11,"is_destructor","","",391,[[["self"]],["bool"]]],[11,"opcode","","",391,[[["self"]],["u16"]]],[11,"child","","",391,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",391,N],[11,"into_raw","","",391,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",391,N],[11,"as_raw_c_in","","",391,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",392,[[["self"]],["bool"]]],[11,"opcode","","",392,[[["self"]],["u16"]]],[11,"child","","",392,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",392,N],[11,"into_raw","","",392,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",392,N],[11,"as_raw_c_in","","",392,[[["self"],["f"]],["t"]]],[11,"c_interface","","",399,N],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",393,[[["self"]],["bool"]]],[11,"opcode","","",393,[[["self"]],["u16"]]],[11,"child","","",393,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",393,N],[11,"into_raw","","",393,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",393,N],[11,"as_raw_c_in","","",393,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",394,[[["self"]],["bool"]]],[11,"opcode","","",394,[[["self"]],["u16"]]],[11,"child","","",394,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",394,N],[11,"into_raw","","",394,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",394,N],[11,"as_raw_c_in","","",394,[[["self"],["f"]],["t"]]],[11,"c_interface","","",400,N],[0,"v6","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",401,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",401,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",401,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",401,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",401,N],[13,"InvalidPositioner","","the client provided an invalid positioner",401,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",402,N],[13,"CreatePositioner","","create a positioner object",402,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",402,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,N],[12,"surface","","",402,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",402,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",403,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",403,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[10,"destroy","","destroy xdg_shell",404,N],[10,"create_positioner","","create a positioner object",404,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",404,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",404,N],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",405,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",406,N],[13,"SetSize","","set the size of the to-be positioned rectangle",406,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[12,"height","","",406,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",406,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[12,"y","","",406,N],[12,"width","","",406,N],[12,"height","","",406,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",406,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",406,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",406,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",406,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,N],[12,"y","","",406,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",407,N],[10,"set_size","","set the size of the to-be positioned rectangle",407,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",407,N],[10,"set_anchor","","set anchor rectangle anchor edges",407,N],[10,"set_gravity","","set child surface gravity",407,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",407,N],[10,"set_offset","","set surface position offset",407,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",408,N],[13,"AlreadyConstructed","","",408,N],[13,"UnconfiguredBuffer","","",408,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",409,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",409,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",409,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,N],[12,"parent","","",409,N],[12,"positioner","","",409,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",409,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,N],[12,"y","","",409,N],[12,"width","","",409,N],[12,"height","","",409,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",409,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",410,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",410,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[10,"destroy","","destroy the xdg_surface",411,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",411,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",411,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[10,"set_window_geometry","","set the new window geometry",411,N],[10,"ack_configure","","ack a configure event",411,N],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",412,N],[13,"Top","","",412,N],[13,"Bottom","","",412,N],[13,"Left","","",412,N],[13,"TopLeft","","",412,N],[13,"BottomLeft","","",412,N],[13,"Right","","",412,N],[13,"TopRight","","",412,N],[13,"BottomRight","","",412,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",413,N],[13,"Fullscreen","","the surface is fullscreen",413,N],[13,"Resizing","","the surface is being resized",413,N],[13,"Activated","","the surface is now activated",413,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",414,N],[13,"SetParent","","set the parent of this surface",414,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",414,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",414,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",414,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[12,"serial","","",414,N],[12,"x","","",414,N],[12,"y","","",414,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",414,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[12,"serial","","",414,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",414,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[12,"serial","","",414,N],[12,"edges","","",414,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",414,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[12,"height","","",414,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",414,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[12,"height","","",414,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",414,N],[13,"UnsetMaximized","","unmaximize the window",414,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",414,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",414,N],[13,"SetMinimized","","set the window as minimized",414,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",415,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",415,N],[12,"height","","",415,N],[12,"states","","",415,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",415,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",416,N],[10,"set_parent","","set the parent of this surface",416,N],[10,"set_title","","set surface title",416,N],[10,"set_app_id","","set application ID",416,N],[10,"show_window_menu","","show the window menu",416,N],[10,"_move","","start an interactive move",416,N],[10,"resize","","start an interactive resize",416,N],[10,"set_max_size","","set the maximum size",416,N],[10,"set_min_size","","set the minimum size",416,N],[10,"set_maximized","","maximize the window",416,N],[10,"unset_maximized","","unmaximize the window",416,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",416,N],[10,"unset_fullscreen","","",416,N],[10,"set_minimized","","set the window as minimized",416,N],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",417,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",418,N],[13,"Grab","","make the popup take an explicit grab",418,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",418,N],[12,"serial","","",418,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",419,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",419,N],[12,"y","","",419,N],[12,"width","","",419,N],[12,"height","","",419,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",419,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",420,N],[10,"grab","","make the popup take an explicit grab",420,N],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",421,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",421,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",421,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",421,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",421,N],[13,"InvalidPositioner","","the client provided an invalid positioner",421,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",422,N],[13,"CreatePositioner","","create a positioner object",422,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",422,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,N],[12,"surface","","",422,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",422,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",423,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",423,N],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",424,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",425,N],[13,"SetSize","","set the size of the to-be positioned rectangle",425,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[12,"height","","",425,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",425,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[12,"y","","",425,N],[12,"width","","",425,N],[12,"height","","",425,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",425,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",425,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",425,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",425,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,N],[12,"y","","",425,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",426,N],[13,"AlreadyConstructed","","",426,N],[13,"UnconfiguredBuffer","","",426,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",427,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",427,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",427,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,N],[12,"parent","","",427,N],[12,"positioner","","",427,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",427,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,N],[12,"y","","",427,N],[12,"width","","",427,N],[12,"height","","",427,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",427,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",428,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",428,N],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",429,N],[13,"Top","","",429,N],[13,"Bottom","","",429,N],[13,"Left","","",429,N],[13,"TopLeft","","",429,N],[13,"BottomLeft","","",429,N],[13,"Right","","",429,N],[13,"TopRight","","",429,N],[13,"BottomRight","","",429,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",430,N],[13,"Fullscreen","","the surface is fullscreen",430,N],[13,"Resizing","","the surface is being resized",430,N],[13,"Activated","","the surface is now activated",430,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",431,N],[13,"SetParent","","set the parent of this surface",431,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",431,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",431,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",431,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[12,"serial","","",431,N],[12,"x","","",431,N],[12,"y","","",431,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",431,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[12,"serial","","",431,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",431,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[12,"serial","","",431,N],[12,"edges","","",431,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",431,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[12,"height","","",431,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",431,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[12,"height","","",431,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",431,N],[13,"UnsetMaximized","","unmaximize the window",431,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",431,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",431,N],[13,"SetMinimized","","set the window as minimized",431,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",432,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",432,N],[12,"height","","",432,N],[12,"states","","",432,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",432,N],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",433,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",434,N],[13,"Grab","","make the popup take an explicit grab",434,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",434,N],[12,"serial","","",434,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",435,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",435,N],[12,"y","","",435,N],[12,"width","","",435,N],[12,"height","","",435,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",435,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v6","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v6::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"zxdg_shell_v6_requests","","",N,N],[7,"zxdg_shell_v6_events","","",N,N],[7,"zxdg_shell_v6_interface","","",N,N],[7,"zxdg_positioner_v6_requests","","",N,N],[7,"zxdg_positioner_v6_interface","","",N,N],[7,"zxdg_surface_v6_requests","","",N,N],[7,"zxdg_surface_v6_events","","",N,N],[7,"zxdg_surface_v6_interface","","",N,N],[7,"zxdg_toplevel_v6_requests","","",N,N],[7,"zxdg_toplevel_v6_events","","",N,N],[7,"zxdg_toplevel_v6_interface","","",N,N],[7,"zxdg_popup_v6_requests","","",N,N],[7,"zxdg_popup_v6_events","","",N,N],[7,"zxdg_popup_v6_interface","","",N,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",401,[[["self"]],["error"]]],[11,"fmt","","",401,[[["self"],["formatter"]],["result"]]],[11,"eq","","",401,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",401,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",401,[[["self"]],["u32"]]],[11,"is_destructor","","",402,[[["self"]],["bool"]]],[11,"opcode","","",402,[[["self"]],["u16"]]],[11,"child","","",402,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",402,N],[11,"into_raw","","",402,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",402,N],[11,"as_raw_c_in","","",402,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",403,[[["self"]],["bool"]]],[11,"opcode","","",403,[[["self"]],["u16"]]],[11,"child","","",403,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",403,N],[11,"into_raw","","",403,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",403,N],[11,"as_raw_c_in","","",403,[[["self"],["f"]],["t"]]],[11,"c_interface","","",436,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",405,[[["self"]],["error"]]],[11,"fmt","","",405,[[["self"],["formatter"]],["result"]]],[11,"eq","","",405,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",405,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",405,[[["self"]],["u32"]]],[11,"eq","","",437,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",437,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",437,[[["self"]],["anchor"]]],[11,"partial_cmp","","",437,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",437,[[["self"],["anchor"]],["bool"]]],[11,"le","","",437,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",437,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",437,[[["self"],["anchor"]],["bool"]]],[11,"cmp","","",437,[[["self"],["anchor"]],["ordering"]]],[11,"hash","","",437,N],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[18,"None","","the center of the anchor rectangle",437,N],[18,"Top","","the top edge of the anchor rectangle",437,N],[18,"Bottom","","the bottom edge of the anchor rectangle",437,N],[18,"Left","","the left edge of the anchor rectangle",437,N],[18,"Right","","the right edge of the anchor rectangle",437,N],[11,"empty","","Returns an empty set of flags.",437,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",437,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",437,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",437,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",437,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",437,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",437,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",437,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",437,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",437,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",437,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",437,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",437,[[["self"],["anchor"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",437,[[["self"],["anchor"]],["anchor"]]],[11,"bitor_assign","","Adds the set of flags.",437,[[["self"],["anchor"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",437,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor_assign","","Toggles the set of flags.",437,[[["self"],["anchor"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",437,[[["self"],["anchor"]],["anchor"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",437,[[["self"],["anchor"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",437,[[["self"],["anchor"]],["anchor"]]],[11,"sub_assign","","Disables all flags enabled in the set.",437,[[["self"],["anchor"]]]],[11,"not","","Returns the complement of this set of flags.",437,[[["self"]],["anchor"]]],[11,"extend","","",437,[[["self"],["t"]]]],[11,"from_iter","","",437,[[["t"]],["anchor"]]],[11,"from_raw","","",437,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",437,[[["self"]],["u32"]]],[11,"eq","","",438,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",438,[[["self"],["gravity"]],["bool"]]],[11,"clone","","",438,[[["self"]],["gravity"]]],[11,"partial_cmp","","",438,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",438,[[["self"],["gravity"]],["bool"]]],[11,"le","","",438,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",438,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",438,[[["self"],["gravity"]],["bool"]]],[11,"cmp","","",438,[[["self"],["gravity"]],["ordering"]]],[11,"hash","","",438,N],[11,"fmt","","",438,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",438,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",438,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",438,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",438,[[["self"],["formatter"]],["result"]]],[18,"None","","center over the anchor edge",438,N],[18,"Top","","position above the anchor edge",438,N],[18,"Bottom","","position below the anchor edge",438,N],[18,"Left","","position to the left of the anchor edge",438,N],[18,"Right","","position to the right of the anchor edge",438,N],[11,"empty","","Returns an empty set of flags.",438,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",438,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",438,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",438,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",438,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",438,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",438,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",438,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",438,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",438,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",438,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",438,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",438,[[["self"],["gravity"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",438,[[["self"],["gravity"]],["gravity"]]],[11,"bitor_assign","","Adds the set of flags.",438,[[["self"],["gravity"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",438,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor_assign","","Toggles the set of flags.",438,[[["self"],["gravity"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",438,[[["self"],["gravity"]],["gravity"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",438,[[["self"],["gravity"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",438,[[["self"],["gravity"]],["gravity"]]],[11,"sub_assign","","Disables all flags enabled in the set.",438,[[["self"],["gravity"]]]],[11,"not","","Returns the complement of this set of flags.",438,[[["self"]],["gravity"]]],[11,"extend","","",438,[[["self"],["t"]]]],[11,"from_iter","","",438,[[["t"]],["gravity"]]],[11,"from_raw","","",438,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",438,[[["self"]],["u32"]]],[11,"eq","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",439,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",439,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",439,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",439,N],[11,"fmt","","",439,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",439,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",439,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",439,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",439,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",439,N],[18,"SlideX","","move along the x axis until unconstrained",439,N],[18,"SlideY","","move along the y axis until unconstrained",439,N],[18,"FlipX","","invert the anchor and gravity on the x axis",439,N],[18,"FlipY","","invert the anchor and gravity on the y axis",439,N],[18,"ResizeX","","horizontally resize the surface",439,N],[18,"ResizeY","","vertically resize the surface",439,N],[11,"empty","","Returns an empty set of flags.",439,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",439,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",439,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",439,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",439,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",439,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",439,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",439,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",439,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",439,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",439,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",439,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",439,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",439,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",439,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",439,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",439,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",439,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",439,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",439,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",439,[[["self"]],["constraintadjustment"]]],[11,"extend","","",439,[[["self"],["t"]]]],[11,"from_iter","","",439,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",439,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",439,[[["self"]],["u32"]]],[11,"is_destructor","","",406,[[["self"]],["bool"]]],[11,"opcode","","",406,[[["self"]],["u16"]]],[11,"child","","",406,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",406,N],[11,"into_raw","","",406,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",406,N],[11,"as_raw_c_in","","",406,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",440,[[["self"]],["bool"]]],[11,"opcode","","",440,[[["self"]],["u16"]]],[11,"child","","",440,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",440,N],[11,"into_raw","","",440,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",440,N],[11,"as_raw_c_in","","",440,[[["self"],["f"]],["t"]]],[11,"c_interface","","",441,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",408,[[["self"]],["error"]]],[11,"fmt","","",408,[[["self"],["formatter"]],["result"]]],[11,"eq","","",408,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",408,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",408,[[["self"]],["u32"]]],[11,"is_destructor","","",409,[[["self"]],["bool"]]],[11,"opcode","","",409,[[["self"]],["u16"]]],[11,"child","","",409,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",409,N],[11,"into_raw","","",409,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",409,N],[11,"as_raw_c_in","","",409,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",410,[[["self"]],["bool"]]],[11,"opcode","","",410,[[["self"]],["u16"]]],[11,"child","","",410,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",410,N],[11,"into_raw","","",410,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",410,N],[11,"as_raw_c_in","","",410,[[["self"],["f"]],["t"]]],[11,"c_interface","","",442,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",412,[[["self"]],["resizeedge"]]],[11,"fmt","","",412,[[["self"],["formatter"]],["result"]]],[11,"eq","","",412,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",412,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",412,[[["self"]],["u32"]]],[11,"clone","","",413,[[["self"]],["state"]]],[11,"fmt","","",413,[[["self"],["formatter"]],["result"]]],[11,"eq","","",413,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",413,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",413,[[["self"]],["u32"]]],[11,"is_destructor","","",414,[[["self"]],["bool"]]],[11,"opcode","","",414,[[["self"]],["u16"]]],[11,"child","","",414,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",414,N],[11,"into_raw","","",414,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",414,N],[11,"as_raw_c_in","","",414,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",415,[[["self"]],["bool"]]],[11,"opcode","","",415,[[["self"]],["u16"]]],[11,"child","","",415,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",415,N],[11,"into_raw","","",415,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",415,N],[11,"as_raw_c_in","","",415,[[["self"],["f"]],["t"]]],[11,"c_interface","","",443,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",417,[[["self"]],["error"]]],[11,"fmt","","",417,[[["self"],["formatter"]],["result"]]],[11,"eq","","",417,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",417,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",417,[[["self"]],["u32"]]],[11,"is_destructor","","",418,[[["self"]],["bool"]]],[11,"opcode","","",418,[[["self"]],["u16"]]],[11,"child","","",418,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",418,N],[11,"into_raw","","",418,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",418,N],[11,"as_raw_c_in","","",418,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",419,[[["self"]],["bool"]]],[11,"opcode","","",419,[[["self"]],["u16"]]],[11,"child","","",419,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",419,N],[11,"into_raw","","",419,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",419,N],[11,"as_raw_c_in","","",419,[[["self"],["f"]],["t"]]],[11,"c_interface","","",444,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",421,[[["self"]],["error"]]],[11,"fmt","","",421,[[["self"],["formatter"]],["result"]]],[11,"eq","","",421,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",421,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",421,[[["self"]],["u32"]]],[11,"is_destructor","","",422,[[["self"]],["bool"]]],[11,"opcode","","",422,[[["self"]],["u16"]]],[11,"child","","",422,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",422,N],[11,"into_raw","","",422,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",422,N],[11,"as_raw_c_in","","",422,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",423,[[["self"]],["bool"]]],[11,"opcode","","",423,[[["self"]],["u16"]]],[11,"child","","",423,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",423,N],[11,"into_raw","","",423,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",423,N],[11,"as_raw_c_in","","",423,[[["self"],["f"]],["t"]]],[11,"c_interface","","",445,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",424,[[["self"]],["error"]]],[11,"fmt","","",424,[[["self"],["formatter"]],["result"]]],[11,"eq","","",424,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",424,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",424,[[["self"]],["u32"]]],[11,"eq","","",446,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",446,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",446,[[["self"]],["anchor"]]],[11,"partial_cmp","","",446,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",446,[[["self"],["anchor"]],["bool"]]],[11,"le","","",446,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",446,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",446,[[["self"],["anchor"]],["bool"]]],[11,"cmp","","",446,[[["self"],["anchor"]],["ordering"]]],[11,"hash","","",446,N],[11,"fmt","","",446,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",446,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",446,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",446,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",446,[[["self"],["formatter"]],["result"]]],[18,"None","","the center of the anchor rectangle",446,N],[18,"Top","","the top edge of the anchor rectangle",446,N],[18,"Bottom","","the bottom edge of the anchor rectangle",446,N],[18,"Left","","the left edge of the anchor rectangle",446,N],[18,"Right","","the right edge of the anchor rectangle",446,N],[11,"empty","","Returns an empty set of flags.",446,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",446,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",446,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",446,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",446,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",446,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",446,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",446,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",446,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",446,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",446,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",446,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",446,[[["self"],["anchor"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",446,[[["self"],["anchor"]],["anchor"]]],[11,"bitor_assign","","Adds the set of flags.",446,[[["self"],["anchor"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",446,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor_assign","","Toggles the set of flags.",446,[[["self"],["anchor"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",446,[[["self"],["anchor"]],["anchor"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",446,[[["self"],["anchor"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",446,[[["self"],["anchor"]],["anchor"]]],[11,"sub_assign","","Disables all flags enabled in the set.",446,[[["self"],["anchor"]]]],[11,"not","","Returns the complement of this set of flags.",446,[[["self"]],["anchor"]]],[11,"extend","","",446,[[["self"],["t"]]]],[11,"from_iter","","",446,[[["t"]],["anchor"]]],[11,"from_raw","","",446,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",446,[[["self"]],["u32"]]],[11,"eq","","",447,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",447,[[["self"],["gravity"]],["bool"]]],[11,"clone","","",447,[[["self"]],["gravity"]]],[11,"partial_cmp","","",447,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",447,[[["self"],["gravity"]],["bool"]]],[11,"le","","",447,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",447,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",447,[[["self"],["gravity"]],["bool"]]],[11,"cmp","","",447,[[["self"],["gravity"]],["ordering"]]],[11,"hash","","",447,N],[11,"fmt","","",447,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",447,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",447,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",447,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",447,[[["self"],["formatter"]],["result"]]],[18,"None","","center over the anchor edge",447,N],[18,"Top","","position above the anchor edge",447,N],[18,"Bottom","","position below the anchor edge",447,N],[18,"Left","","position to the left of the anchor edge",447,N],[18,"Right","","position to the right of the anchor edge",447,N],[11,"empty","","Returns an empty set of flags.",447,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",447,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",447,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",447,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",447,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",447,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",447,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",447,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",447,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",447,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",447,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",447,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",447,[[["self"],["gravity"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",447,[[["self"],["gravity"]],["gravity"]]],[11,"bitor_assign","","Adds the set of flags.",447,[[["self"],["gravity"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",447,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor_assign","","Toggles the set of flags.",447,[[["self"],["gravity"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",447,[[["self"],["gravity"]],["gravity"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",447,[[["self"],["gravity"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",447,[[["self"],["gravity"]],["gravity"]]],[11,"sub_assign","","Disables all flags enabled in the set.",447,[[["self"],["gravity"]]]],[11,"not","","Returns the complement of this set of flags.",447,[[["self"]],["gravity"]]],[11,"extend","","",447,[[["self"],["t"]]]],[11,"from_iter","","",447,[[["t"]],["gravity"]]],[11,"from_raw","","",447,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",447,[[["self"]],["u32"]]],[11,"eq","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",448,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",448,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",448,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",448,N],[11,"fmt","","",448,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",448,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",448,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",448,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",448,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",448,N],[18,"SlideX","","move along the x axis until unconstrained",448,N],[18,"SlideY","","move along the y axis until unconstrained",448,N],[18,"FlipX","","invert the anchor and gravity on the x axis",448,N],[18,"FlipY","","invert the anchor and gravity on the y axis",448,N],[18,"ResizeX","","horizontally resize the surface",448,N],[18,"ResizeY","","vertically resize the surface",448,N],[11,"empty","","Returns an empty set of flags.",448,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",448,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",448,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",448,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",448,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",448,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",448,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",448,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",448,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",448,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",448,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",448,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",448,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",448,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",448,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",448,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",448,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",448,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",448,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",448,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",448,[[["self"]],["constraintadjustment"]]],[11,"extend","","",448,[[["self"],["t"]]]],[11,"from_iter","","",448,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",448,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",448,[[["self"]],["u32"]]],[11,"is_destructor","","",425,[[["self"]],["bool"]]],[11,"opcode","","",425,[[["self"]],["u16"]]],[11,"child","","",425,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",425,N],[11,"into_raw","","",425,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",425,N],[11,"as_raw_c_in","","",425,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",449,[[["self"]],["bool"]]],[11,"opcode","","",449,[[["self"]],["u16"]]],[11,"child","","",449,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",449,N],[11,"into_raw","","",449,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",449,N],[11,"as_raw_c_in","","",449,[[["self"],["f"]],["t"]]],[11,"c_interface","","",450,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",426,[[["self"]],["error"]]],[11,"fmt","","",426,[[["self"],["formatter"]],["result"]]],[11,"eq","","",426,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",426,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",426,[[["self"]],["u32"]]],[11,"is_destructor","","",427,[[["self"]],["bool"]]],[11,"opcode","","",427,[[["self"]],["u16"]]],[11,"child","","",427,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",427,N],[11,"into_raw","","",427,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",427,N],[11,"as_raw_c_in","","",427,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",428,[[["self"]],["bool"]]],[11,"opcode","","",428,[[["self"]],["u16"]]],[11,"child","","",428,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",428,N],[11,"into_raw","","",428,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",428,N],[11,"as_raw_c_in","","",428,[[["self"],["f"]],["t"]]],[11,"c_interface","","",451,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",429,[[["self"]],["resizeedge"]]],[11,"fmt","","",429,[[["self"],["formatter"]],["result"]]],[11,"eq","","",429,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",429,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",429,[[["self"]],["u32"]]],[11,"clone","","",430,[[["self"]],["state"]]],[11,"fmt","","",430,[[["self"],["formatter"]],["result"]]],[11,"eq","","",430,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",430,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",430,[[["self"]],["u32"]]],[11,"is_destructor","","",431,[[["self"]],["bool"]]],[11,"opcode","","",431,[[["self"]],["u16"]]],[11,"child","","",431,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",431,N],[11,"into_raw","","",431,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",431,N],[11,"as_raw_c_in","","",431,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",432,[[["self"]],["bool"]]],[11,"opcode","","",432,[[["self"]],["u16"]]],[11,"child","","",432,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",432,N],[11,"into_raw","","",432,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",432,N],[11,"as_raw_c_in","","",432,[[["self"],["f"]],["t"]]],[11,"c_interface","","",452,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",433,[[["self"]],["error"]]],[11,"fmt","","",433,[[["self"],["formatter"]],["result"]]],[11,"eq","","",433,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",433,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",433,[[["self"]],["u32"]]],[11,"is_destructor","","",434,[[["self"]],["bool"]]],[11,"opcode","","",434,[[["self"]],["u16"]]],[11,"child","","",434,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",434,N],[11,"into_raw","","",434,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",434,N],[11,"as_raw_c_in","","",434,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",435,[[["self"]],["bool"]]],[11,"opcode","","",435,[[["self"]],["u16"]]],[11,"child","","",435,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",435,N],[11,"into_raw","","",435,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",435,N],[11,"as_raw_c_in","","",435,[[["self"],["f"]],["t"]]],[11,"c_interface","","",453,N],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",N,N],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",N,N],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",454,N],[13,"GrabKeyboard","","grab the keyboard to a surface",454,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",454,N],[12,"surface","","",454,N],[12,"seat","","",454,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard grab manager",455,N],[10,"grab_keyboard","","grab the keyboard to a surface",455,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",456,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the grabbed keyboard object",457,N],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",458,N],[13,"GrabKeyboard","","grab the keyboard to a surface",458,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",458,N],[12,"surface","","",458,N],[12,"seat","","",458,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",459,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",454,[[["self"]],["bool"]]],[11,"opcode","","",454,[[["self"]],["u16"]]],[11,"child","","",454,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",454,N],[11,"into_raw","","",454,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",454,N],[11,"as_raw_c_in","","",454,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",460,[[["self"]],["bool"]]],[11,"opcode","","",460,[[["self"]],["u16"]]],[11,"child","","",460,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",460,N],[11,"into_raw","","",460,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",460,N],[11,"as_raw_c_in","","",460,[[["self"],["f"]],["t"]]],[11,"c_interface","","",461,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",456,[[["self"]],["bool"]]],[11,"opcode","","",456,[[["self"]],["u16"]]],[11,"child","","",456,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",456,N],[11,"into_raw","","",456,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",456,N],[11,"as_raw_c_in","","",456,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",462,[[["self"]],["bool"]]],[11,"opcode","","",462,[[["self"]],["u16"]]],[11,"child","","",462,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",462,N],[11,"into_raw","","",462,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",462,N],[11,"as_raw_c_in","","",462,[[["self"],["f"]],["t"]]],[11,"c_interface","","",463,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",458,[[["self"]],["bool"]]],[11,"opcode","","",458,[[["self"]],["u16"]]],[11,"child","","",458,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",458,N],[11,"into_raw","","",458,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",458,N],[11,"as_raw_c_in","","",458,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",464,[[["self"]],["bool"]]],[11,"opcode","","",464,[[["self"]],["u16"]]],[11,"child","","",464,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",464,N],[11,"into_raw","","",464,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",464,N],[11,"as_raw_c_in","","",464,[[["self"],["f"]],["t"]]],[11,"c_interface","","",465,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",459,[[["self"]],["bool"]]],[11,"opcode","","",459,[[["self"]],["u16"]]],[11,"child","","",459,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",459,N],[11,"into_raw","","",459,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",459,N],[11,"as_raw_c_in","","",459,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",466,[[["self"]],["bool"]]],[11,"opcode","","",466,[[["self"]],["u16"]]],[11,"child","","",466,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",466,N],[11,"into_raw","","",466,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",466,N],[11,"as_raw_c_in","","",466,[[["self"],["f"]],["t"]]],[11,"c_interface","","",467,N],[0,"wlr","wayland_protocols","wlr-procotols extension family",N,N],[0,"unstable","wayland_protocols::wlr","Unstable protocols from wlr-protocols",N,N],[0,"export_dmabuf","wayland_protocols::wlr::unstable","A protocol for low overhead screen content capturing",N,N],[0,"v1","wayland_protocols::wlr::unstable::export_dmabuf","",N,N],[0,"client","wayland_protocols::wlr::unstable::export_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",468,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request","",468,N],[12,"overlay_cursor","","",468,N],[12,"output","","",468,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","destroy the manager",468,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"capture_output","","capture a frame from an output",469,[[["self"],["i32"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",469,N],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",470,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",471,N],[13,"Permanent","","fatal error, source will not produce frames",471,N],[13,"Resizing","","temporary error, source will produce more frames",471,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",472,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",473,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",473,N],[12,"height","","",473,N],[12,"offset_x","","",473,N],[12,"offset_y","","",473,N],[12,"buffer_flags","","",473,N],[12,"flags","","",473,N],[12,"format","","",473,N],[12,"mod_high","","",473,N],[12,"mod_low","","",473,N],[12,"num_objects","","",473,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","an object description",473,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",473,N],[12,"fd","","",473,N],[12,"size","","",473,N],[12,"offset","","",473,N],[12,"stride","","",473,N],[12,"plane_index","","",473,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",473,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",473,N],[12,"tv_sec_lo","","",473,N],[12,"tv_nsec","","",473,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",473,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",473,N],[8,"RequestsTrait","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",N,N],[10,"destroy","","delete this object, used or not",474,N],[0,"server","wayland_protocols::wlr::unstable::export_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",475,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1::Request","",475,N],[12,"overlay_cursor","","",475,N],[12,"output","","",475,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","destroy the manager",475,N],[4,"Event","","",N,N],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",476,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",477,N],[13,"Permanent","","fatal error, source will not produce frames",477,N],[13,"Resizing","","temporary error, source will produce more frames",477,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",478,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",479,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",479,N],[12,"height","","",479,N],[12,"offset_x","","",479,N],[12,"offset_y","","",479,N],[12,"buffer_flags","","",479,N],[12,"flags","","",479,N],[12,"format","","",479,N],[12,"mod_high","","",479,N],[12,"mod_low","","",479,N],[12,"num_objects","","",479,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","an object description",479,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",479,N],[12,"fd","","",479,N],[12,"size","","",479,N],[12,"offset","","",479,N],[12,"stride","","",479,N],[12,"plane_index","","",479,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",479,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",479,N],[12,"tv_sec_lo","","",479,N],[12,"tv_nsec","","",479,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",479,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",479,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::export_dmabuf::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::c_interfaces","",N,N],[7,"zwlr_export_dmabuf_manager_v1_requests","","",N,N],[7,"zwlr_export_dmabuf_manager_v1_interface","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_requests","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_events","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",468,[[["self"]],["bool"]]],[11,"opcode","","",468,[[["self"]],["u16"]]],[11,"child","","",468,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",468,N],[11,"into_raw","","",468,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",468,N],[11,"as_raw_c_in","","",468,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",480,[[["self"]],["bool"]]],[11,"opcode","","",480,[[["self"]],["u16"]]],[11,"child","","",480,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",480,N],[11,"into_raw","","",480,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",480,N],[11,"as_raw_c_in","","",480,[[["self"],["f"]],["t"]]],[11,"c_interface","","",481,N],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",470,[[["self"]],["flags"]]],[11,"fmt","","",470,[[["self"],["formatter"]],["result"]]],[11,"eq","","",470,[[["self"],["flags"]],["bool"]]],[11,"from_raw","","",470,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",470,[[["self"]],["u32"]]],[11,"clone","","",471,[[["self"]],["cancelreason"]]],[11,"fmt","","",471,[[["self"],["formatter"]],["result"]]],[11,"eq","","",471,[[["self"],["cancelreason"]],["bool"]]],[11,"from_raw","","",471,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",471,[[["self"]],["u32"]]],[11,"is_destructor","","",472,[[["self"]],["bool"]]],[11,"opcode","","",472,[[["self"]],["u16"]]],[11,"child","","",472,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",472,N],[11,"into_raw","","",472,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",472,N],[11,"as_raw_c_in","","",472,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",473,[[["self"]],["bool"]]],[11,"opcode","","",473,[[["self"]],["u16"]]],[11,"child","","",473,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",473,N],[11,"into_raw","","",473,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",473,N],[11,"as_raw_c_in","","",473,[[["self"],["f"]],["t"]]],[11,"c_interface","","",482,N],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",475,[[["self"]],["bool"]]],[11,"opcode","","",475,[[["self"]],["u16"]]],[11,"child","","",475,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",475,N],[11,"into_raw","","",475,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",475,N],[11,"as_raw_c_in","","",475,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",483,[[["self"]],["bool"]]],[11,"opcode","","",483,[[["self"]],["u16"]]],[11,"child","","",483,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",483,N],[11,"into_raw","","",483,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",483,N],[11,"as_raw_c_in","","",483,[[["self"],["f"]],["t"]]],[11,"c_interface","","",484,N],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",476,[[["self"]],["flags"]]],[11,"fmt","","",476,[[["self"],["formatter"]],["result"]]],[11,"eq","","",476,[[["self"],["flags"]],["bool"]]],[11,"from_raw","","",476,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",476,[[["self"]],["u32"]]],[11,"clone","","",477,[[["self"]],["cancelreason"]]],[11,"fmt","","",477,[[["self"],["formatter"]],["result"]]],[11,"eq","","",477,[[["self"],["cancelreason"]],["bool"]]],[11,"from_raw","","",477,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",477,[[["self"]],["u32"]]],[11,"is_destructor","","",478,[[["self"]],["bool"]]],[11,"opcode","","",478,[[["self"]],["u16"]]],[11,"child","","",478,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",478,N],[11,"into_raw","","",478,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",478,N],[11,"as_raw_c_in","","",478,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",479,[[["self"]],["bool"]]],[11,"opcode","","",479,[[["self"]],["u16"]]],[11,"child","","",479,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",479,N],[11,"into_raw","","",479,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",479,N],[11,"as_raw_c_in","","",479,[[["self"],["f"]],["t"]]],[11,"c_interface","","",485,N],[0,"gamma_control","wayland_protocols::wlr::unstable","Manage gamma tables of outputs.",N,N],[0,"v1","wayland_protocols::wlr::unstable::gamma_control","",N,N],[0,"client","wayland_protocols::wlr::unstable::gamma_control::v1","Client-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",486,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request","",486,N],[12,"output","","",486,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","destroy the manager",486,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_gamma_control","","get a gamma control for an output",487,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",487,N],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",488,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",489,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Request","",489,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","destroy this control",489,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",490,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Event","",490,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","object no longer valid",490,N],[8,"RequestsTrait","","",N,N],[10,"set_gamma","","set the gamma table",491,N],[10,"destroy","","destroy this control",491,N],[0,"server","wayland_protocols::wlr::unstable::gamma_control::v1","Server-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",492,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1::Request","",492,N],[12,"output","","",492,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","destroy the manager",492,N],[4,"Event","","",N,N],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",493,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",494,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Request","",494,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","destroy this control",494,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",495,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Event","",495,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","object no longer valid",495,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::gamma_control::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::gamma_control::v1::c_interfaces","",N,N],[7,"zwlr_gamma_control_manager_v1_requests","","",N,N],[7,"zwlr_gamma_control_manager_v1_interface","","",N,N],[7,"zwlr_gamma_control_v1_requests","","",N,N],[7,"zwlr_gamma_control_v1_events","","",N,N],[7,"zwlr_gamma_control_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",486,[[["self"]],["bool"]]],[11,"opcode","","",486,[[["self"]],["u16"]]],[11,"child","","",486,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",486,N],[11,"into_raw","","",486,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",486,N],[11,"as_raw_c_in","","",486,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",496,[[["self"]],["bool"]]],[11,"opcode","","",496,[[["self"]],["u16"]]],[11,"child","","",496,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",496,N],[11,"into_raw","","",496,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",496,N],[11,"as_raw_c_in","","",496,[[["self"],["f"]],["t"]]],[11,"c_interface","","",497,N],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",488,[[["self"]],["error"]]],[11,"fmt","","",488,[[["self"],["formatter"]],["result"]]],[11,"eq","","",488,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",488,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",488,[[["self"]],["u32"]]],[11,"is_destructor","","",489,[[["self"]],["bool"]]],[11,"opcode","","",489,[[["self"]],["u16"]]],[11,"child","","",489,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",489,N],[11,"into_raw","","",489,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",489,N],[11,"as_raw_c_in","","",489,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",490,[[["self"]],["bool"]]],[11,"opcode","","",490,[[["self"]],["u16"]]],[11,"child","","",490,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",490,N],[11,"into_raw","","",490,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",490,N],[11,"as_raw_c_in","","",490,[[["self"],["f"]],["t"]]],[11,"c_interface","","",498,N],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",492,[[["self"]],["bool"]]],[11,"opcode","","",492,[[["self"]],["u16"]]],[11,"child","","",492,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",492,N],[11,"into_raw","","",492,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",492,N],[11,"as_raw_c_in","","",492,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",499,[[["self"]],["bool"]]],[11,"opcode","","",499,[[["self"]],["u16"]]],[11,"child","","",499,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",499,N],[11,"into_raw","","",499,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",499,N],[11,"as_raw_c_in","","",499,[[["self"],["f"]],["t"]]],[11,"c_interface","","",500,N],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",493,[[["self"]],["error"]]],[11,"fmt","","",493,[[["self"],["formatter"]],["result"]]],[11,"eq","","",493,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",493,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",493,[[["self"]],["u32"]]],[11,"is_destructor","","",494,[[["self"]],["bool"]]],[11,"opcode","","",494,[[["self"]],["u16"]]],[11,"child","","",494,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",494,N],[11,"into_raw","","",494,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",494,N],[11,"as_raw_c_in","","",494,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",495,[[["self"]],["bool"]]],[11,"opcode","","",495,[[["self"]],["u16"]]],[11,"child","","",495,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",495,N],[11,"into_raw","","",495,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",495,N],[11,"as_raw_c_in","","",495,[[["self"],["f"]],["t"]]],[11,"c_interface","","",501,N],[0,"input_inhibitor","wayland_protocols::wlr::unstable","Inhibits input events to other clients",N,N],[0,"v1","wayland_protocols::wlr::unstable::input_inhibitor","",N,N],[0,"client","wayland_protocols::wlr::unstable::input_inhibitor::v1","Client-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",502,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",503,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1::Request","",503,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_inhibitor","","inhibit input to other clients",504,[[["self"],["f"]],["result",["proxy"]]]],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",505,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the input inhibitor object",506,N],[0,"server","wayland_protocols::wlr::unstable::input_inhibitor::v1","Server-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",507,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",508,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1::Request","",508,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",509,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::input_inhibitor::v1","C interfaces for this protocol",N,N],[7,"zwlr_input_inhibit_manager_v1_requests","wayland_protocols::wlr::unstable::input_inhibitor::v1::c_interfaces","",N,N],[7,"zwlr_input_inhibit_manager_v1_interface","","",N,N],[7,"zwlr_input_inhibitor_v1_requests","","",N,N],[7,"zwlr_input_inhibitor_v1_interface","","",N,N],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",502,[[["self"]],["error"]]],[11,"fmt","","",502,[[["self"],["formatter"]],["result"]]],[11,"eq","","",502,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",502,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",502,[[["self"]],["u32"]]],[11,"is_destructor","","",503,[[["self"]],["bool"]]],[11,"opcode","","",503,[[["self"]],["u16"]]],[11,"child","","",503,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",503,N],[11,"into_raw","","",503,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",503,N],[11,"as_raw_c_in","","",503,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",510,[[["self"]],["bool"]]],[11,"opcode","","",510,[[["self"]],["u16"]]],[11,"child","","",510,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",510,N],[11,"into_raw","","",510,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",510,N],[11,"as_raw_c_in","","",510,[[["self"],["f"]],["t"]]],[11,"c_interface","","",511,N],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",505,[[["self"]],["bool"]]],[11,"opcode","","",505,[[["self"]],["u16"]]],[11,"child","","",505,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",505,N],[11,"into_raw","","",505,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",505,N],[11,"as_raw_c_in","","",505,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",512,[[["self"]],["bool"]]],[11,"opcode","","",512,[[["self"]],["u16"]]],[11,"child","","",512,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",512,N],[11,"into_raw","","",512,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",512,N],[11,"as_raw_c_in","","",512,[[["self"],["f"]],["t"]]],[11,"c_interface","","",513,N],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",507,[[["self"]],["error"]]],[11,"fmt","","",507,[[["self"],["formatter"]],["result"]]],[11,"eq","","",507,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",507,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",507,[[["self"]],["u32"]]],[11,"is_destructor","","",508,[[["self"]],["bool"]]],[11,"opcode","","",508,[[["self"]],["u16"]]],[11,"child","","",508,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",508,N],[11,"into_raw","","",508,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",508,N],[11,"as_raw_c_in","","",508,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",514,[[["self"]],["bool"]]],[11,"opcode","","",514,[[["self"]],["u16"]]],[11,"child","","",514,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",514,N],[11,"into_raw","","",514,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",514,N],[11,"as_raw_c_in","","",514,[[["self"],["f"]],["t"]]],[11,"c_interface","","",515,N],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",509,[[["self"]],["bool"]]],[11,"opcode","","",509,[[["self"]],["u16"]]],[11,"child","","",509,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",509,N],[11,"into_raw","","",509,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",509,N],[11,"as_raw_c_in","","",509,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",516,[[["self"]],["bool"]]],[11,"opcode","","",516,[[["self"]],["u16"]]],[11,"child","","",516,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",516,N],[11,"into_raw","","",516,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",516,N],[11,"as_raw_c_in","","",516,[[["self"],["f"]],["t"]]],[11,"c_interface","","",517,N],[0,"layer_shell","wayland_protocols::wlr::unstable","Layered shell protocol",N,N],[0,"v1","wayland_protocols::wlr::unstable::layer_shell","",N,N],[0,"client","wayland_protocols::wlr::unstable::layer_shell::v1","Client-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",518,N],[13,"InvalidLayer","","layer value is invalid",518,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",518,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",519,N],[13,"Bottom","","",519,N],[13,"Top","","",519,N],[13,"Overlay","","",519,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",520,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1::Request","",520,N],[12,"surface","","",520,N],[12,"output","","",520,N],[12,"layer","","",520,N],[12,"namespace","","",520,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_layer_surface","","create a layer_surface from a surface",521,[[["self"],["proxy"],["option",["proxy"]],["layer"],["string"],["f"]],["result",["proxy"]]]],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",522,N],[13,"InvalidSize","","size is invalid",522,N],[13,"InvalidAnchor","","anchor bitfield is invalid",522,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",523,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[12,"height","","",523,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the anchor point of the surface",523,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",523,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","sets a margin from the anchor point",523,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[12,"right","","",523,N],[12,"bottom","","",523,N],[12,"left","","",523,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","requests keyboard events",523,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",523,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","ack a configure event",523,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",523,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","destroy the layer_surface",523,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",524,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Event","",524,N],[12,"width","","",524,N],[12,"height","","",524,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","surface should be closed",524,N],[8,"RequestsTrait","","",N,N],[10,"set_size","","sets the size of the surface",525,N],[10,"set_anchor","","configures the anchor point of the surface",525,N],[10,"set_exclusive_zone","","configures the exclusive geometry of this surface",525,N],[10,"set_margin","","sets a margin from the anchor point",525,N],[10,"set_keyboard_interactivity","","requests keyboard events",525,N],[10,"get_popup","","assign this layer_surface as an xdg_popup parent",525,N],[10,"ack_configure","","ack a configure event",525,N],[10,"destroy","","destroy the layer_surface",525,N],[0,"server","wayland_protocols::wlr::unstable::layer_shell::v1","Server-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",526,N],[13,"InvalidLayer","","layer value is invalid",526,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",526,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",527,N],[13,"Bottom","","",527,N],[13,"Top","","",527,N],[13,"Overlay","","",527,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",528,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1::Request","",528,N],[12,"surface","","",528,N],[12,"output","","",528,N],[12,"layer","","",528,N],[12,"namespace","","",528,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",529,N],[13,"InvalidSize","","size is invalid",529,N],[13,"InvalidAnchor","","anchor bitfield is invalid",529,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",530,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[12,"height","","",530,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the anchor point of the surface",530,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",530,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","sets a margin from the anchor point",530,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[12,"right","","",530,N],[12,"bottom","","",530,N],[12,"left","","",530,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","requests keyboard events",530,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",530,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","ack a configure event",530,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",530,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","destroy the layer_surface",530,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",531,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Event","",531,N],[12,"width","","",531,N],[12,"height","","",531,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","surface should be closed",531,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::layer_shell::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::layer_shell::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwlr_layer_shell_v1_requests","","",N,N],[7,"zwlr_layer_shell_v1_interface","","",N,N],[7,"zwlr_layer_surface_v1_requests","","",N,N],[7,"zwlr_layer_surface_v1_events","","",N,N],[7,"zwlr_layer_surface_v1_interface","","",N,N],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",518,[[["self"]],["error"]]],[11,"fmt","","",518,[[["self"],["formatter"]],["result"]]],[11,"eq","","",518,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",518,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",518,[[["self"]],["u32"]]],[11,"clone","","",519,[[["self"]],["layer"]]],[11,"fmt","","",519,[[["self"],["formatter"]],["result"]]],[11,"eq","","",519,[[["self"],["layer"]],["bool"]]],[11,"from_raw","","",519,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",519,[[["self"]],["u32"]]],[11,"is_destructor","","",520,[[["self"]],["bool"]]],[11,"opcode","","",520,[[["self"]],["u16"]]],[11,"child","","",520,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",520,N],[11,"into_raw","","",520,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",520,N],[11,"as_raw_c_in","","",520,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",532,[[["self"]],["bool"]]],[11,"opcode","","",532,[[["self"]],["u16"]]],[11,"child","","",532,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",532,N],[11,"into_raw","","",532,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",532,N],[11,"as_raw_c_in","","",532,[[["self"],["f"]],["t"]]],[11,"c_interface","","",533,N],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",522,[[["self"]],["error"]]],[11,"fmt","","",522,[[["self"],["formatter"]],["result"]]],[11,"eq","","",522,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",522,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",522,[[["self"]],["u32"]]],[11,"eq","","",534,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",534,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",534,[[["self"]],["anchor"]]],[11,"partial_cmp","","",534,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",534,[[["self"],["anchor"]],["bool"]]],[11,"le","","",534,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",534,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",534,[[["self"],["anchor"]],["bool"]]],[11,"cmp","","",534,[[["self"],["anchor"]],["ordering"]]],[11,"hash","","",534,N],[11,"fmt","","",534,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",534,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",534,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",534,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",534,[[["self"],["formatter"]],["result"]]],[18,"Top","","the top edge of the anchor rectangle",534,N],[18,"Bottom","","the bottom edge of the anchor rectangle",534,N],[18,"Left","","the left edge of the anchor rectangle",534,N],[18,"Right","","the right edge of the anchor rectangle",534,N],[11,"empty","","Returns an empty set of flags.",534,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",534,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",534,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",534,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",534,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",534,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",534,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",534,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",534,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",534,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",534,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",534,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",534,[[["self"],["anchor"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",534,[[["self"],["anchor"]],["anchor"]]],[11,"bitor_assign","","Adds the set of flags.",534,[[["self"],["anchor"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",534,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor_assign","","Toggles the set of flags.",534,[[["self"],["anchor"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",534,[[["self"],["anchor"]],["anchor"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",534,[[["self"],["anchor"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",534,[[["self"],["anchor"]],["anchor"]]],[11,"sub_assign","","Disables all flags enabled in the set.",534,[[["self"],["anchor"]]]],[11,"not","","Returns the complement of this set of flags.",534,[[["self"]],["anchor"]]],[11,"extend","","",534,[[["self"],["t"]]]],[11,"from_iter","","",534,[[["t"]],["anchor"]]],[11,"from_raw","","",534,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",534,[[["self"]],["u32"]]],[11,"is_destructor","","",523,[[["self"]],["bool"]]],[11,"opcode","","",523,[[["self"]],["u16"]]],[11,"child","","",523,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",523,N],[11,"into_raw","","",523,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",523,N],[11,"as_raw_c_in","","",523,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",524,[[["self"]],["bool"]]],[11,"opcode","","",524,[[["self"]],["u16"]]],[11,"child","","",524,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",524,N],[11,"into_raw","","",524,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",524,N],[11,"as_raw_c_in","","",524,[[["self"],["f"]],["t"]]],[11,"c_interface","","",535,N],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",526,[[["self"]],["error"]]],[11,"fmt","","",526,[[["self"],["formatter"]],["result"]]],[11,"eq","","",526,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",526,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",526,[[["self"]],["u32"]]],[11,"clone","","",527,[[["self"]],["layer"]]],[11,"fmt","","",527,[[["self"],["formatter"]],["result"]]],[11,"eq","","",527,[[["self"],["layer"]],["bool"]]],[11,"from_raw","","",527,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",527,[[["self"]],["u32"]]],[11,"is_destructor","","",528,[[["self"]],["bool"]]],[11,"opcode","","",528,[[["self"]],["u16"]]],[11,"child","","",528,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",528,N],[11,"into_raw","","",528,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",528,N],[11,"as_raw_c_in","","",528,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",536,[[["self"]],["bool"]]],[11,"opcode","","",536,[[["self"]],["u16"]]],[11,"child","","",536,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",536,N],[11,"into_raw","","",536,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",536,N],[11,"as_raw_c_in","","",536,[[["self"],["f"]],["t"]]],[11,"c_interface","","",537,N],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",529,[[["self"]],["error"]]],[11,"fmt","","",529,[[["self"],["formatter"]],["result"]]],[11,"eq","","",529,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",529,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",529,[[["self"]],["u32"]]],[11,"eq","","",538,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",538,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",538,[[["self"]],["anchor"]]],[11,"partial_cmp","","",538,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",538,[[["self"],["anchor"]],["bool"]]],[11,"le","","",538,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",538,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",538,[[["self"],["anchor"]],["bool"]]],[11,"cmp","","",538,[[["self"],["anchor"]],["ordering"]]],[11,"hash","","",538,N],[11,"fmt","","",538,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",538,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",538,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",538,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",538,[[["self"],["formatter"]],["result"]]],[18,"Top","","the top edge of the anchor rectangle",538,N],[18,"Bottom","","the bottom edge of the anchor rectangle",538,N],[18,"Left","","the left edge of the anchor rectangle",538,N],[18,"Right","","the right edge of the anchor rectangle",538,N],[11,"empty","","Returns an empty set of flags.",538,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",538,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",538,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",538,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",538,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",538,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",538,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",538,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",538,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",538,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",538,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",538,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",538,[[["self"],["anchor"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",538,[[["self"],["anchor"]],["anchor"]]],[11,"bitor_assign","","Adds the set of flags.",538,[[["self"],["anchor"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",538,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor_assign","","Toggles the set of flags.",538,[[["self"],["anchor"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",538,[[["self"],["anchor"]],["anchor"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",538,[[["self"],["anchor"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",538,[[["self"],["anchor"]],["anchor"]]],[11,"sub_assign","","Disables all flags enabled in the set.",538,[[["self"],["anchor"]]]],[11,"not","","Returns the complement of this set of flags.",538,[[["self"]],["anchor"]]],[11,"extend","","",538,[[["self"],["t"]]]],[11,"from_iter","","",538,[[["t"]],["anchor"]]],[11,"from_raw","","",538,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",538,[[["self"]],["u32"]]],[11,"is_destructor","","",530,[[["self"]],["bool"]]],[11,"opcode","","",530,[[["self"]],["u16"]]],[11,"child","","",530,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",530,N],[11,"into_raw","","",530,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",530,N],[11,"as_raw_c_in","","",530,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",531,[[["self"]],["bool"]]],[11,"opcode","","",531,[[["self"]],["u16"]]],[11,"child","","",531,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",531,N],[11,"into_raw","","",531,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",531,N],[11,"as_raw_c_in","","",531,[[["self"],["f"]],["t"]]],[11,"c_interface","","",539,N],[0,"screencopy","wayland_protocols::wlr::unstable","Screen content capturing on client buffers",N,N],[0,"v1","wayland_protocols::wlr::unstable::screencopy","",N,N],[0,"client","wayland_protocols::wlr::unstable::screencopy::v1","Client-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",540,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",540,N],[12,"overlay_cursor","","",540,N],[12,"output","","",540,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","capture an output's region",540,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",540,N],[12,"overlay_cursor","","",540,N],[12,"output","","",540,N],[12,"x","","",540,N],[12,"y","","",540,N],[12,"width","","",540,N],[12,"height","","",540,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","destroy the manager",540,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"capture_output","","capture an output",541,[[["self"],["i32"],["proxy"],["f"]],["result",["proxy"]]]],[10,"capture_output_region","","capture an output's region",541,[[["self"],["i32"],["proxy"],["i32"],["i32"],["i32"],["i32"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",541,N],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",542,N],[13,"InvalidBuffer","","buffer attributes are invalid",542,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",543,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Request","",543,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","delete this object, used or not",543,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",544,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",544,N],[12,"width","","",544,N],[12,"height","","",544,N],[12,"stride","","",544,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame flags",544,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",544,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","indicates frame is available for reading",544,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",544,N],[12,"tv_sec_lo","","",544,N],[12,"tv_nsec","","",544,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame copy failed",544,N],[8,"RequestsTrait","","",N,N],[10,"copy","","copy the frame",545,N],[10,"destroy","","delete this object, used or not",545,N],[0,"server","wayland_protocols::wlr::unstable::screencopy::v1","Server-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",546,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",546,N],[12,"overlay_cursor","","",546,N],[12,"output","","",546,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","capture an output's region",546,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",546,N],[12,"overlay_cursor","","",546,N],[12,"output","","",546,N],[12,"x","","",546,N],[12,"y","","",546,N],[12,"width","","",546,N],[12,"height","","",546,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","destroy the manager",546,N],[4,"Event","","",N,N],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",547,N],[13,"InvalidBuffer","","buffer attributes are invalid",547,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",548,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Request","",548,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","delete this object, used or not",548,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",549,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",549,N],[12,"width","","",549,N],[12,"height","","",549,N],[12,"stride","","",549,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame flags",549,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",549,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","indicates frame is available for reading",549,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",549,N],[12,"tv_sec_lo","","",549,N],[12,"tv_nsec","","",549,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame copy failed",549,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::screencopy::v1","C interfaces for this protocol",N,N],[7,"wl_buffer_interface","wayland_protocols::wlr::unstable::screencopy::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwlr_screencopy_manager_v1_requests","","",N,N],[7,"zwlr_screencopy_manager_v1_interface","","",N,N],[7,"zwlr_screencopy_frame_v1_requests","","",N,N],[7,"zwlr_screencopy_frame_v1_events","","",N,N],[7,"zwlr_screencopy_frame_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",540,[[["self"]],["bool"]]],[11,"opcode","","",540,[[["self"]],["u16"]]],[11,"child","","",540,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",540,N],[11,"into_raw","","",540,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",540,N],[11,"as_raw_c_in","","",540,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",550,[[["self"]],["bool"]]],[11,"opcode","","",550,[[["self"]],["u16"]]],[11,"child","","",550,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",550,N],[11,"into_raw","","",550,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",550,N],[11,"as_raw_c_in","","",550,[[["self"],["f"]],["t"]]],[11,"c_interface","","",551,N],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",542,[[["self"]],["error"]]],[11,"fmt","","",542,[[["self"],["formatter"]],["result"]]],[11,"eq","","",542,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",542,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",542,[[["self"]],["u32"]]],[11,"eq","","",552,[[["self"],["flags"]],["bool"]]],[11,"ne","","",552,[[["self"],["flags"]],["bool"]]],[11,"clone","","",552,[[["self"]],["flags"]]],[11,"partial_cmp","","",552,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",552,[[["self"],["flags"]],["bool"]]],[11,"le","","",552,[[["self"],["flags"]],["bool"]]],[11,"gt","","",552,[[["self"],["flags"]],["bool"]]],[11,"ge","","",552,[[["self"],["flags"]],["bool"]]],[11,"cmp","","",552,[[["self"],["flags"]],["ordering"]]],[11,"hash","","",552,N],[11,"fmt","","",552,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",552,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",552,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",552,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",552,[[["self"],["formatter"]],["result"]]],[18,"YInvert","","contents are y-inverted",552,N],[11,"empty","","Returns an empty set of flags.",552,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",552,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",552,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",552,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",552,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",552,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",552,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",552,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",552,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",552,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",552,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",552,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",552,[[["self"],["flags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",552,[[["self"],["flags"]],["flags"]]],[11,"bitor_assign","","Adds the set of flags.",552,[[["self"],["flags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",552,[[["self"],["flags"]],["flags"]]],[11,"bitxor_assign","","Toggles the set of flags.",552,[[["self"],["flags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",552,[[["self"],["flags"]],["flags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",552,[[["self"],["flags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",552,[[["self"],["flags"]],["flags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",552,[[["self"],["flags"]]]],[11,"not","","Returns the complement of this set of flags.",552,[[["self"]],["flags"]]],[11,"extend","","",552,[[["self"],["t"]]]],[11,"from_iter","","",552,[[["t"]],["flags"]]],[11,"from_raw","","",552,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",552,[[["self"]],["u32"]]],[11,"is_destructor","","",543,[[["self"]],["bool"]]],[11,"opcode","","",543,[[["self"]],["u16"]]],[11,"child","","",543,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",543,N],[11,"into_raw","","",543,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",543,N],[11,"as_raw_c_in","","",543,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",544,[[["self"]],["bool"]]],[11,"opcode","","",544,[[["self"]],["u16"]]],[11,"child","","",544,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",544,N],[11,"into_raw","","",544,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",544,N],[11,"as_raw_c_in","","",544,[[["self"],["f"]],["t"]]],[11,"c_interface","","",553,N],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",546,[[["self"]],["bool"]]],[11,"opcode","","",546,[[["self"]],["u16"]]],[11,"child","","",546,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",546,N],[11,"into_raw","","",546,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",546,N],[11,"as_raw_c_in","","",546,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",554,[[["self"]],["bool"]]],[11,"opcode","","",554,[[["self"]],["u16"]]],[11,"child","","",554,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",554,N],[11,"into_raw","","",554,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",554,N],[11,"as_raw_c_in","","",554,[[["self"],["f"]],["t"]]],[11,"c_interface","","",555,N],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",547,[[["self"]],["error"]]],[11,"fmt","","",547,[[["self"],["formatter"]],["result"]]],[11,"eq","","",547,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",547,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",547,[[["self"]],["u32"]]],[11,"eq","","",556,[[["self"],["flags"]],["bool"]]],[11,"ne","","",556,[[["self"],["flags"]],["bool"]]],[11,"clone","","",556,[[["self"]],["flags"]]],[11,"partial_cmp","","",556,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",556,[[["self"],["flags"]],["bool"]]],[11,"le","","",556,[[["self"],["flags"]],["bool"]]],[11,"gt","","",556,[[["self"],["flags"]],["bool"]]],[11,"ge","","",556,[[["self"],["flags"]],["bool"]]],[11,"cmp","","",556,[[["self"],["flags"]],["ordering"]]],[11,"hash","","",556,N],[11,"fmt","","",556,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",556,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",556,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",556,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",556,[[["self"],["formatter"]],["result"]]],[18,"YInvert","","contents are y-inverted",556,N],[11,"empty","","Returns an empty set of flags.",556,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",556,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",556,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",556,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",556,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",556,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",556,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",556,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",556,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",556,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",556,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",556,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",556,[[["self"],["flags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",556,[[["self"],["flags"]],["flags"]]],[11,"bitor_assign","","Adds the set of flags.",556,[[["self"],["flags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",556,[[["self"],["flags"]],["flags"]]],[11,"bitxor_assign","","Toggles the set of flags.",556,[[["self"],["flags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",556,[[["self"],["flags"]],["flags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",556,[[["self"],["flags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",556,[[["self"],["flags"]],["flags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",556,[[["self"],["flags"]]]],[11,"not","","Returns the complement of this set of flags.",556,[[["self"]],["flags"]]],[11,"extend","","",556,[[["self"],["t"]]]],[11,"from_iter","","",556,[[["t"]],["flags"]]],[11,"from_raw","","",556,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",556,[[["self"]],["u32"]]],[11,"is_destructor","","",548,[[["self"]],["bool"]]],[11,"opcode","","",548,[[["self"]],["u16"]]],[11,"child","","",548,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",548,N],[11,"into_raw","","",548,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",548,N],[11,"as_raw_c_in","","",548,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",549,[[["self"]],["bool"]]],[11,"opcode","","",549,[[["self"]],["u16"]]],[11,"child","","",549,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",549,N],[11,"into_raw","","",549,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",549,N],[11,"as_raw_c_in","","",549,[[["self"],["f"]],["t"]]],[11,"c_interface","","",557,N],[0,"presentation_time","wayland_protocols","Presentation time protocol",N,N],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",558,N],[13,"InvalidFlag","","invalid flag",558,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",559,N],[13,"Feedback","","request presentation feedback information",559,N],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",559,N],[12,"callback","","",559,N],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",560,N],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",560,N],[8,"RequestsTrait","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[10,"destroy","","unbind from the presentation interface",561,N],[10,"feedback","","request presentation feedback information",561,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",562,N],[13,"HwClock","","hardware provided the presentation timestamp",562,N],[13,"HwCompletion","","hardware signalled the start of the presentation",562,N],[13,"ZeroCopy","","presentation was done zero-copy",562,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",563,N],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",563,N],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",563,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",563,N],[12,"tv_sec_lo","","",563,N],[12,"tv_nsec","","",563,N],[12,"refresh","","",563,N],[12,"seq_hi","","",563,N],[12,"seq_lo","","",563,N],[12,"flags","","",563,N],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",563,N],[8,"RequestsTrait","","",N,N],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",564,N],[13,"InvalidFlag","","invalid flag",564,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",565,N],[13,"Feedback","","request presentation feedback information",565,N],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",565,N],[12,"callback","","",565,N],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",566,N],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",566,N],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",567,N],[13,"HwClock","","hardware provided the presentation timestamp",567,N],[13,"HwCompletion","","hardware signalled the start of the presentation",567,N],[13,"ZeroCopy","","presentation was done zero-copy",567,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",568,N],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",568,N],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",568,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",568,N],[12,"tv_sec_lo","","",568,N],[12,"tv_nsec","","",568,N],[12,"refresh","","",568,N],[12,"seq_hi","","",568,N],[12,"seq_lo","","",568,N],[12,"flags","","",568,N],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",568,N],[0,"c_interfaces","wayland_protocols::presentation_time","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::presentation_time::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wp_presentation_requests","","",N,N],[7,"wp_presentation_events","","",N,N],[7,"wp_presentation_interface","","",N,N],[7,"wp_presentation_feedback_events","","",N,N],[7,"wp_presentation_feedback_interface","","",N,N],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",N,N],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",569,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",569,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",569,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",569,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",569,N],[13,"InvalidPositioner","","the client provided an invalid positioner",569,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",570,N],[13,"CreatePositioner","","create a positioner object",570,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",570,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",570,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",570,N],[12,"surface","","",570,N],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",570,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",570,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",571,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",571,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[10,"destroy","","destroy xdg_wm_base",572,N],[10,"create_positioner","","create a positioner object",572,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",572,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",572,N],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",573,N],[4,"Anchor","","",N,N],[13,"None","","",574,N],[13,"Top","","",574,N],[13,"Bottom","","",574,N],[13,"Left","","",574,N],[13,"Right","","",574,N],[13,"TopLeft","","",574,N],[13,"BottomLeft","","",574,N],[13,"TopRight","","",574,N],[13,"BottomRight","","",574,N],[4,"Gravity","","",N,N],[13,"None","","",575,N],[13,"Top","","",575,N],[13,"Bottom","","",575,N],[13,"Left","","",575,N],[13,"Right","","",575,N],[13,"TopLeft","","",575,N],[13,"BottomLeft","","",575,N],[13,"TopRight","","",575,N],[13,"BottomRight","","",575,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",576,N],[13,"SetSize","","set the size of the to-be positioned rectangle",576,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[12,"height","","",576,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",576,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[12,"y","","",576,N],[12,"width","","",576,N],[12,"height","","",576,N],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",576,N],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",576,N],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",576,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",576,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",576,N],[12,"y","","",576,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",577,N],[10,"set_size","","set the size of the to-be positioned rectangle",577,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",577,N],[10,"set_anchor","","set anchor rectangle anchor",577,N],[10,"set_gravity","","set child surface gravity",577,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",577,N],[10,"set_offset","","set surface position offset",577,N],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",578,N],[13,"AlreadyConstructed","","",578,N],[13,"UnconfiguredBuffer","","",578,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",579,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",579,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",579,N],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",579,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",579,N],[12,"parent","","",579,N],[12,"positioner","","",579,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",579,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",579,N],[12,"y","","",579,N],[12,"width","","",579,N],[12,"height","","",579,N],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",579,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",579,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",580,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",580,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[10,"destroy","","destroy the xdg_surface",581,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",581,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",581,[[["self"],["option",["proxy"]],["proxy"],["f"]],["result",["proxy"]]]],[10,"set_window_geometry","","set the new window geometry",581,N],[10,"ack_configure","","ack a configure event",581,N],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",582,N],[13,"Top","","",582,N],[13,"Bottom","","",582,N],[13,"Left","","",582,N],[13,"TopLeft","","",582,N],[13,"BottomLeft","","",582,N],[13,"Right","","",582,N],[13,"TopRight","","",582,N],[13,"BottomRight","","",582,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",583,N],[13,"Fullscreen","","the surface is fullscreen",583,N],[13,"Resizing","","the surface is being resized",583,N],[13,"Activated","","the surface is now activated",583,N],[13,"TiledLeft","","the surface is tiled",583,N],[13,"TiledRight","","the surface is tiled",583,N],[13,"TiledTop","","the surface is tiled",583,N],[13,"TiledBottom","","the surface is tiled",583,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",584,N],[13,"SetParent","","set the parent of this surface",584,N],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",584,N],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",584,N],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",584,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[12,"serial","","",584,N],[12,"x","","",584,N],[12,"y","","",584,N],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",584,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[12,"serial","","",584,N],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",584,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[12,"serial","","",584,N],[12,"edges","","",584,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",584,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[12,"height","","",584,N],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",584,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[12,"height","","",584,N],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",584,N],[13,"UnsetMaximized","","unmaximize the window",584,N],[13,"SetFullscreen","","set the window as fullscreen on an output",584,N],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",584,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",584,N],[13,"SetMinimized","","set the window as minimized",584,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",585,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",585,N],[12,"height","","",585,N],[12,"states","","",585,N],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",585,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",586,N],[10,"set_parent","","set the parent of this surface",586,N],[10,"set_title","","set surface title",586,N],[10,"set_app_id","","set application ID",586,N],[10,"show_window_menu","","show the window menu",586,N],[10,"_move","","start an interactive move",586,N],[10,"resize","","start an interactive resize",586,N],[10,"set_max_size","","set the maximum size",586,N],[10,"set_min_size","","set the minimum size",586,N],[10,"set_maximized","","maximize the window",586,N],[10,"unset_maximized","","unmaximize the window",586,N],[10,"set_fullscreen","","set the window as fullscreen on an output",586,N],[10,"unset_fullscreen","","unset the window as fullscreen",586,N],[10,"set_minimized","","set the window as minimized",586,N],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",587,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",588,N],[13,"Grab","","make the popup take an explicit grab",588,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",588,N],[12,"serial","","",588,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",589,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",589,N],[12,"y","","",589,N],[12,"width","","",589,N],[12,"height","","",589,N],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",589,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",590,N],[10,"grab","","make the popup take an explicit grab",590,N],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",591,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",591,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",591,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",591,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",591,N],[13,"InvalidPositioner","","the client provided an invalid positioner",591,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",592,N],[13,"CreatePositioner","","create a positioner object",592,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",592,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",592,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",592,N],[12,"surface","","",592,N],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",592,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",592,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",593,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",593,N],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",594,N],[4,"Anchor","","",N,N],[13,"None","","",595,N],[13,"Top","","",595,N],[13,"Bottom","","",595,N],[13,"Left","","",595,N],[13,"Right","","",595,N],[13,"TopLeft","","",595,N],[13,"BottomLeft","","",595,N],[13,"TopRight","","",595,N],[13,"BottomRight","","",595,N],[4,"Gravity","","",N,N],[13,"None","","",596,N],[13,"Top","","",596,N],[13,"Bottom","","",596,N],[13,"Left","","",596,N],[13,"Right","","",596,N],[13,"TopLeft","","",596,N],[13,"BottomLeft","","",596,N],[13,"TopRight","","",596,N],[13,"BottomRight","","",596,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",597,N],[13,"SetSize","","set the size of the to-be positioned rectangle",597,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[12,"height","","",597,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",597,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[12,"y","","",597,N],[12,"width","","",597,N],[12,"height","","",597,N],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",597,N],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",597,N],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",597,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",597,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",597,N],[12,"y","","",597,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",N,N],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",598,N],[13,"AlreadyConstructed","","",598,N],[13,"UnconfiguredBuffer","","",598,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",599,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",599,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",599,N],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",599,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",599,N],[12,"parent","","",599,N],[12,"positioner","","",599,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",599,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",599,N],[12,"y","","",599,N],[12,"width","","",599,N],[12,"height","","",599,N],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",599,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",599,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",600,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",600,N],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",601,N],[13,"Top","","",601,N],[13,"Bottom","","",601,N],[13,"Left","","",601,N],[13,"TopLeft","","",601,N],[13,"BottomLeft","","",601,N],[13,"Right","","",601,N],[13,"TopRight","","",601,N],[13,"BottomRight","","",601,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",602,N],[13,"Fullscreen","","the surface is fullscreen",602,N],[13,"Resizing","","the surface is being resized",602,N],[13,"Activated","","the surface is now activated",602,N],[13,"TiledLeft","","the surface is tiled",602,N],[13,"TiledRight","","the surface is tiled",602,N],[13,"TiledTop","","the surface is tiled",602,N],[13,"TiledBottom","","the surface is tiled",602,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",603,N],[13,"SetParent","","set the parent of this surface",603,N],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",603,N],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",603,N],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",603,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[12,"serial","","",603,N],[12,"x","","",603,N],[12,"y","","",603,N],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",603,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[12,"serial","","",603,N],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",603,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[12,"serial","","",603,N],[12,"edges","","",603,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",603,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[12,"height","","",603,N],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",603,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[12,"height","","",603,N],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",603,N],[13,"UnsetMaximized","","unmaximize the window",603,N],[13,"SetFullscreen","","set the window as fullscreen on an output",603,N],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",603,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",603,N],[13,"SetMinimized","","set the window as minimized",603,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",604,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",604,N],[12,"height","","",604,N],[12,"states","","",604,N],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",604,N],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",605,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",606,N],[13,"Grab","","make the popup take an explicit grab",606,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",606,N],[12,"serial","","",606,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",607,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",607,N],[12,"y","","",607,N],[12,"width","","",607,N],[12,"height","","",607,N],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",607,N],[0,"c_interfaces","wayland_protocols::xdg_shell","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::xdg_shell::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_output_interface","","",N,N],[7,"xdg_wm_base_requests","","",N,N],[7,"xdg_wm_base_events","","",N,N],[7,"xdg_wm_base_interface","","",N,N],[7,"xdg_positioner_requests","","",N,N],[7,"xdg_positioner_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_toplevel_requests","","",N,N],[7,"xdg_toplevel_events","","",N,N],[7,"xdg_toplevel_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[0,"viewporter","wayland_protocols","Viewporter protocol",N,N],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",608,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",609,N],[13,"GetViewport","","extend surface interface for crop and scale",609,N],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",609,N],[12,"surface","","",609,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the cropping and scaling interface",610,N],[10,"get_viewport","","extend surface interface for crop and scale",610,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",611,N],[13,"BadSize","","destination size is not integer",611,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",611,N],[13,"NoSurface","","the wl_surface was destroyed",611,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",612,N],[13,"SetSource","","set the source rectangle for cropping",612,N],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",612,N],[12,"y","","",612,N],[12,"width","","",612,N],[12,"height","","",612,N],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",612,N],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",612,N],[12,"height","","",612,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove scaling and cropping from the surface",613,N],[10,"set_source","","set the source rectangle for cropping",613,N],[10,"set_destination","","set the surface size for scaling",613,N],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",614,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",615,N],[13,"GetViewport","","extend surface interface for crop and scale",615,N],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",615,N],[12,"surface","","",615,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",616,N],[13,"BadSize","","destination size is not integer",616,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",616,N],[13,"NoSurface","","the wl_surface was destroyed",616,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",617,N],[13,"SetSource","","set the source rectangle for cropping",617,N],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",617,N],[12,"y","","",617,N],[12,"width","","",617,N],[12,"height","","",617,N],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",617,N],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",617,N],[12,"height","","",617,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",N,N],[0,"c_interfaces","wayland_protocols::viewporter","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::viewporter::c_interfaces","",N,N],[7,"wp_viewporter_requests","","",N,N],[7,"wp_viewporter_interface","","",N,N],[7,"wp_viewport_requests","","",N,N],[7,"wp_viewport_interface","","",N,N],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",319,[[["t"]],["t"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",322,[[["t"]],["t"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",323,[[["t"]],["t"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",325,[[["t"]],["t"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"from","","",324,[[["t"]],["t"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",327,[[["t"]],["t"]]],[11,"into","","",327,[[["self"]],["u"]]],[11,"try_from","","",327,[[["u"]],["result"]]],[11,"borrow","","",327,[[["self"]],["t"]]],[11,"try_into","","",327,[[["self"]],["result"]]],[11,"borrow_mut","","",327,[[["self"]],["t"]]],[11,"get_type_id","","",327,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"from","","",326,[[["t"]],["t"]]],[11,"into","","",326,[[["self"]],["u"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",328,[[["t"]],["t"]]],[11,"into","","",328,[[["self"]],["u"]]],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"try_into","","",328,[[["self"]],["result"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"get_type_id","","",328,[[["self"]],["typeid"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",329,[[["t"]],["t"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",347,[[["t"]],["t"]]],[11,"into","","",347,[[["self"]],["u"]]],[11,"try_from","","",347,[[["u"]],["result"]]],[11,"borrow","","",347,[[["self"]],["t"]]],[11,"try_into","","",347,[[["self"]],["result"]]],[11,"borrow_mut","","",347,[[["self"]],["t"]]],[11,"get_type_id","","",347,[[["self"]],["typeid"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"into","","",330,[[["self"]],["u"]]],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"from","","",346,[[["t"]],["t"]]],[11,"into","","",346,[[["self"]],["u"]]],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"try_into","","",346,[[["self"]],["result"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"get_type_id","","",346,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",349,[[["t"]],["t"]]],[11,"into","","",349,[[["self"]],["u"]]],[11,"try_from","","",349,[[["u"]],["result"]]],[11,"borrow","","",349,[[["self"]],["t"]]],[11,"try_into","","",349,[[["self"]],["result"]]],[11,"borrow_mut","","",349,[[["self"]],["t"]]],[11,"get_type_id","","",349,[[["self"]],["typeid"]]],[11,"from","","",332,[[["t"]],["t"]]],[11,"into","","",332,[[["self"]],["u"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"try_into","","",332,[[["self"]],["result"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"get_type_id","","",332,[[["self"]],["typeid"]]],[11,"from","","",348,[[["t"]],["t"]]],[11,"into","","",348,[[["self"]],["u"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"try_into","","",348,[[["self"]],["result"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"get_type_id","","",348,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",350,[[["t"]],["t"]]],[11,"into","","",350,[[["self"]],["u"]]],[11,"try_from","","",350,[[["u"]],["result"]]],[11,"borrow","","",350,[[["self"]],["t"]]],[11,"try_into","","",350,[[["self"]],["result"]]],[11,"borrow_mut","","",350,[[["self"]],["t"]]],[11,"get_type_id","","",350,[[["self"]],["typeid"]]],[11,"from","","",334,[[["t"]],["t"]]],[11,"into","","",334,[[["self"]],["u"]]],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"try_into","","",334,[[["self"]],["result"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"get_type_id","","",334,[[["self"]],["typeid"]]],[11,"from","","",335,[[["t"]],["t"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",351,[[["t"]],["t"]]],[11,"into","","",351,[[["self"]],["u"]]],[11,"try_from","","",351,[[["u"]],["result"]]],[11,"borrow","","",351,[[["self"]],["t"]]],[11,"try_into","","",351,[[["self"]],["result"]]],[11,"borrow_mut","","",351,[[["self"]],["t"]]],[11,"get_type_id","","",351,[[["self"]],["typeid"]]],[11,"from","","",337,[[["t"]],["t"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"into","","",338,[[["self"]],["u"]]],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",353,[[["t"]],["t"]]],[11,"into","","",353,[[["self"]],["u"]]],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"try_into","","",353,[[["self"]],["result"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"get_type_id","","",353,[[["self"]],["typeid"]]],[11,"from","","",340,[[["t"]],["t"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"from","","",352,[[["t"]],["t"]]],[11,"into","","",352,[[["self"]],["u"]]],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"try_into","","",352,[[["self"]],["result"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"get_type_id","","",352,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",355,[[["t"]],["t"]]],[11,"into","","",355,[[["self"]],["u"]]],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"try_into","","",355,[[["self"]],["result"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"get_type_id","","",355,[[["self"]],["typeid"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"into","","",341,[[["self"]],["u"]]],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"from","","",354,[[["t"]],["t"]]],[11,"into","","",354,[[["self"]],["u"]]],[11,"try_from","","",354,[[["u"]],["result"]]],[11,"borrow","","",354,[[["self"]],["t"]]],[11,"try_into","","",354,[[["self"]],["result"]]],[11,"borrow_mut","","",354,[[["self"]],["t"]]],[11,"get_type_id","","",354,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",356,[[["t"]],["t"]]],[11,"into","","",356,[[["self"]],["u"]]],[11,"try_from","","",356,[[["u"]],["result"]]],[11,"borrow","","",356,[[["self"]],["t"]]],[11,"try_into","","",356,[[["self"]],["result"]]],[11,"borrow_mut","","",356,[[["self"]],["t"]]],[11,"get_type_id","","",356,[[["self"]],["typeid"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",357,[[["t"]],["t"]]],[11,"into","","",357,[[["self"]],["u"]]],[11,"try_from","","",357,[[["u"]],["result"]]],[11,"borrow","","",357,[[["self"]],["t"]]],[11,"try_into","","",357,[[["self"]],["result"]]],[11,"borrow_mut","","",357,[[["self"]],["t"]]],[11,"get_type_id","","",357,[[["self"]],["typeid"]]],[11,"from","","",344,[[["t"]],["t"]]],[11,"into","","",344,[[["self"]],["u"]]],[11,"try_from","","",344,[[["u"]],["result"]]],[11,"borrow","","",344,[[["self"]],["t"]]],[11,"try_into","","",344,[[["self"]],["result"]]],[11,"borrow_mut","","",344,[[["self"]],["t"]]],[11,"get_type_id","","",344,[[["self"]],["typeid"]]],[11,"from","","",345,[[["t"]],["t"]]],[11,"into","","",345,[[["self"]],["u"]]],[11,"try_from","","",345,[[["u"]],["result"]]],[11,"borrow","","",345,[[["self"]],["t"]]],[11,"try_into","","",345,[[["self"]],["result"]]],[11,"borrow_mut","","",345,[[["self"]],["t"]]],[11,"get_type_id","","",345,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",367,[[["t"]],["t"]]],[11,"into","","",367,[[["self"]],["u"]]],[11,"try_from","","",367,[[["u"]],["result"]]],[11,"borrow","","",367,[[["self"]],["t"]]],[11,"try_into","","",367,[[["self"]],["result"]]],[11,"borrow_mut","","",367,[[["self"]],["t"]]],[11,"get_type_id","","",367,[[["self"]],["typeid"]]],[11,"from","","",358,[[["t"]],["t"]]],[11,"into","","",358,[[["self"]],["u"]]],[11,"try_from","","",358,[[["u"]],["result"]]],[11,"borrow","","",358,[[["self"]],["t"]]],[11,"try_into","","",358,[[["self"]],["result"]]],[11,"borrow_mut","","",358,[[["self"]],["t"]]],[11,"get_type_id","","",358,[[["self"]],["typeid"]]],[11,"from","","",366,[[["t"]],["t"]]],[11,"into","","",366,[[["self"]],["u"]]],[11,"try_from","","",366,[[["u"]],["result"]]],[11,"borrow","","",366,[[["self"]],["t"]]],[11,"try_into","","",366,[[["self"]],["result"]]],[11,"borrow_mut","","",366,[[["self"]],["t"]]],[11,"get_type_id","","",366,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",368,[[["t"]],["t"]]],[11,"into","","",368,[[["self"]],["u"]]],[11,"try_from","","",368,[[["u"]],["result"]]],[11,"borrow","","",368,[[["self"]],["t"]]],[11,"try_into","","",368,[[["self"]],["result"]]],[11,"borrow_mut","","",368,[[["self"]],["t"]]],[11,"get_type_id","","",368,[[["self"]],["typeid"]]],[11,"from","","",360,[[["t"]],["t"]]],[11,"into","","",360,[[["self"]],["u"]]],[11,"try_from","","",360,[[["u"]],["result"]]],[11,"borrow","","",360,[[["self"]],["t"]]],[11,"try_into","","",360,[[["self"]],["result"]]],[11,"borrow_mut","","",360,[[["self"]],["t"]]],[11,"get_type_id","","",360,[[["self"]],["typeid"]]],[11,"from","","",361,[[["t"]],["t"]]],[11,"into","","",361,[[["self"]],["u"]]],[11,"try_from","","",361,[[["u"]],["result"]]],[11,"borrow","","",361,[[["self"]],["t"]]],[11,"try_into","","",361,[[["self"]],["result"]]],[11,"borrow_mut","","",361,[[["self"]],["t"]]],[11,"get_type_id","","",361,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",370,[[["t"]],["t"]]],[11,"into","","",370,[[["self"]],["u"]]],[11,"try_from","","",370,[[["u"]],["result"]]],[11,"borrow","","",370,[[["self"]],["t"]]],[11,"try_into","","",370,[[["self"]],["result"]]],[11,"borrow_mut","","",370,[[["self"]],["t"]]],[11,"get_type_id","","",370,[[["self"]],["typeid"]]],[11,"from","","",363,[[["t"]],["t"]]],[11,"into","","",363,[[["self"]],["u"]]],[11,"try_from","","",363,[[["u"]],["result"]]],[11,"borrow","","",363,[[["self"]],["t"]]],[11,"try_into","","",363,[[["self"]],["result"]]],[11,"borrow_mut","","",363,[[["self"]],["t"]]],[11,"get_type_id","","",363,[[["self"]],["typeid"]]],[11,"from","","",369,[[["t"]],["t"]]],[11,"into","","",369,[[["self"]],["u"]]],[11,"try_from","","",369,[[["u"]],["result"]]],[11,"borrow","","",369,[[["self"]],["t"]]],[11,"try_into","","",369,[[["self"]],["result"]]],[11,"borrow_mut","","",369,[[["self"]],["t"]]],[11,"get_type_id","","",369,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",371,[[["t"]],["t"]]],[11,"into","","",371,[[["self"]],["u"]]],[11,"try_from","","",371,[[["u"]],["result"]]],[11,"borrow","","",371,[[["self"]],["t"]]],[11,"try_into","","",371,[[["self"]],["result"]]],[11,"borrow_mut","","",371,[[["self"]],["t"]]],[11,"get_type_id","","",371,[[["self"]],["typeid"]]],[11,"from","","",364,[[["t"]],["t"]]],[11,"into","","",364,[[["self"]],["u"]]],[11,"try_from","","",364,[[["u"]],["result"]]],[11,"borrow","","",364,[[["self"]],["t"]]],[11,"try_into","","",364,[[["self"]],["result"]]],[11,"borrow_mut","","",364,[[["self"]],["t"]]],[11,"get_type_id","","",364,[[["self"]],["typeid"]]],[11,"from","","",365,[[["t"]],["t"]]],[11,"into","","",365,[[["self"]],["u"]]],[11,"try_from","","",365,[[["u"]],["result"]]],[11,"borrow","","",365,[[["self"]],["t"]]],[11,"try_into","","",365,[[["self"]],["result"]]],[11,"borrow_mut","","",365,[[["self"]],["t"]]],[11,"get_type_id","","",365,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",395,[[["t"]],["t"]]],[11,"into","","",395,[[["self"]],["u"]]],[11,"try_from","","",395,[[["u"]],["result"]]],[11,"borrow","","",395,[[["self"]],["t"]]],[11,"try_into","","",395,[[["self"]],["result"]]],[11,"borrow_mut","","",395,[[["self"]],["t"]]],[11,"get_type_id","","",395,[[["self"]],["typeid"]]],[11,"to_owned","","",372,[[["self"]],["t"]]],[11,"clone_into","","",372,N],[11,"from","","",372,[[["t"]],["t"]]],[11,"into","","",372,[[["self"]],["u"]]],[11,"try_from","","",372,[[["u"]],["result"]]],[11,"borrow","","",372,[[["self"]],["t"]]],[11,"try_into","","",372,[[["self"]],["result"]]],[11,"borrow_mut","","",372,[[["self"]],["t"]]],[11,"get_type_id","","",372,[[["self"]],["typeid"]]],[11,"to_owned","","",373,[[["self"]],["t"]]],[11,"clone_into","","",373,N],[11,"from","","",373,[[["t"]],["t"]]],[11,"into","","",373,[[["self"]],["u"]]],[11,"try_from","","",373,[[["u"]],["result"]]],[11,"borrow","","",373,[[["self"]],["t"]]],[11,"try_into","","",373,[[["self"]],["result"]]],[11,"borrow_mut","","",373,[[["self"]],["t"]]],[11,"get_type_id","","",373,[[["self"]],["typeid"]]],[11,"from","","",374,[[["t"]],["t"]]],[11,"into","","",374,[[["self"]],["u"]]],[11,"try_from","","",374,[[["u"]],["result"]]],[11,"borrow","","",374,[[["self"]],["t"]]],[11,"try_into","","",374,[[["self"]],["result"]]],[11,"borrow_mut","","",374,[[["self"]],["t"]]],[11,"get_type_id","","",374,[[["self"]],["typeid"]]],[11,"from","","",375,[[["t"]],["t"]]],[11,"into","","",375,[[["self"]],["u"]]],[11,"try_from","","",375,[[["u"]],["result"]]],[11,"borrow","","",375,[[["self"]],["t"]]],[11,"try_into","","",375,[[["self"]],["result"]]],[11,"borrow_mut","","",375,[[["self"]],["t"]]],[11,"get_type_id","","",375,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",396,[[["t"]],["t"]]],[11,"into","","",396,[[["self"]],["u"]]],[11,"try_from","","",396,[[["u"]],["result"]]],[11,"borrow","","",396,[[["self"]],["t"]]],[11,"try_into","","",396,[[["self"]],["result"]]],[11,"borrow_mut","","",396,[[["self"]],["t"]]],[11,"get_type_id","","",396,[[["self"]],["typeid"]]],[11,"to_owned","","",377,[[["self"]],["t"]]],[11,"clone_into","","",377,N],[11,"from","","",377,[[["t"]],["t"]]],[11,"into","","",377,[[["self"]],["u"]]],[11,"try_from","","",377,[[["u"]],["result"]]],[11,"borrow","","",377,[[["self"]],["t"]]],[11,"try_into","","",377,[[["self"]],["result"]]],[11,"borrow_mut","","",377,[[["self"]],["t"]]],[11,"get_type_id","","",377,[[["self"]],["typeid"]]],[11,"to_owned","","",378,[[["self"]],["t"]]],[11,"clone_into","","",378,N],[11,"from","","",378,[[["t"]],["t"]]],[11,"into","","",378,[[["self"]],["u"]]],[11,"try_from","","",378,[[["u"]],["result"]]],[11,"borrow","","",378,[[["self"]],["t"]]],[11,"try_into","","",378,[[["self"]],["result"]]],[11,"borrow_mut","","",378,[[["self"]],["t"]]],[11,"get_type_id","","",378,[[["self"]],["typeid"]]],[11,"from","","",379,[[["t"]],["t"]]],[11,"into","","",379,[[["self"]],["u"]]],[11,"try_from","","",379,[[["u"]],["result"]]],[11,"borrow","","",379,[[["self"]],["t"]]],[11,"try_into","","",379,[[["self"]],["result"]]],[11,"borrow_mut","","",379,[[["self"]],["t"]]],[11,"get_type_id","","",379,[[["self"]],["typeid"]]],[11,"from","","",380,[[["t"]],["t"]]],[11,"into","","",380,[[["self"]],["u"]]],[11,"try_from","","",380,[[["u"]],["result"]]],[11,"borrow","","",380,[[["self"]],["t"]]],[11,"try_into","","",380,[[["self"]],["result"]]],[11,"borrow_mut","","",380,[[["self"]],["t"]]],[11,"get_type_id","","",380,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",397,[[["t"]],["t"]]],[11,"into","","",397,[[["self"]],["u"]]],[11,"try_from","","",397,[[["u"]],["result"]]],[11,"borrow","","",397,[[["self"]],["t"]]],[11,"try_into","","",397,[[["self"]],["result"]]],[11,"borrow_mut","","",397,[[["self"]],["t"]]],[11,"get_type_id","","",397,[[["self"]],["typeid"]]],[11,"from","","",382,[[["t"]],["t"]]],[11,"into","","",382,[[["self"]],["u"]]],[11,"try_from","","",382,[[["u"]],["result"]]],[11,"borrow","","",382,[[["self"]],["t"]]],[11,"try_into","","",382,[[["self"]],["result"]]],[11,"borrow_mut","","",382,[[["self"]],["t"]]],[11,"get_type_id","","",382,[[["self"]],["typeid"]]],[11,"from","","",383,[[["t"]],["t"]]],[11,"into","","",383,[[["self"]],["u"]]],[11,"try_from","","",383,[[["u"]],["result"]]],[11,"borrow","","",383,[[["self"]],["t"]]],[11,"try_into","","",383,[[["self"]],["result"]]],[11,"borrow_mut","","",383,[[["self"]],["t"]]],[11,"get_type_id","","",383,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",398,[[["t"]],["t"]]],[11,"into","","",398,[[["self"]],["u"]]],[11,"try_from","","",398,[[["u"]],["result"]]],[11,"borrow","","",398,[[["self"]],["t"]]],[11,"try_into","","",398,[[["self"]],["result"]]],[11,"borrow_mut","","",398,[[["self"]],["t"]]],[11,"get_type_id","","",398,[[["self"]],["typeid"]]],[11,"to_owned","","",385,[[["self"]],["t"]]],[11,"clone_into","","",385,N],[11,"from","","",385,[[["t"]],["t"]]],[11,"into","","",385,[[["self"]],["u"]]],[11,"try_from","","",385,[[["u"]],["result"]]],[11,"borrow","","",385,[[["self"]],["t"]]],[11,"try_into","","",385,[[["self"]],["result"]]],[11,"borrow_mut","","",385,[[["self"]],["t"]]],[11,"get_type_id","","",385,[[["self"]],["typeid"]]],[11,"to_owned","","",386,[[["self"]],["t"]]],[11,"clone_into","","",386,N],[11,"from","","",386,[[["t"]],["t"]]],[11,"into","","",386,[[["self"]],["u"]]],[11,"try_from","","",386,[[["u"]],["result"]]],[11,"borrow","","",386,[[["self"]],["t"]]],[11,"try_into","","",386,[[["self"]],["result"]]],[11,"borrow_mut","","",386,[[["self"]],["t"]]],[11,"get_type_id","","",386,[[["self"]],["typeid"]]],[11,"from","","",387,[[["t"]],["t"]]],[11,"into","","",387,[[["self"]],["u"]]],[11,"try_from","","",387,[[["u"]],["result"]]],[11,"borrow","","",387,[[["self"]],["t"]]],[11,"try_into","","",387,[[["self"]],["result"]]],[11,"borrow_mut","","",387,[[["self"]],["t"]]],[11,"get_type_id","","",387,[[["self"]],["typeid"]]],[11,"from","","",388,[[["t"]],["t"]]],[11,"into","","",388,[[["self"]],["u"]]],[11,"try_from","","",388,[[["u"]],["result"]]],[11,"borrow","","",388,[[["self"]],["t"]]],[11,"try_into","","",388,[[["self"]],["result"]]],[11,"borrow_mut","","",388,[[["self"]],["t"]]],[11,"get_type_id","","",388,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",399,[[["t"]],["t"]]],[11,"into","","",399,[[["self"]],["u"]]],[11,"try_from","","",399,[[["u"]],["result"]]],[11,"borrow","","",399,[[["self"]],["t"]]],[11,"try_into","","",399,[[["self"]],["result"]]],[11,"borrow_mut","","",399,[[["self"]],["t"]]],[11,"get_type_id","","",399,[[["self"]],["typeid"]]],[11,"to_owned","","",389,[[["self"]],["t"]]],[11,"clone_into","","",389,N],[11,"from","","",389,[[["t"]],["t"]]],[11,"into","","",389,[[["self"]],["u"]]],[11,"try_from","","",389,[[["u"]],["result"]]],[11,"borrow","","",389,[[["self"]],["t"]]],[11,"try_into","","",389,[[["self"]],["result"]]],[11,"borrow_mut","","",389,[[["self"]],["t"]]],[11,"get_type_id","","",389,[[["self"]],["typeid"]]],[11,"to_owned","","",390,[[["self"]],["t"]]],[11,"clone_into","","",390,N],[11,"from","","",390,[[["t"]],["t"]]],[11,"into","","",390,[[["self"]],["u"]]],[11,"try_from","","",390,[[["u"]],["result"]]],[11,"borrow","","",390,[[["self"]],["t"]]],[11,"try_into","","",390,[[["self"]],["result"]]],[11,"borrow_mut","","",390,[[["self"]],["t"]]],[11,"get_type_id","","",390,[[["self"]],["typeid"]]],[11,"from","","",391,[[["t"]],["t"]]],[11,"into","","",391,[[["self"]],["u"]]],[11,"try_from","","",391,[[["u"]],["result"]]],[11,"borrow","","",391,[[["self"]],["t"]]],[11,"try_into","","",391,[[["self"]],["result"]]],[11,"borrow_mut","","",391,[[["self"]],["t"]]],[11,"get_type_id","","",391,[[["self"]],["typeid"]]],[11,"from","","",392,[[["t"]],["t"]]],[11,"into","","",392,[[["self"]],["u"]]],[11,"try_from","","",392,[[["u"]],["result"]]],[11,"borrow","","",392,[[["self"]],["t"]]],[11,"try_into","","",392,[[["self"]],["result"]]],[11,"borrow_mut","","",392,[[["self"]],["t"]]],[11,"get_type_id","","",392,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",400,[[["t"]],["t"]]],[11,"into","","",400,[[["self"]],["u"]]],[11,"try_from","","",400,[[["u"]],["result"]]],[11,"borrow","","",400,[[["self"]],["t"]]],[11,"try_into","","",400,[[["self"]],["result"]]],[11,"borrow_mut","","",400,[[["self"]],["t"]]],[11,"get_type_id","","",400,[[["self"]],["typeid"]]],[11,"from","","",393,[[["t"]],["t"]]],[11,"into","","",393,[[["self"]],["u"]]],[11,"try_from","","",393,[[["u"]],["result"]]],[11,"borrow","","",393,[[["self"]],["t"]]],[11,"try_into","","",393,[[["self"]],["result"]]],[11,"borrow_mut","","",393,[[["self"]],["t"]]],[11,"get_type_id","","",393,[[["self"]],["typeid"]]],[11,"from","","",394,[[["t"]],["t"]]],[11,"into","","",394,[[["self"]],["u"]]],[11,"try_from","","",394,[[["u"]],["result"]]],[11,"borrow","","",394,[[["self"]],["t"]]],[11,"try_into","","",394,[[["self"]],["result"]]],[11,"borrow_mut","","",394,[[["self"]],["t"]]],[11,"get_type_id","","",394,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",436,[[["t"]],["t"]]],[11,"into","","",436,[[["self"]],["u"]]],[11,"try_from","","",436,[[["u"]],["result"]]],[11,"borrow","","",436,[[["self"]],["t"]]],[11,"try_into","","",436,[[["self"]],["result"]]],[11,"borrow_mut","","",436,[[["self"]],["t"]]],[11,"get_type_id","","",436,[[["self"]],["typeid"]]],[11,"to_owned","","",401,[[["self"]],["t"]]],[11,"clone_into","","",401,N],[11,"from","","",401,[[["t"]],["t"]]],[11,"into","","",401,[[["self"]],["u"]]],[11,"try_from","","",401,[[["u"]],["result"]]],[11,"borrow","","",401,[[["self"]],["t"]]],[11,"try_into","","",401,[[["self"]],["result"]]],[11,"borrow_mut","","",401,[[["self"]],["t"]]],[11,"get_type_id","","",401,[[["self"]],["typeid"]]],[11,"from","","",402,[[["t"]],["t"]]],[11,"into","","",402,[[["self"]],["u"]]],[11,"try_from","","",402,[[["u"]],["result"]]],[11,"borrow","","",402,[[["self"]],["t"]]],[11,"try_into","","",402,[[["self"]],["result"]]],[11,"borrow_mut","","",402,[[["self"]],["t"]]],[11,"get_type_id","","",402,[[["self"]],["typeid"]]],[11,"from","","",403,[[["t"]],["t"]]],[11,"into","","",403,[[["self"]],["u"]]],[11,"try_from","","",403,[[["u"]],["result"]]],[11,"borrow","","",403,[[["self"]],["t"]]],[11,"try_into","","",403,[[["self"]],["result"]]],[11,"borrow_mut","","",403,[[["self"]],["t"]]],[11,"get_type_id","","",403,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",437,[[["self"]],["t"]]],[11,"clone_into","","",437,N],[11,"from","","",437,[[["t"]],["t"]]],[11,"into","","",437,[[["self"]],["u"]]],[11,"try_from","","",437,[[["u"]],["result"]]],[11,"borrow","","",437,[[["self"]],["t"]]],[11,"try_into","","",437,[[["self"]],["result"]]],[11,"borrow_mut","","",437,[[["self"]],["t"]]],[11,"get_type_id","","",437,[[["self"]],["typeid"]]],[11,"to_owned","","",438,[[["self"]],["t"]]],[11,"clone_into","","",438,N],[11,"from","","",438,[[["t"]],["t"]]],[11,"into","","",438,[[["self"]],["u"]]],[11,"try_from","","",438,[[["u"]],["result"]]],[11,"borrow","","",438,[[["self"]],["t"]]],[11,"try_into","","",438,[[["self"]],["result"]]],[11,"borrow_mut","","",438,[[["self"]],["t"]]],[11,"get_type_id","","",438,[[["self"]],["typeid"]]],[11,"to_owned","","",439,[[["self"]],["t"]]],[11,"clone_into","","",439,N],[11,"from","","",439,[[["t"]],["t"]]],[11,"into","","",439,[[["self"]],["u"]]],[11,"try_from","","",439,[[["u"]],["result"]]],[11,"borrow","","",439,[[["self"]],["t"]]],[11,"try_into","","",439,[[["self"]],["result"]]],[11,"borrow_mut","","",439,[[["self"]],["t"]]],[11,"get_type_id","","",439,[[["self"]],["typeid"]]],[11,"from","","",441,[[["t"]],["t"]]],[11,"into","","",441,[[["self"]],["u"]]],[11,"try_from","","",441,[[["u"]],["result"]]],[11,"borrow","","",441,[[["self"]],["t"]]],[11,"try_into","","",441,[[["self"]],["result"]]],[11,"borrow_mut","","",441,[[["self"]],["t"]]],[11,"get_type_id","","",441,[[["self"]],["typeid"]]],[11,"to_owned","","",405,[[["self"]],["t"]]],[11,"clone_into","","",405,N],[11,"from","","",405,[[["t"]],["t"]]],[11,"into","","",405,[[["self"]],["u"]]],[11,"try_from","","",405,[[["u"]],["result"]]],[11,"borrow","","",405,[[["self"]],["t"]]],[11,"try_into","","",405,[[["self"]],["result"]]],[11,"borrow_mut","","",405,[[["self"]],["t"]]],[11,"get_type_id","","",405,[[["self"]],["typeid"]]],[11,"from","","",406,[[["t"]],["t"]]],[11,"into","","",406,[[["self"]],["u"]]],[11,"try_from","","",406,[[["u"]],["result"]]],[11,"borrow","","",406,[[["self"]],["t"]]],[11,"try_into","","",406,[[["self"]],["result"]]],[11,"borrow_mut","","",406,[[["self"]],["t"]]],[11,"get_type_id","","",406,[[["self"]],["typeid"]]],[11,"from","","",440,[[["t"]],["t"]]],[11,"into","","",440,[[["self"]],["u"]]],[11,"try_from","","",440,[[["u"]],["result"]]],[11,"borrow","","",440,[[["self"]],["t"]]],[11,"try_into","","",440,[[["self"]],["result"]]],[11,"borrow_mut","","",440,[[["self"]],["t"]]],[11,"get_type_id","","",440,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",442,[[["t"]],["t"]]],[11,"into","","",442,[[["self"]],["u"]]],[11,"try_from","","",442,[[["u"]],["result"]]],[11,"borrow","","",442,[[["self"]],["t"]]],[11,"try_into","","",442,[[["self"]],["result"]]],[11,"borrow_mut","","",442,[[["self"]],["t"]]],[11,"get_type_id","","",442,[[["self"]],["typeid"]]],[11,"to_owned","","",408,[[["self"]],["t"]]],[11,"clone_into","","",408,N],[11,"from","","",408,[[["t"]],["t"]]],[11,"into","","",408,[[["self"]],["u"]]],[11,"try_from","","",408,[[["u"]],["result"]]],[11,"borrow","","",408,[[["self"]],["t"]]],[11,"try_into","","",408,[[["self"]],["result"]]],[11,"borrow_mut","","",408,[[["self"]],["t"]]],[11,"get_type_id","","",408,[[["self"]],["typeid"]]],[11,"from","","",409,[[["t"]],["t"]]],[11,"into","","",409,[[["self"]],["u"]]],[11,"try_from","","",409,[[["u"]],["result"]]],[11,"borrow","","",409,[[["self"]],["t"]]],[11,"try_into","","",409,[[["self"]],["result"]]],[11,"borrow_mut","","",409,[[["self"]],["t"]]],[11,"get_type_id","","",409,[[["self"]],["typeid"]]],[11,"from","","",410,[[["t"]],["t"]]],[11,"into","","",410,[[["self"]],["u"]]],[11,"try_from","","",410,[[["u"]],["result"]]],[11,"borrow","","",410,[[["self"]],["t"]]],[11,"try_into","","",410,[[["self"]],["result"]]],[11,"borrow_mut","","",410,[[["self"]],["t"]]],[11,"get_type_id","","",410,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",443,[[["t"]],["t"]]],[11,"into","","",443,[[["self"]],["u"]]],[11,"try_from","","",443,[[["u"]],["result"]]],[11,"borrow","","",443,[[["self"]],["t"]]],[11,"try_into","","",443,[[["self"]],["result"]]],[11,"borrow_mut","","",443,[[["self"]],["t"]]],[11,"get_type_id","","",443,[[["self"]],["typeid"]]],[11,"to_owned","","",412,[[["self"]],["t"]]],[11,"clone_into","","",412,N],[11,"from","","",412,[[["t"]],["t"]]],[11,"into","","",412,[[["self"]],["u"]]],[11,"try_from","","",412,[[["u"]],["result"]]],[11,"borrow","","",412,[[["self"]],["t"]]],[11,"try_into","","",412,[[["self"]],["result"]]],[11,"borrow_mut","","",412,[[["self"]],["t"]]],[11,"get_type_id","","",412,[[["self"]],["typeid"]]],[11,"to_owned","","",413,[[["self"]],["t"]]],[11,"clone_into","","",413,N],[11,"from","","",413,[[["t"]],["t"]]],[11,"into","","",413,[[["self"]],["u"]]],[11,"try_from","","",413,[[["u"]],["result"]]],[11,"borrow","","",413,[[["self"]],["t"]]],[11,"try_into","","",413,[[["self"]],["result"]]],[11,"borrow_mut","","",413,[[["self"]],["t"]]],[11,"get_type_id","","",413,[[["self"]],["typeid"]]],[11,"from","","",414,[[["t"]],["t"]]],[11,"into","","",414,[[["self"]],["u"]]],[11,"try_from","","",414,[[["u"]],["result"]]],[11,"borrow","","",414,[[["self"]],["t"]]],[11,"try_into","","",414,[[["self"]],["result"]]],[11,"borrow_mut","","",414,[[["self"]],["t"]]],[11,"get_type_id","","",414,[[["self"]],["typeid"]]],[11,"from","","",415,[[["t"]],["t"]]],[11,"into","","",415,[[["self"]],["u"]]],[11,"try_from","","",415,[[["u"]],["result"]]],[11,"borrow","","",415,[[["self"]],["t"]]],[11,"try_into","","",415,[[["self"]],["result"]]],[11,"borrow_mut","","",415,[[["self"]],["t"]]],[11,"get_type_id","","",415,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",444,[[["t"]],["t"]]],[11,"into","","",444,[[["self"]],["u"]]],[11,"try_from","","",444,[[["u"]],["result"]]],[11,"borrow","","",444,[[["self"]],["t"]]],[11,"try_into","","",444,[[["self"]],["result"]]],[11,"borrow_mut","","",444,[[["self"]],["t"]]],[11,"get_type_id","","",444,[[["self"]],["typeid"]]],[11,"to_owned","","",417,[[["self"]],["t"]]],[11,"clone_into","","",417,N],[11,"from","","",417,[[["t"]],["t"]]],[11,"into","","",417,[[["self"]],["u"]]],[11,"try_from","","",417,[[["u"]],["result"]]],[11,"borrow","","",417,[[["self"]],["t"]]],[11,"try_into","","",417,[[["self"]],["result"]]],[11,"borrow_mut","","",417,[[["self"]],["t"]]],[11,"get_type_id","","",417,[[["self"]],["typeid"]]],[11,"from","","",418,[[["t"]],["t"]]],[11,"into","","",418,[[["self"]],["u"]]],[11,"try_from","","",418,[[["u"]],["result"]]],[11,"borrow","","",418,[[["self"]],["t"]]],[11,"try_into","","",418,[[["self"]],["result"]]],[11,"borrow_mut","","",418,[[["self"]],["t"]]],[11,"get_type_id","","",418,[[["self"]],["typeid"]]],[11,"from","","",419,[[["t"]],["t"]]],[11,"into","","",419,[[["self"]],["u"]]],[11,"try_from","","",419,[[["u"]],["result"]]],[11,"borrow","","",419,[[["self"]],["t"]]],[11,"try_into","","",419,[[["self"]],["result"]]],[11,"borrow_mut","","",419,[[["self"]],["t"]]],[11,"get_type_id","","",419,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",445,[[["t"]],["t"]]],[11,"into","","",445,[[["self"]],["u"]]],[11,"try_from","","",445,[[["u"]],["result"]]],[11,"borrow","","",445,[[["self"]],["t"]]],[11,"try_into","","",445,[[["self"]],["result"]]],[11,"borrow_mut","","",445,[[["self"]],["t"]]],[11,"get_type_id","","",445,[[["self"]],["typeid"]]],[11,"to_owned","","",421,[[["self"]],["t"]]],[11,"clone_into","","",421,N],[11,"from","","",421,[[["t"]],["t"]]],[11,"into","","",421,[[["self"]],["u"]]],[11,"try_from","","",421,[[["u"]],["result"]]],[11,"borrow","","",421,[[["self"]],["t"]]],[11,"try_into","","",421,[[["self"]],["result"]]],[11,"borrow_mut","","",421,[[["self"]],["t"]]],[11,"get_type_id","","",421,[[["self"]],["typeid"]]],[11,"from","","",422,[[["t"]],["t"]]],[11,"into","","",422,[[["self"]],["u"]]],[11,"try_from","","",422,[[["u"]],["result"]]],[11,"borrow","","",422,[[["self"]],["t"]]],[11,"try_into","","",422,[[["self"]],["result"]]],[11,"borrow_mut","","",422,[[["self"]],["t"]]],[11,"get_type_id","","",422,[[["self"]],["typeid"]]],[11,"from","","",423,[[["t"]],["t"]]],[11,"into","","",423,[[["self"]],["u"]]],[11,"try_from","","",423,[[["u"]],["result"]]],[11,"borrow","","",423,[[["self"]],["t"]]],[11,"try_into","","",423,[[["self"]],["result"]]],[11,"borrow_mut","","",423,[[["self"]],["t"]]],[11,"get_type_id","","",423,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",446,[[["self"]],["t"]]],[11,"clone_into","","",446,N],[11,"from","","",446,[[["t"]],["t"]]],[11,"into","","",446,[[["self"]],["u"]]],[11,"try_from","","",446,[[["u"]],["result"]]],[11,"borrow","","",446,[[["self"]],["t"]]],[11,"try_into","","",446,[[["self"]],["result"]]],[11,"borrow_mut","","",446,[[["self"]],["t"]]],[11,"get_type_id","","",446,[[["self"]],["typeid"]]],[11,"to_owned","","",447,[[["self"]],["t"]]],[11,"clone_into","","",447,N],[11,"from","","",447,[[["t"]],["t"]]],[11,"into","","",447,[[["self"]],["u"]]],[11,"try_from","","",447,[[["u"]],["result"]]],[11,"borrow","","",447,[[["self"]],["t"]]],[11,"try_into","","",447,[[["self"]],["result"]]],[11,"borrow_mut","","",447,[[["self"]],["t"]]],[11,"get_type_id","","",447,[[["self"]],["typeid"]]],[11,"to_owned","","",448,[[["self"]],["t"]]],[11,"clone_into","","",448,N],[11,"from","","",448,[[["t"]],["t"]]],[11,"into","","",448,[[["self"]],["u"]]],[11,"try_from","","",448,[[["u"]],["result"]]],[11,"borrow","","",448,[[["self"]],["t"]]],[11,"try_into","","",448,[[["self"]],["result"]]],[11,"borrow_mut","","",448,[[["self"]],["t"]]],[11,"get_type_id","","",448,[[["self"]],["typeid"]]],[11,"from","","",450,[[["t"]],["t"]]],[11,"into","","",450,[[["self"]],["u"]]],[11,"try_from","","",450,[[["u"]],["result"]]],[11,"borrow","","",450,[[["self"]],["t"]]],[11,"try_into","","",450,[[["self"]],["result"]]],[11,"borrow_mut","","",450,[[["self"]],["t"]]],[11,"get_type_id","","",450,[[["self"]],["typeid"]]],[11,"to_owned","","",424,[[["self"]],["t"]]],[11,"clone_into","","",424,N],[11,"from","","",424,[[["t"]],["t"]]],[11,"into","","",424,[[["self"]],["u"]]],[11,"try_from","","",424,[[["u"]],["result"]]],[11,"borrow","","",424,[[["self"]],["t"]]],[11,"try_into","","",424,[[["self"]],["result"]]],[11,"borrow_mut","","",424,[[["self"]],["t"]]],[11,"get_type_id","","",424,[[["self"]],["typeid"]]],[11,"from","","",425,[[["t"]],["t"]]],[11,"into","","",425,[[["self"]],["u"]]],[11,"try_from","","",425,[[["u"]],["result"]]],[11,"borrow","","",425,[[["self"]],["t"]]],[11,"try_into","","",425,[[["self"]],["result"]]],[11,"borrow_mut","","",425,[[["self"]],["t"]]],[11,"get_type_id","","",425,[[["self"]],["typeid"]]],[11,"from","","",449,[[["t"]],["t"]]],[11,"into","","",449,[[["self"]],["u"]]],[11,"try_from","","",449,[[["u"]],["result"]]],[11,"borrow","","",449,[[["self"]],["t"]]],[11,"try_into","","",449,[[["self"]],["result"]]],[11,"borrow_mut","","",449,[[["self"]],["t"]]],[11,"get_type_id","","",449,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",451,[[["t"]],["t"]]],[11,"into","","",451,[[["self"]],["u"]]],[11,"try_from","","",451,[[["u"]],["result"]]],[11,"borrow","","",451,[[["self"]],["t"]]],[11,"try_into","","",451,[[["self"]],["result"]]],[11,"borrow_mut","","",451,[[["self"]],["t"]]],[11,"get_type_id","","",451,[[["self"]],["typeid"]]],[11,"to_owned","","",426,[[["self"]],["t"]]],[11,"clone_into","","",426,N],[11,"from","","",426,[[["t"]],["t"]]],[11,"into","","",426,[[["self"]],["u"]]],[11,"try_from","","",426,[[["u"]],["result"]]],[11,"borrow","","",426,[[["self"]],["t"]]],[11,"try_into","","",426,[[["self"]],["result"]]],[11,"borrow_mut","","",426,[[["self"]],["t"]]],[11,"get_type_id","","",426,[[["self"]],["typeid"]]],[11,"from","","",427,[[["t"]],["t"]]],[11,"into","","",427,[[["self"]],["u"]]],[11,"try_from","","",427,[[["u"]],["result"]]],[11,"borrow","","",427,[[["self"]],["t"]]],[11,"try_into","","",427,[[["self"]],["result"]]],[11,"borrow_mut","","",427,[[["self"]],["t"]]],[11,"get_type_id","","",427,[[["self"]],["typeid"]]],[11,"from","","",428,[[["t"]],["t"]]],[11,"into","","",428,[[["self"]],["u"]]],[11,"try_from","","",428,[[["u"]],["result"]]],[11,"borrow","","",428,[[["self"]],["t"]]],[11,"try_into","","",428,[[["self"]],["result"]]],[11,"borrow_mut","","",428,[[["self"]],["t"]]],[11,"get_type_id","","",428,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",452,[[["t"]],["t"]]],[11,"into","","",452,[[["self"]],["u"]]],[11,"try_from","","",452,[[["u"]],["result"]]],[11,"borrow","","",452,[[["self"]],["t"]]],[11,"try_into","","",452,[[["self"]],["result"]]],[11,"borrow_mut","","",452,[[["self"]],["t"]]],[11,"get_type_id","","",452,[[["self"]],["typeid"]]],[11,"to_owned","","",429,[[["self"]],["t"]]],[11,"clone_into","","",429,N],[11,"from","","",429,[[["t"]],["t"]]],[11,"into","","",429,[[["self"]],["u"]]],[11,"try_from","","",429,[[["u"]],["result"]]],[11,"borrow","","",429,[[["self"]],["t"]]],[11,"try_into","","",429,[[["self"]],["result"]]],[11,"borrow_mut","","",429,[[["self"]],["t"]]],[11,"get_type_id","","",429,[[["self"]],["typeid"]]],[11,"to_owned","","",430,[[["self"]],["t"]]],[11,"clone_into","","",430,N],[11,"from","","",430,[[["t"]],["t"]]],[11,"into","","",430,[[["self"]],["u"]]],[11,"try_from","","",430,[[["u"]],["result"]]],[11,"borrow","","",430,[[["self"]],["t"]]],[11,"try_into","","",430,[[["self"]],["result"]]],[11,"borrow_mut","","",430,[[["self"]],["t"]]],[11,"get_type_id","","",430,[[["self"]],["typeid"]]],[11,"from","","",431,[[["t"]],["t"]]],[11,"into","","",431,[[["self"]],["u"]]],[11,"try_from","","",431,[[["u"]],["result"]]],[11,"borrow","","",431,[[["self"]],["t"]]],[11,"try_into","","",431,[[["self"]],["result"]]],[11,"borrow_mut","","",431,[[["self"]],["t"]]],[11,"get_type_id","","",431,[[["self"]],["typeid"]]],[11,"from","","",432,[[["t"]],["t"]]],[11,"into","","",432,[[["self"]],["u"]]],[11,"try_from","","",432,[[["u"]],["result"]]],[11,"borrow","","",432,[[["self"]],["t"]]],[11,"try_into","","",432,[[["self"]],["result"]]],[11,"borrow_mut","","",432,[[["self"]],["t"]]],[11,"get_type_id","","",432,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",453,[[["t"]],["t"]]],[11,"into","","",453,[[["self"]],["u"]]],[11,"try_from","","",453,[[["u"]],["result"]]],[11,"borrow","","",453,[[["self"]],["t"]]],[11,"try_into","","",453,[[["self"]],["result"]]],[11,"borrow_mut","","",453,[[["self"]],["t"]]],[11,"get_type_id","","",453,[[["self"]],["typeid"]]],[11,"to_owned","","",433,[[["self"]],["t"]]],[11,"clone_into","","",433,N],[11,"from","","",433,[[["t"]],["t"]]],[11,"into","","",433,[[["self"]],["u"]]],[11,"try_from","","",433,[[["u"]],["result"]]],[11,"borrow","","",433,[[["self"]],["t"]]],[11,"try_into","","",433,[[["self"]],["result"]]],[11,"borrow_mut","","",433,[[["self"]],["t"]]],[11,"get_type_id","","",433,[[["self"]],["typeid"]]],[11,"from","","",434,[[["t"]],["t"]]],[11,"into","","",434,[[["self"]],["u"]]],[11,"try_from","","",434,[[["u"]],["result"]]],[11,"borrow","","",434,[[["self"]],["t"]]],[11,"try_into","","",434,[[["self"]],["result"]]],[11,"borrow_mut","","",434,[[["self"]],["t"]]],[11,"get_type_id","","",434,[[["self"]],["typeid"]]],[11,"from","","",435,[[["t"]],["t"]]],[11,"into","","",435,[[["self"]],["u"]]],[11,"try_from","","",435,[[["u"]],["result"]]],[11,"borrow","","",435,[[["self"]],["t"]]],[11,"try_into","","",435,[[["self"]],["result"]]],[11,"borrow_mut","","",435,[[["self"]],["t"]]],[11,"get_type_id","","",435,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",461,[[["t"]],["t"]]],[11,"into","","",461,[[["self"]],["u"]]],[11,"try_from","","",461,[[["u"]],["result"]]],[11,"borrow","","",461,[[["self"]],["t"]]],[11,"try_into","","",461,[[["self"]],["result"]]],[11,"borrow_mut","","",461,[[["self"]],["t"]]],[11,"get_type_id","","",461,[[["self"]],["typeid"]]],[11,"from","","",454,[[["t"]],["t"]]],[11,"into","","",454,[[["self"]],["u"]]],[11,"try_from","","",454,[[["u"]],["result"]]],[11,"borrow","","",454,[[["self"]],["t"]]],[11,"try_into","","",454,[[["self"]],["result"]]],[11,"borrow_mut","","",454,[[["self"]],["t"]]],[11,"get_type_id","","",454,[[["self"]],["typeid"]]],[11,"from","","",460,[[["t"]],["t"]]],[11,"into","","",460,[[["self"]],["u"]]],[11,"try_from","","",460,[[["u"]],["result"]]],[11,"borrow","","",460,[[["self"]],["t"]]],[11,"try_into","","",460,[[["self"]],["result"]]],[11,"borrow_mut","","",460,[[["self"]],["t"]]],[11,"get_type_id","","",460,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",463,[[["t"]],["t"]]],[11,"into","","",463,[[["self"]],["u"]]],[11,"try_from","","",463,[[["u"]],["result"]]],[11,"borrow","","",463,[[["self"]],["t"]]],[11,"try_into","","",463,[[["self"]],["result"]]],[11,"borrow_mut","","",463,[[["self"]],["t"]]],[11,"get_type_id","","",463,[[["self"]],["typeid"]]],[11,"from","","",456,[[["t"]],["t"]]],[11,"into","","",456,[[["self"]],["u"]]],[11,"try_from","","",456,[[["u"]],["result"]]],[11,"borrow","","",456,[[["self"]],["t"]]],[11,"try_into","","",456,[[["self"]],["result"]]],[11,"borrow_mut","","",456,[[["self"]],["t"]]],[11,"get_type_id","","",456,[[["self"]],["typeid"]]],[11,"from","","",462,[[["t"]],["t"]]],[11,"into","","",462,[[["self"]],["u"]]],[11,"try_from","","",462,[[["u"]],["result"]]],[11,"borrow","","",462,[[["self"]],["t"]]],[11,"try_into","","",462,[[["self"]],["result"]]],[11,"borrow_mut","","",462,[[["self"]],["t"]]],[11,"get_type_id","","",462,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",465,[[["t"]],["t"]]],[11,"into","","",465,[[["self"]],["u"]]],[11,"try_from","","",465,[[["u"]],["result"]]],[11,"borrow","","",465,[[["self"]],["t"]]],[11,"try_into","","",465,[[["self"]],["result"]]],[11,"borrow_mut","","",465,[[["self"]],["t"]]],[11,"get_type_id","","",465,[[["self"]],["typeid"]]],[11,"from","","",458,[[["t"]],["t"]]],[11,"into","","",458,[[["self"]],["u"]]],[11,"try_from","","",458,[[["u"]],["result"]]],[11,"borrow","","",458,[[["self"]],["t"]]],[11,"try_into","","",458,[[["self"]],["result"]]],[11,"borrow_mut","","",458,[[["self"]],["t"]]],[11,"get_type_id","","",458,[[["self"]],["typeid"]]],[11,"from","","",464,[[["t"]],["t"]]],[11,"into","","",464,[[["self"]],["u"]]],[11,"try_from","","",464,[[["u"]],["result"]]],[11,"borrow","","",464,[[["self"]],["t"]]],[11,"try_into","","",464,[[["self"]],["result"]]],[11,"borrow_mut","","",464,[[["self"]],["t"]]],[11,"get_type_id","","",464,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",467,[[["t"]],["t"]]],[11,"into","","",467,[[["self"]],["u"]]],[11,"try_from","","",467,[[["u"]],["result"]]],[11,"borrow","","",467,[[["self"]],["t"]]],[11,"try_into","","",467,[[["self"]],["result"]]],[11,"borrow_mut","","",467,[[["self"]],["t"]]],[11,"get_type_id","","",467,[[["self"]],["typeid"]]],[11,"from","","",459,[[["t"]],["t"]]],[11,"into","","",459,[[["self"]],["u"]]],[11,"try_from","","",459,[[["u"]],["result"]]],[11,"borrow","","",459,[[["self"]],["t"]]],[11,"try_into","","",459,[[["self"]],["result"]]],[11,"borrow_mut","","",459,[[["self"]],["t"]]],[11,"get_type_id","","",459,[[["self"]],["typeid"]]],[11,"from","","",466,[[["t"]],["t"]]],[11,"into","","",466,[[["self"]],["u"]]],[11,"try_from","","",466,[[["u"]],["result"]]],[11,"borrow","","",466,[[["self"]],["t"]]],[11,"try_into","","",466,[[["self"]],["result"]]],[11,"borrow_mut","","",466,[[["self"]],["t"]]],[11,"get_type_id","","",466,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",481,[[["t"]],["t"]]],[11,"into","","",481,[[["self"]],["u"]]],[11,"try_from","","",481,[[["u"]],["result"]]],[11,"borrow","","",481,[[["self"]],["t"]]],[11,"try_into","","",481,[[["self"]],["result"]]],[11,"borrow_mut","","",481,[[["self"]],["t"]]],[11,"get_type_id","","",481,[[["self"]],["typeid"]]],[11,"from","","",468,[[["t"]],["t"]]],[11,"into","","",468,[[["self"]],["u"]]],[11,"try_from","","",468,[[["u"]],["result"]]],[11,"borrow","","",468,[[["self"]],["t"]]],[11,"try_into","","",468,[[["self"]],["result"]]],[11,"borrow_mut","","",468,[[["self"]],["t"]]],[11,"get_type_id","","",468,[[["self"]],["typeid"]]],[11,"from","","",480,[[["t"]],["t"]]],[11,"into","","",480,[[["self"]],["u"]]],[11,"try_from","","",480,[[["u"]],["result"]]],[11,"borrow","","",480,[[["self"]],["t"]]],[11,"try_into","","",480,[[["self"]],["result"]]],[11,"borrow_mut","","",480,[[["self"]],["t"]]],[11,"get_type_id","","",480,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",482,[[["t"]],["t"]]],[11,"into","","",482,[[["self"]],["u"]]],[11,"try_from","","",482,[[["u"]],["result"]]],[11,"borrow","","",482,[[["self"]],["t"]]],[11,"try_into","","",482,[[["self"]],["result"]]],[11,"borrow_mut","","",482,[[["self"]],["t"]]],[11,"get_type_id","","",482,[[["self"]],["typeid"]]],[11,"to_owned","","",470,[[["self"]],["t"]]],[11,"clone_into","","",470,N],[11,"from","","",470,[[["t"]],["t"]]],[11,"into","","",470,[[["self"]],["u"]]],[11,"try_from","","",470,[[["u"]],["result"]]],[11,"borrow","","",470,[[["self"]],["t"]]],[11,"try_into","","",470,[[["self"]],["result"]]],[11,"borrow_mut","","",470,[[["self"]],["t"]]],[11,"get_type_id","","",470,[[["self"]],["typeid"]]],[11,"to_owned","","",471,[[["self"]],["t"]]],[11,"clone_into","","",471,N],[11,"from","","",471,[[["t"]],["t"]]],[11,"into","","",471,[[["self"]],["u"]]],[11,"try_from","","",471,[[["u"]],["result"]]],[11,"borrow","","",471,[[["self"]],["t"]]],[11,"try_into","","",471,[[["self"]],["result"]]],[11,"borrow_mut","","",471,[[["self"]],["t"]]],[11,"get_type_id","","",471,[[["self"]],["typeid"]]],[11,"from","","",472,[[["t"]],["t"]]],[11,"into","","",472,[[["self"]],["u"]]],[11,"try_from","","",472,[[["u"]],["result"]]],[11,"borrow","","",472,[[["self"]],["t"]]],[11,"try_into","","",472,[[["self"]],["result"]]],[11,"borrow_mut","","",472,[[["self"]],["t"]]],[11,"get_type_id","","",472,[[["self"]],["typeid"]]],[11,"from","","",473,[[["t"]],["t"]]],[11,"into","","",473,[[["self"]],["u"]]],[11,"try_from","","",473,[[["u"]],["result"]]],[11,"borrow","","",473,[[["self"]],["t"]]],[11,"try_into","","",473,[[["self"]],["result"]]],[11,"borrow_mut","","",473,[[["self"]],["t"]]],[11,"get_type_id","","",473,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",484,[[["t"]],["t"]]],[11,"into","","",484,[[["self"]],["u"]]],[11,"try_from","","",484,[[["u"]],["result"]]],[11,"borrow","","",484,[[["self"]],["t"]]],[11,"try_into","","",484,[[["self"]],["result"]]],[11,"borrow_mut","","",484,[[["self"]],["t"]]],[11,"get_type_id","","",484,[[["self"]],["typeid"]]],[11,"from","","",475,[[["t"]],["t"]]],[11,"into","","",475,[[["self"]],["u"]]],[11,"try_from","","",475,[[["u"]],["result"]]],[11,"borrow","","",475,[[["self"]],["t"]]],[11,"try_into","","",475,[[["self"]],["result"]]],[11,"borrow_mut","","",475,[[["self"]],["t"]]],[11,"get_type_id","","",475,[[["self"]],["typeid"]]],[11,"from","","",483,[[["t"]],["t"]]],[11,"into","","",483,[[["self"]],["u"]]],[11,"try_from","","",483,[[["u"]],["result"]]],[11,"borrow","","",483,[[["self"]],["t"]]],[11,"try_into","","",483,[[["self"]],["result"]]],[11,"borrow_mut","","",483,[[["self"]],["t"]]],[11,"get_type_id","","",483,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",485,[[["t"]],["t"]]],[11,"into","","",485,[[["self"]],["u"]]],[11,"try_from","","",485,[[["u"]],["result"]]],[11,"borrow","","",485,[[["self"]],["t"]]],[11,"try_into","","",485,[[["self"]],["result"]]],[11,"borrow_mut","","",485,[[["self"]],["t"]]],[11,"get_type_id","","",485,[[["self"]],["typeid"]]],[11,"to_owned","","",476,[[["self"]],["t"]]],[11,"clone_into","","",476,N],[11,"from","","",476,[[["t"]],["t"]]],[11,"into","","",476,[[["self"]],["u"]]],[11,"try_from","","",476,[[["u"]],["result"]]],[11,"borrow","","",476,[[["self"]],["t"]]],[11,"try_into","","",476,[[["self"]],["result"]]],[11,"borrow_mut","","",476,[[["self"]],["t"]]],[11,"get_type_id","","",476,[[["self"]],["typeid"]]],[11,"to_owned","","",477,[[["self"]],["t"]]],[11,"clone_into","","",477,N],[11,"from","","",477,[[["t"]],["t"]]],[11,"into","","",477,[[["self"]],["u"]]],[11,"try_from","","",477,[[["u"]],["result"]]],[11,"borrow","","",477,[[["self"]],["t"]]],[11,"try_into","","",477,[[["self"]],["result"]]],[11,"borrow_mut","","",477,[[["self"]],["t"]]],[11,"get_type_id","","",477,[[["self"]],["typeid"]]],[11,"from","","",478,[[["t"]],["t"]]],[11,"into","","",478,[[["self"]],["u"]]],[11,"try_from","","",478,[[["u"]],["result"]]],[11,"borrow","","",478,[[["self"]],["t"]]],[11,"try_into","","",478,[[["self"]],["result"]]],[11,"borrow_mut","","",478,[[["self"]],["t"]]],[11,"get_type_id","","",478,[[["self"]],["typeid"]]],[11,"from","","",479,[[["t"]],["t"]]],[11,"into","","",479,[[["self"]],["u"]]],[11,"try_from","","",479,[[["u"]],["result"]]],[11,"borrow","","",479,[[["self"]],["t"]]],[11,"try_into","","",479,[[["self"]],["result"]]],[11,"borrow_mut","","",479,[[["self"]],["t"]]],[11,"get_type_id","","",479,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",497,[[["t"]],["t"]]],[11,"into","","",497,[[["self"]],["u"]]],[11,"try_from","","",497,[[["u"]],["result"]]],[11,"borrow","","",497,[[["self"]],["t"]]],[11,"try_into","","",497,[[["self"]],["result"]]],[11,"borrow_mut","","",497,[[["self"]],["t"]]],[11,"get_type_id","","",497,[[["self"]],["typeid"]]],[11,"from","","",486,[[["t"]],["t"]]],[11,"into","","",486,[[["self"]],["u"]]],[11,"try_from","","",486,[[["u"]],["result"]]],[11,"borrow","","",486,[[["self"]],["t"]]],[11,"try_into","","",486,[[["self"]],["result"]]],[11,"borrow_mut","","",486,[[["self"]],["t"]]],[11,"get_type_id","","",486,[[["self"]],["typeid"]]],[11,"from","","",496,[[["t"]],["t"]]],[11,"into","","",496,[[["self"]],["u"]]],[11,"try_from","","",496,[[["u"]],["result"]]],[11,"borrow","","",496,[[["self"]],["t"]]],[11,"try_into","","",496,[[["self"]],["result"]]],[11,"borrow_mut","","",496,[[["self"]],["t"]]],[11,"get_type_id","","",496,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",498,[[["t"]],["t"]]],[11,"into","","",498,[[["self"]],["u"]]],[11,"try_from","","",498,[[["u"]],["result"]]],[11,"borrow","","",498,[[["self"]],["t"]]],[11,"try_into","","",498,[[["self"]],["result"]]],[11,"borrow_mut","","",498,[[["self"]],["t"]]],[11,"get_type_id","","",498,[[["self"]],["typeid"]]],[11,"to_owned","","",488,[[["self"]],["t"]]],[11,"clone_into","","",488,N],[11,"from","","",488,[[["t"]],["t"]]],[11,"into","","",488,[[["self"]],["u"]]],[11,"try_from","","",488,[[["u"]],["result"]]],[11,"borrow","","",488,[[["self"]],["t"]]],[11,"try_into","","",488,[[["self"]],["result"]]],[11,"borrow_mut","","",488,[[["self"]],["t"]]],[11,"get_type_id","","",488,[[["self"]],["typeid"]]],[11,"from","","",489,[[["t"]],["t"]]],[11,"into","","",489,[[["self"]],["u"]]],[11,"try_from","","",489,[[["u"]],["result"]]],[11,"borrow","","",489,[[["self"]],["t"]]],[11,"try_into","","",489,[[["self"]],["result"]]],[11,"borrow_mut","","",489,[[["self"]],["t"]]],[11,"get_type_id","","",489,[[["self"]],["typeid"]]],[11,"from","","",490,[[["t"]],["t"]]],[11,"into","","",490,[[["self"]],["u"]]],[11,"try_from","","",490,[[["u"]],["result"]]],[11,"borrow","","",490,[[["self"]],["t"]]],[11,"try_into","","",490,[[["self"]],["result"]]],[11,"borrow_mut","","",490,[[["self"]],["t"]]],[11,"get_type_id","","",490,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",500,[[["t"]],["t"]]],[11,"into","","",500,[[["self"]],["u"]]],[11,"try_from","","",500,[[["u"]],["result"]]],[11,"borrow","","",500,[[["self"]],["t"]]],[11,"try_into","","",500,[[["self"]],["result"]]],[11,"borrow_mut","","",500,[[["self"]],["t"]]],[11,"get_type_id","","",500,[[["self"]],["typeid"]]],[11,"from","","",492,[[["t"]],["t"]]],[11,"into","","",492,[[["self"]],["u"]]],[11,"try_from","","",492,[[["u"]],["result"]]],[11,"borrow","","",492,[[["self"]],["t"]]],[11,"try_into","","",492,[[["self"]],["result"]]],[11,"borrow_mut","","",492,[[["self"]],["t"]]],[11,"get_type_id","","",492,[[["self"]],["typeid"]]],[11,"from","","",499,[[["t"]],["t"]]],[11,"into","","",499,[[["self"]],["u"]]],[11,"try_from","","",499,[[["u"]],["result"]]],[11,"borrow","","",499,[[["self"]],["t"]]],[11,"try_into","","",499,[[["self"]],["result"]]],[11,"borrow_mut","","",499,[[["self"]],["t"]]],[11,"get_type_id","","",499,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",501,[[["t"]],["t"]]],[11,"into","","",501,[[["self"]],["u"]]],[11,"try_from","","",501,[[["u"]],["result"]]],[11,"borrow","","",501,[[["self"]],["t"]]],[11,"try_into","","",501,[[["self"]],["result"]]],[11,"borrow_mut","","",501,[[["self"]],["t"]]],[11,"get_type_id","","",501,[[["self"]],["typeid"]]],[11,"to_owned","","",493,[[["self"]],["t"]]],[11,"clone_into","","",493,N],[11,"from","","",493,[[["t"]],["t"]]],[11,"into","","",493,[[["self"]],["u"]]],[11,"try_from","","",493,[[["u"]],["result"]]],[11,"borrow","","",493,[[["self"]],["t"]]],[11,"try_into","","",493,[[["self"]],["result"]]],[11,"borrow_mut","","",493,[[["self"]],["t"]]],[11,"get_type_id","","",493,[[["self"]],["typeid"]]],[11,"from","","",494,[[["t"]],["t"]]],[11,"into","","",494,[[["self"]],["u"]]],[11,"try_from","","",494,[[["u"]],["result"]]],[11,"borrow","","",494,[[["self"]],["t"]]],[11,"try_into","","",494,[[["self"]],["result"]]],[11,"borrow_mut","","",494,[[["self"]],["t"]]],[11,"get_type_id","","",494,[[["self"]],["typeid"]]],[11,"from","","",495,[[["t"]],["t"]]],[11,"into","","",495,[[["self"]],["u"]]],[11,"try_from","","",495,[[["u"]],["result"]]],[11,"borrow","","",495,[[["self"]],["t"]]],[11,"try_into","","",495,[[["self"]],["result"]]],[11,"borrow_mut","","",495,[[["self"]],["t"]]],[11,"get_type_id","","",495,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",511,[[["t"]],["t"]]],[11,"into","","",511,[[["self"]],["u"]]],[11,"try_from","","",511,[[["u"]],["result"]]],[11,"borrow","","",511,[[["self"]],["t"]]],[11,"try_into","","",511,[[["self"]],["result"]]],[11,"borrow_mut","","",511,[[["self"]],["t"]]],[11,"get_type_id","","",511,[[["self"]],["typeid"]]],[11,"to_owned","","",502,[[["self"]],["t"]]],[11,"clone_into","","",502,N],[11,"from","","",502,[[["t"]],["t"]]],[11,"into","","",502,[[["self"]],["u"]]],[11,"try_from","","",502,[[["u"]],["result"]]],[11,"borrow","","",502,[[["self"]],["t"]]],[11,"try_into","","",502,[[["self"]],["result"]]],[11,"borrow_mut","","",502,[[["self"]],["t"]]],[11,"get_type_id","","",502,[[["self"]],["typeid"]]],[11,"from","","",503,[[["t"]],["t"]]],[11,"into","","",503,[[["self"]],["u"]]],[11,"try_from","","",503,[[["u"]],["result"]]],[11,"borrow","","",503,[[["self"]],["t"]]],[11,"try_into","","",503,[[["self"]],["result"]]],[11,"borrow_mut","","",503,[[["self"]],["t"]]],[11,"get_type_id","","",503,[[["self"]],["typeid"]]],[11,"from","","",510,[[["t"]],["t"]]],[11,"into","","",510,[[["self"]],["u"]]],[11,"try_from","","",510,[[["u"]],["result"]]],[11,"borrow","","",510,[[["self"]],["t"]]],[11,"try_into","","",510,[[["self"]],["result"]]],[11,"borrow_mut","","",510,[[["self"]],["t"]]],[11,"get_type_id","","",510,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",513,[[["t"]],["t"]]],[11,"into","","",513,[[["self"]],["u"]]],[11,"try_from","","",513,[[["u"]],["result"]]],[11,"borrow","","",513,[[["self"]],["t"]]],[11,"try_into","","",513,[[["self"]],["result"]]],[11,"borrow_mut","","",513,[[["self"]],["t"]]],[11,"get_type_id","","",513,[[["self"]],["typeid"]]],[11,"from","","",505,[[["t"]],["t"]]],[11,"into","","",505,[[["self"]],["u"]]],[11,"try_from","","",505,[[["u"]],["result"]]],[11,"borrow","","",505,[[["self"]],["t"]]],[11,"try_into","","",505,[[["self"]],["result"]]],[11,"borrow_mut","","",505,[[["self"]],["t"]]],[11,"get_type_id","","",505,[[["self"]],["typeid"]]],[11,"from","","",512,[[["t"]],["t"]]],[11,"into","","",512,[[["self"]],["u"]]],[11,"try_from","","",512,[[["u"]],["result"]]],[11,"borrow","","",512,[[["self"]],["t"]]],[11,"try_into","","",512,[[["self"]],["result"]]],[11,"borrow_mut","","",512,[[["self"]],["t"]]],[11,"get_type_id","","",512,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",515,[[["t"]],["t"]]],[11,"into","","",515,[[["self"]],["u"]]],[11,"try_from","","",515,[[["u"]],["result"]]],[11,"borrow","","",515,[[["self"]],["t"]]],[11,"try_into","","",515,[[["self"]],["result"]]],[11,"borrow_mut","","",515,[[["self"]],["t"]]],[11,"get_type_id","","",515,[[["self"]],["typeid"]]],[11,"to_owned","","",507,[[["self"]],["t"]]],[11,"clone_into","","",507,N],[11,"from","","",507,[[["t"]],["t"]]],[11,"into","","",507,[[["self"]],["u"]]],[11,"try_from","","",507,[[["u"]],["result"]]],[11,"borrow","","",507,[[["self"]],["t"]]],[11,"try_into","","",507,[[["self"]],["result"]]],[11,"borrow_mut","","",507,[[["self"]],["t"]]],[11,"get_type_id","","",507,[[["self"]],["typeid"]]],[11,"from","","",508,[[["t"]],["t"]]],[11,"into","","",508,[[["self"]],["u"]]],[11,"try_from","","",508,[[["u"]],["result"]]],[11,"borrow","","",508,[[["self"]],["t"]]],[11,"try_into","","",508,[[["self"]],["result"]]],[11,"borrow_mut","","",508,[[["self"]],["t"]]],[11,"get_type_id","","",508,[[["self"]],["typeid"]]],[11,"from","","",514,[[["t"]],["t"]]],[11,"into","","",514,[[["self"]],["u"]]],[11,"try_from","","",514,[[["u"]],["result"]]],[11,"borrow","","",514,[[["self"]],["t"]]],[11,"try_into","","",514,[[["self"]],["result"]]],[11,"borrow_mut","","",514,[[["self"]],["t"]]],[11,"get_type_id","","",514,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",517,[[["t"]],["t"]]],[11,"into","","",517,[[["self"]],["u"]]],[11,"try_from","","",517,[[["u"]],["result"]]],[11,"borrow","","",517,[[["self"]],["t"]]],[11,"try_into","","",517,[[["self"]],["result"]]],[11,"borrow_mut","","",517,[[["self"]],["t"]]],[11,"get_type_id","","",517,[[["self"]],["typeid"]]],[11,"from","","",509,[[["t"]],["t"]]],[11,"into","","",509,[[["self"]],["u"]]],[11,"try_from","","",509,[[["u"]],["result"]]],[11,"borrow","","",509,[[["self"]],["t"]]],[11,"try_into","","",509,[[["self"]],["result"]]],[11,"borrow_mut","","",509,[[["self"]],["t"]]],[11,"get_type_id","","",509,[[["self"]],["typeid"]]],[11,"from","","",516,[[["t"]],["t"]]],[11,"into","","",516,[[["self"]],["u"]]],[11,"try_from","","",516,[[["u"]],["result"]]],[11,"borrow","","",516,[[["self"]],["t"]]],[11,"try_into","","",516,[[["self"]],["result"]]],[11,"borrow_mut","","",516,[[["self"]],["t"]]],[11,"get_type_id","","",516,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",533,[[["t"]],["t"]]],[11,"into","","",533,[[["self"]],["u"]]],[11,"try_from","","",533,[[["u"]],["result"]]],[11,"borrow","","",533,[[["self"]],["t"]]],[11,"try_into","","",533,[[["self"]],["result"]]],[11,"borrow_mut","","",533,[[["self"]],["t"]]],[11,"get_type_id","","",533,[[["self"]],["typeid"]]],[11,"to_owned","","",518,[[["self"]],["t"]]],[11,"clone_into","","",518,N],[11,"from","","",518,[[["t"]],["t"]]],[11,"into","","",518,[[["self"]],["u"]]],[11,"try_from","","",518,[[["u"]],["result"]]],[11,"borrow","","",518,[[["self"]],["t"]]],[11,"try_into","","",518,[[["self"]],["result"]]],[11,"borrow_mut","","",518,[[["self"]],["t"]]],[11,"get_type_id","","",518,[[["self"]],["typeid"]]],[11,"to_owned","","",519,[[["self"]],["t"]]],[11,"clone_into","","",519,N],[11,"from","","",519,[[["t"]],["t"]]],[11,"into","","",519,[[["self"]],["u"]]],[11,"try_from","","",519,[[["u"]],["result"]]],[11,"borrow","","",519,[[["self"]],["t"]]],[11,"try_into","","",519,[[["self"]],["result"]]],[11,"borrow_mut","","",519,[[["self"]],["t"]]],[11,"get_type_id","","",519,[[["self"]],["typeid"]]],[11,"from","","",520,[[["t"]],["t"]]],[11,"into","","",520,[[["self"]],["u"]]],[11,"try_from","","",520,[[["u"]],["result"]]],[11,"borrow","","",520,[[["self"]],["t"]]],[11,"try_into","","",520,[[["self"]],["result"]]],[11,"borrow_mut","","",520,[[["self"]],["t"]]],[11,"get_type_id","","",520,[[["self"]],["typeid"]]],[11,"from","","",532,[[["t"]],["t"]]],[11,"into","","",532,[[["self"]],["u"]]],[11,"try_from","","",532,[[["u"]],["result"]]],[11,"borrow","","",532,[[["self"]],["t"]]],[11,"try_into","","",532,[[["self"]],["result"]]],[11,"borrow_mut","","",532,[[["self"]],["t"]]],[11,"get_type_id","","",532,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",534,[[["self"]],["t"]]],[11,"clone_into","","",534,N],[11,"from","","",534,[[["t"]],["t"]]],[11,"into","","",534,[[["self"]],["u"]]],[11,"try_from","","",534,[[["u"]],["result"]]],[11,"borrow","","",534,[[["self"]],["t"]]],[11,"try_into","","",534,[[["self"]],["result"]]],[11,"borrow_mut","","",534,[[["self"]],["t"]]],[11,"get_type_id","","",534,[[["self"]],["typeid"]]],[11,"from","","",535,[[["t"]],["t"]]],[11,"into","","",535,[[["self"]],["u"]]],[11,"try_from","","",535,[[["u"]],["result"]]],[11,"borrow","","",535,[[["self"]],["t"]]],[11,"try_into","","",535,[[["self"]],["result"]]],[11,"borrow_mut","","",535,[[["self"]],["t"]]],[11,"get_type_id","","",535,[[["self"]],["typeid"]]],[11,"to_owned","","",522,[[["self"]],["t"]]],[11,"clone_into","","",522,N],[11,"from","","",522,[[["t"]],["t"]]],[11,"into","","",522,[[["self"]],["u"]]],[11,"try_from","","",522,[[["u"]],["result"]]],[11,"borrow","","",522,[[["self"]],["t"]]],[11,"try_into","","",522,[[["self"]],["result"]]],[11,"borrow_mut","","",522,[[["self"]],["t"]]],[11,"get_type_id","","",522,[[["self"]],["typeid"]]],[11,"from","","",523,[[["t"]],["t"]]],[11,"into","","",523,[[["self"]],["u"]]],[11,"try_from","","",523,[[["u"]],["result"]]],[11,"borrow","","",523,[[["self"]],["t"]]],[11,"try_into","","",523,[[["self"]],["result"]]],[11,"borrow_mut","","",523,[[["self"]],["t"]]],[11,"get_type_id","","",523,[[["self"]],["typeid"]]],[11,"from","","",524,[[["t"]],["t"]]],[11,"into","","",524,[[["self"]],["u"]]],[11,"try_from","","",524,[[["u"]],["result"]]],[11,"borrow","","",524,[[["self"]],["t"]]],[11,"try_into","","",524,[[["self"]],["result"]]],[11,"borrow_mut","","",524,[[["self"]],["t"]]],[11,"get_type_id","","",524,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",537,[[["t"]],["t"]]],[11,"into","","",537,[[["self"]],["u"]]],[11,"try_from","","",537,[[["u"]],["result"]]],[11,"borrow","","",537,[[["self"]],["t"]]],[11,"try_into","","",537,[[["self"]],["result"]]],[11,"borrow_mut","","",537,[[["self"]],["t"]]],[11,"get_type_id","","",537,[[["self"]],["typeid"]]],[11,"to_owned","","",526,[[["self"]],["t"]]],[11,"clone_into","","",526,N],[11,"from","","",526,[[["t"]],["t"]]],[11,"into","","",526,[[["self"]],["u"]]],[11,"try_from","","",526,[[["u"]],["result"]]],[11,"borrow","","",526,[[["self"]],["t"]]],[11,"try_into","","",526,[[["self"]],["result"]]],[11,"borrow_mut","","",526,[[["self"]],["t"]]],[11,"get_type_id","","",526,[[["self"]],["typeid"]]],[11,"to_owned","","",527,[[["self"]],["t"]]],[11,"clone_into","","",527,N],[11,"from","","",527,[[["t"]],["t"]]],[11,"into","","",527,[[["self"]],["u"]]],[11,"try_from","","",527,[[["u"]],["result"]]],[11,"borrow","","",527,[[["self"]],["t"]]],[11,"try_into","","",527,[[["self"]],["result"]]],[11,"borrow_mut","","",527,[[["self"]],["t"]]],[11,"get_type_id","","",527,[[["self"]],["typeid"]]],[11,"from","","",528,[[["t"]],["t"]]],[11,"into","","",528,[[["self"]],["u"]]],[11,"try_from","","",528,[[["u"]],["result"]]],[11,"borrow","","",528,[[["self"]],["t"]]],[11,"try_into","","",528,[[["self"]],["result"]]],[11,"borrow_mut","","",528,[[["self"]],["t"]]],[11,"get_type_id","","",528,[[["self"]],["typeid"]]],[11,"from","","",536,[[["t"]],["t"]]],[11,"into","","",536,[[["self"]],["u"]]],[11,"try_from","","",536,[[["u"]],["result"]]],[11,"borrow","","",536,[[["self"]],["t"]]],[11,"try_into","","",536,[[["self"]],["result"]]],[11,"borrow_mut","","",536,[[["self"]],["t"]]],[11,"get_type_id","","",536,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",538,[[["self"]],["t"]]],[11,"clone_into","","",538,N],[11,"from","","",538,[[["t"]],["t"]]],[11,"into","","",538,[[["self"]],["u"]]],[11,"try_from","","",538,[[["u"]],["result"]]],[11,"borrow","","",538,[[["self"]],["t"]]],[11,"try_into","","",538,[[["self"]],["result"]]],[11,"borrow_mut","","",538,[[["self"]],["t"]]],[11,"get_type_id","","",538,[[["self"]],["typeid"]]],[11,"from","","",539,[[["t"]],["t"]]],[11,"into","","",539,[[["self"]],["u"]]],[11,"try_from","","",539,[[["u"]],["result"]]],[11,"borrow","","",539,[[["self"]],["t"]]],[11,"try_into","","",539,[[["self"]],["result"]]],[11,"borrow_mut","","",539,[[["self"]],["t"]]],[11,"get_type_id","","",539,[[["self"]],["typeid"]]],[11,"to_owned","","",529,[[["self"]],["t"]]],[11,"clone_into","","",529,N],[11,"from","","",529,[[["t"]],["t"]]],[11,"into","","",529,[[["self"]],["u"]]],[11,"try_from","","",529,[[["u"]],["result"]]],[11,"borrow","","",529,[[["self"]],["t"]]],[11,"try_into","","",529,[[["self"]],["result"]]],[11,"borrow_mut","","",529,[[["self"]],["t"]]],[11,"get_type_id","","",529,[[["self"]],["typeid"]]],[11,"from","","",530,[[["t"]],["t"]]],[11,"into","","",530,[[["self"]],["u"]]],[11,"try_from","","",530,[[["u"]],["result"]]],[11,"borrow","","",530,[[["self"]],["t"]]],[11,"try_into","","",530,[[["self"]],["result"]]],[11,"borrow_mut","","",530,[[["self"]],["t"]]],[11,"get_type_id","","",530,[[["self"]],["typeid"]]],[11,"from","","",531,[[["t"]],["t"]]],[11,"into","","",531,[[["self"]],["u"]]],[11,"try_from","","",531,[[["u"]],["result"]]],[11,"borrow","","",531,[[["self"]],["t"]]],[11,"try_into","","",531,[[["self"]],["result"]]],[11,"borrow_mut","","",531,[[["self"]],["t"]]],[11,"get_type_id","","",531,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",551,[[["t"]],["t"]]],[11,"into","","",551,[[["self"]],["u"]]],[11,"try_from","","",551,[[["u"]],["result"]]],[11,"borrow","","",551,[[["self"]],["t"]]],[11,"try_into","","",551,[[["self"]],["result"]]],[11,"borrow_mut","","",551,[[["self"]],["t"]]],[11,"get_type_id","","",551,[[["self"]],["typeid"]]],[11,"from","","",540,[[["t"]],["t"]]],[11,"into","","",540,[[["self"]],["u"]]],[11,"try_from","","",540,[[["u"]],["result"]]],[11,"borrow","","",540,[[["self"]],["t"]]],[11,"try_into","","",540,[[["self"]],["result"]]],[11,"borrow_mut","","",540,[[["self"]],["t"]]],[11,"get_type_id","","",540,[[["self"]],["typeid"]]],[11,"from","","",550,[[["t"]],["t"]]],[11,"into","","",550,[[["self"]],["u"]]],[11,"try_from","","",550,[[["u"]],["result"]]],[11,"borrow","","",550,[[["self"]],["t"]]],[11,"try_into","","",550,[[["self"]],["result"]]],[11,"borrow_mut","","",550,[[["self"]],["t"]]],[11,"get_type_id","","",550,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",552,[[["self"]],["t"]]],[11,"clone_into","","",552,N],[11,"from","","",552,[[["t"]],["t"]]],[11,"into","","",552,[[["self"]],["u"]]],[11,"try_from","","",552,[[["u"]],["result"]]],[11,"borrow","","",552,[[["self"]],["t"]]],[11,"try_into","","",552,[[["self"]],["result"]]],[11,"borrow_mut","","",552,[[["self"]],["t"]]],[11,"get_type_id","","",552,[[["self"]],["typeid"]]],[11,"from","","",553,[[["t"]],["t"]]],[11,"into","","",553,[[["self"]],["u"]]],[11,"try_from","","",553,[[["u"]],["result"]]],[11,"borrow","","",553,[[["self"]],["t"]]],[11,"try_into","","",553,[[["self"]],["result"]]],[11,"borrow_mut","","",553,[[["self"]],["t"]]],[11,"get_type_id","","",553,[[["self"]],["typeid"]]],[11,"to_owned","","",542,[[["self"]],["t"]]],[11,"clone_into","","",542,N],[11,"from","","",542,[[["t"]],["t"]]],[11,"into","","",542,[[["self"]],["u"]]],[11,"try_from","","",542,[[["u"]],["result"]]],[11,"borrow","","",542,[[["self"]],["t"]]],[11,"try_into","","",542,[[["self"]],["result"]]],[11,"borrow_mut","","",542,[[["self"]],["t"]]],[11,"get_type_id","","",542,[[["self"]],["typeid"]]],[11,"from","","",543,[[["t"]],["t"]]],[11,"into","","",543,[[["self"]],["u"]]],[11,"try_from","","",543,[[["u"]],["result"]]],[11,"borrow","","",543,[[["self"]],["t"]]],[11,"try_into","","",543,[[["self"]],["result"]]],[11,"borrow_mut","","",543,[[["self"]],["t"]]],[11,"get_type_id","","",543,[[["self"]],["typeid"]]],[11,"from","","",544,[[["t"]],["t"]]],[11,"into","","",544,[[["self"]],["u"]]],[11,"try_from","","",544,[[["u"]],["result"]]],[11,"borrow","","",544,[[["self"]],["t"]]],[11,"try_into","","",544,[[["self"]],["result"]]],[11,"borrow_mut","","",544,[[["self"]],["t"]]],[11,"get_type_id","","",544,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",555,[[["t"]],["t"]]],[11,"into","","",555,[[["self"]],["u"]]],[11,"try_from","","",555,[[["u"]],["result"]]],[11,"borrow","","",555,[[["self"]],["t"]]],[11,"try_into","","",555,[[["self"]],["result"]]],[11,"borrow_mut","","",555,[[["self"]],["t"]]],[11,"get_type_id","","",555,[[["self"]],["typeid"]]],[11,"from","","",546,[[["t"]],["t"]]],[11,"into","","",546,[[["self"]],["u"]]],[11,"try_from","","",546,[[["u"]],["result"]]],[11,"borrow","","",546,[[["self"]],["t"]]],[11,"try_into","","",546,[[["self"]],["result"]]],[11,"borrow_mut","","",546,[[["self"]],["t"]]],[11,"get_type_id","","",546,[[["self"]],["typeid"]]],[11,"from","","",554,[[["t"]],["t"]]],[11,"into","","",554,[[["self"]],["u"]]],[11,"try_from","","",554,[[["u"]],["result"]]],[11,"borrow","","",554,[[["self"]],["t"]]],[11,"try_into","","",554,[[["self"]],["result"]]],[11,"borrow_mut","","",554,[[["self"]],["t"]]],[11,"get_type_id","","",554,[[["self"]],["typeid"]]],[11,"to_owned","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",556,[[["self"]],["t"]]],[11,"clone_into","","",556,N],[11,"from","","",556,[[["t"]],["t"]]],[11,"into","","",556,[[["self"]],["u"]]],[11,"try_from","","",556,[[["u"]],["result"]]],[11,"borrow","","",556,[[["self"]],["t"]]],[11,"try_into","","",556,[[["self"]],["result"]]],[11,"borrow_mut","","",556,[[["self"]],["t"]]],[11,"get_type_id","","",556,[[["self"]],["typeid"]]],[11,"from","","",557,[[["t"]],["t"]]],[11,"into","","",557,[[["self"]],["u"]]],[11,"try_from","","",557,[[["u"]],["result"]]],[11,"borrow","","",557,[[["self"]],["t"]]],[11,"try_into","","",557,[[["self"]],["result"]]],[11,"borrow_mut","","",557,[[["self"]],["t"]]],[11,"get_type_id","","",557,[[["self"]],["typeid"]]],[11,"to_owned","","",547,[[["self"]],["t"]]],[11,"clone_into","","",547,N],[11,"from","","",547,[[["t"]],["t"]]],[11,"into","","",547,[[["self"]],["u"]]],[11,"try_from","","",547,[[["u"]],["result"]]],[11,"borrow","","",547,[[["self"]],["t"]]],[11,"try_into","","",547,[[["self"]],["result"]]],[11,"borrow_mut","","",547,[[["self"]],["t"]]],[11,"get_type_id","","",547,[[["self"]],["typeid"]]],[11,"from","","",548,[[["t"]],["t"]]],[11,"into","","",548,[[["self"]],["u"]]],[11,"try_from","","",548,[[["u"]],["result"]]],[11,"borrow","","",548,[[["self"]],["t"]]],[11,"try_into","","",548,[[["self"]],["result"]]],[11,"borrow_mut","","",548,[[["self"]],["t"]]],[11,"get_type_id","","",548,[[["self"]],["typeid"]]],[11,"from","","",549,[[["t"]],["t"]]],[11,"into","","",549,[[["self"]],["u"]]],[11,"try_from","","",549,[[["u"]],["result"]]],[11,"borrow","","",549,[[["self"]],["t"]]],[11,"try_into","","",549,[[["self"]],["result"]]],[11,"borrow_mut","","",549,[[["self"]],["t"]]],[11,"get_type_id","","",549,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",618,[[["t"]],["t"]]],[11,"into","","",618,[[["self"]],["u"]]],[11,"try_from","","",618,[[["u"]],["result"]]],[11,"borrow","","",618,[[["self"]],["t"]]],[11,"try_into","","",618,[[["self"]],["result"]]],[11,"borrow_mut","","",618,[[["self"]],["t"]]],[11,"get_type_id","","",618,[[["self"]],["typeid"]]],[11,"to_owned","","",558,[[["self"]],["t"]]],[11,"clone_into","","",558,N],[11,"from","","",558,[[["t"]],["t"]]],[11,"into","","",558,[[["self"]],["u"]]],[11,"try_from","","",558,[[["u"]],["result"]]],[11,"borrow","","",558,[[["self"]],["t"]]],[11,"try_into","","",558,[[["self"]],["result"]]],[11,"borrow_mut","","",558,[[["self"]],["t"]]],[11,"get_type_id","","",558,[[["self"]],["typeid"]]],[11,"from","","",559,[[["t"]],["t"]]],[11,"into","","",559,[[["self"]],["u"]]],[11,"try_from","","",559,[[["u"]],["result"]]],[11,"borrow","","",559,[[["self"]],["t"]]],[11,"try_into","","",559,[[["self"]],["result"]]],[11,"borrow_mut","","",559,[[["self"]],["t"]]],[11,"get_type_id","","",559,[[["self"]],["typeid"]]],[11,"from","","",560,[[["t"]],["t"]]],[11,"into","","",560,[[["self"]],["u"]]],[11,"try_from","","",560,[[["u"]],["result"]]],[11,"borrow","","",560,[[["self"]],["t"]]],[11,"try_into","","",560,[[["self"]],["result"]]],[11,"borrow_mut","","",560,[[["self"]],["t"]]],[11,"get_type_id","","",560,[[["self"]],["typeid"]]],[11,"clone","","",558,[[["self"]],["error"]]],[11,"fmt","","",558,[[["self"],["formatter"]],["result"]]],[11,"eq","","",558,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",558,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",558,[[["self"]],["u32"]]],[11,"is_destructor","","",559,[[["self"]],["bool"]]],[11,"opcode","","",559,[[["self"]],["u16"]]],[11,"child","","",559,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",559,N],[11,"into_raw","","",559,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",559,N],[11,"as_raw_c_in","","",559,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",560,[[["self"]],["bool"]]],[11,"opcode","","",560,[[["self"]],["u16"]]],[11,"child","","",560,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",560,N],[11,"into_raw","","",560,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",560,N],[11,"as_raw_c_in","","",560,[[["self"],["f"]],["t"]]],[11,"c_interface","","",618,N],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",619,[[["t"]],["t"]]],[11,"into","","",619,[[["self"]],["u"]]],[11,"try_from","","",619,[[["u"]],["result"]]],[11,"borrow","","",619,[[["self"]],["t"]]],[11,"try_into","","",619,[[["self"]],["result"]]],[11,"borrow_mut","","",619,[[["self"]],["t"]]],[11,"get_type_id","","",619,[[["self"]],["typeid"]]],[11,"to_owned","","",562,[[["self"]],["t"]]],[11,"clone_into","","",562,N],[11,"from","","",562,[[["t"]],["t"]]],[11,"into","","",562,[[["self"]],["u"]]],[11,"try_from","","",562,[[["u"]],["result"]]],[11,"borrow","","",562,[[["self"]],["t"]]],[11,"try_into","","",562,[[["self"]],["result"]]],[11,"borrow_mut","","",562,[[["self"]],["t"]]],[11,"get_type_id","","",562,[[["self"]],["typeid"]]],[11,"from","","",620,[[["t"]],["t"]]],[11,"into","","",620,[[["self"]],["u"]]],[11,"try_from","","",620,[[["u"]],["result"]]],[11,"borrow","","",620,[[["self"]],["t"]]],[11,"try_into","","",620,[[["self"]],["result"]]],[11,"borrow_mut","","",620,[[["self"]],["t"]]],[11,"get_type_id","","",620,[[["self"]],["typeid"]]],[11,"from","","",563,[[["t"]],["t"]]],[11,"into","","",563,[[["self"]],["u"]]],[11,"try_from","","",563,[[["u"]],["result"]]],[11,"borrow","","",563,[[["self"]],["t"]]],[11,"try_into","","",563,[[["self"]],["result"]]],[11,"borrow_mut","","",563,[[["self"]],["t"]]],[11,"get_type_id","","",563,[[["self"]],["typeid"]]],[11,"clone","","",562,[[["self"]],["kind"]]],[11,"fmt","","",562,[[["self"],["formatter"]],["result"]]],[11,"eq","","",562,[[["self"],["kind"]],["bool"]]],[11,"from_raw","","",562,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",562,[[["self"]],["u32"]]],[11,"is_destructor","","",620,[[["self"]],["bool"]]],[11,"opcode","","",620,[[["self"]],["u16"]]],[11,"child","","",620,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",620,N],[11,"into_raw","","",620,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",620,N],[11,"as_raw_c_in","","",620,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",563,[[["self"]],["bool"]]],[11,"opcode","","",563,[[["self"]],["u16"]]],[11,"child","","",563,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",563,N],[11,"into_raw","","",563,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",563,N],[11,"as_raw_c_in","","",563,[[["self"],["f"]],["t"]]],[11,"c_interface","","",619,N],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",621,[[["t"]],["t"]]],[11,"into","","",621,[[["self"]],["u"]]],[11,"try_from","","",621,[[["u"]],["result"]]],[11,"borrow","","",621,[[["self"]],["t"]]],[11,"try_into","","",621,[[["self"]],["result"]]],[11,"borrow_mut","","",621,[[["self"]],["t"]]],[11,"get_type_id","","",621,[[["self"]],["typeid"]]],[11,"to_owned","","",564,[[["self"]],["t"]]],[11,"clone_into","","",564,N],[11,"from","","",564,[[["t"]],["t"]]],[11,"into","","",564,[[["self"]],["u"]]],[11,"try_from","","",564,[[["u"]],["result"]]],[11,"borrow","","",564,[[["self"]],["t"]]],[11,"try_into","","",564,[[["self"]],["result"]]],[11,"borrow_mut","","",564,[[["self"]],["t"]]],[11,"get_type_id","","",564,[[["self"]],["typeid"]]],[11,"from","","",565,[[["t"]],["t"]]],[11,"into","","",565,[[["self"]],["u"]]],[11,"try_from","","",565,[[["u"]],["result"]]],[11,"borrow","","",565,[[["self"]],["t"]]],[11,"try_into","","",565,[[["self"]],["result"]]],[11,"borrow_mut","","",565,[[["self"]],["t"]]],[11,"get_type_id","","",565,[[["self"]],["typeid"]]],[11,"from","","",566,[[["t"]],["t"]]],[11,"into","","",566,[[["self"]],["u"]]],[11,"try_from","","",566,[[["u"]],["result"]]],[11,"borrow","","",566,[[["self"]],["t"]]],[11,"try_into","","",566,[[["self"]],["result"]]],[11,"borrow_mut","","",566,[[["self"]],["t"]]],[11,"get_type_id","","",566,[[["self"]],["typeid"]]],[11,"clone","","",564,[[["self"]],["error"]]],[11,"fmt","","",564,[[["self"],["formatter"]],["result"]]],[11,"eq","","",564,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",564,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",564,[[["self"]],["u32"]]],[11,"is_destructor","","",565,[[["self"]],["bool"]]],[11,"opcode","","",565,[[["self"]],["u16"]]],[11,"child","","",565,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",565,N],[11,"into_raw","","",565,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",565,N],[11,"as_raw_c_in","","",565,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",566,[[["self"]],["bool"]]],[11,"opcode","","",566,[[["self"]],["u16"]]],[11,"child","","",566,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",566,N],[11,"into_raw","","",566,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",566,N],[11,"as_raw_c_in","","",566,[[["self"],["f"]],["t"]]],[11,"c_interface","","",621,N],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",622,[[["t"]],["t"]]],[11,"into","","",622,[[["self"]],["u"]]],[11,"try_from","","",622,[[["u"]],["result"]]],[11,"borrow","","",622,[[["self"]],["t"]]],[11,"try_into","","",622,[[["self"]],["result"]]],[11,"borrow_mut","","",622,[[["self"]],["t"]]],[11,"get_type_id","","",622,[[["self"]],["typeid"]]],[11,"to_owned","","",567,[[["self"]],["t"]]],[11,"clone_into","","",567,N],[11,"from","","",567,[[["t"]],["t"]]],[11,"into","","",567,[[["self"]],["u"]]],[11,"try_from","","",567,[[["u"]],["result"]]],[11,"borrow","","",567,[[["self"]],["t"]]],[11,"try_into","","",567,[[["self"]],["result"]]],[11,"borrow_mut","","",567,[[["self"]],["t"]]],[11,"get_type_id","","",567,[[["self"]],["typeid"]]],[11,"from","","",623,[[["t"]],["t"]]],[11,"into","","",623,[[["self"]],["u"]]],[11,"try_from","","",623,[[["u"]],["result"]]],[11,"borrow","","",623,[[["self"]],["t"]]],[11,"try_into","","",623,[[["self"]],["result"]]],[11,"borrow_mut","","",623,[[["self"]],["t"]]],[11,"get_type_id","","",623,[[["self"]],["typeid"]]],[11,"from","","",568,[[["t"]],["t"]]],[11,"into","","",568,[[["self"]],["u"]]],[11,"try_from","","",568,[[["u"]],["result"]]],[11,"borrow","","",568,[[["self"]],["t"]]],[11,"try_into","","",568,[[["self"]],["result"]]],[11,"borrow_mut","","",568,[[["self"]],["t"]]],[11,"get_type_id","","",568,[[["self"]],["typeid"]]],[11,"clone","","",567,[[["self"]],["kind"]]],[11,"fmt","","",567,[[["self"],["formatter"]],["result"]]],[11,"eq","","",567,[[["self"],["kind"]],["bool"]]],[11,"from_raw","","",567,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",567,[[["self"]],["u32"]]],[11,"is_destructor","","",623,[[["self"]],["bool"]]],[11,"opcode","","",623,[[["self"]],["u16"]]],[11,"child","","",623,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",623,N],[11,"into_raw","","",623,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",623,N],[11,"as_raw_c_in","","",623,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",568,[[["self"]],["bool"]]],[11,"opcode","","",568,[[["self"]],["u16"]]],[11,"child","","",568,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",568,N],[11,"into_raw","","",568,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",568,N],[11,"as_raw_c_in","","",568,[[["self"],["f"]],["t"]]],[11,"c_interface","","",622,N],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",624,[[["t"]],["t"]]],[11,"into","","",624,[[["self"]],["u"]]],[11,"try_from","","",624,[[["u"]],["result"]]],[11,"borrow","","",624,[[["self"]],["t"]]],[11,"try_into","","",624,[[["self"]],["result"]]],[11,"borrow_mut","","",624,[[["self"]],["t"]]],[11,"get_type_id","","",624,[[["self"]],["typeid"]]],[11,"to_owned","","",569,[[["self"]],["t"]]],[11,"clone_into","","",569,N],[11,"from","","",569,[[["t"]],["t"]]],[11,"into","","",569,[[["self"]],["u"]]],[11,"try_from","","",569,[[["u"]],["result"]]],[11,"borrow","","",569,[[["self"]],["t"]]],[11,"try_into","","",569,[[["self"]],["result"]]],[11,"borrow_mut","","",569,[[["self"]],["t"]]],[11,"get_type_id","","",569,[[["self"]],["typeid"]]],[11,"from","","",570,[[["t"]],["t"]]],[11,"into","","",570,[[["self"]],["u"]]],[11,"try_from","","",570,[[["u"]],["result"]]],[11,"borrow","","",570,[[["self"]],["t"]]],[11,"try_into","","",570,[[["self"]],["result"]]],[11,"borrow_mut","","",570,[[["self"]],["t"]]],[11,"get_type_id","","",570,[[["self"]],["typeid"]]],[11,"from","","",571,[[["t"]],["t"]]],[11,"into","","",571,[[["self"]],["u"]]],[11,"try_from","","",571,[[["u"]],["result"]]],[11,"borrow","","",571,[[["self"]],["t"]]],[11,"try_into","","",571,[[["self"]],["result"]]],[11,"borrow_mut","","",571,[[["self"]],["t"]]],[11,"get_type_id","","",571,[[["self"]],["typeid"]]],[11,"clone","","",569,[[["self"]],["error"]]],[11,"fmt","","",569,[[["self"],["formatter"]],["result"]]],[11,"eq","","",569,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",569,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",569,[[["self"]],["u32"]]],[11,"is_destructor","","",570,[[["self"]],["bool"]]],[11,"opcode","","",570,[[["self"]],["u16"]]],[11,"child","","",570,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",570,N],[11,"into_raw","","",570,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",570,N],[11,"as_raw_c_in","","",570,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",571,[[["self"]],["bool"]]],[11,"opcode","","",571,[[["self"]],["u16"]]],[11,"child","","",571,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",571,N],[11,"into_raw","","",571,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",571,N],[11,"as_raw_c_in","","",571,[[["self"],["f"]],["t"]]],[11,"c_interface","","",624,N],[11,"to_owned","wayland_protocols::xdg_shell::client::xdg_positioner","",625,[[["self"]],["t"]]],[11,"clone_into","","",625,N],[11,"from","","",625,[[["t"]],["t"]]],[11,"into","","",625,[[["self"]],["u"]]],[11,"try_from","","",625,[[["u"]],["result"]]],[11,"borrow","","",625,[[["self"]],["t"]]],[11,"try_into","","",625,[[["self"]],["result"]]],[11,"borrow_mut","","",625,[[["self"]],["t"]]],[11,"get_type_id","","",625,[[["self"]],["typeid"]]],[11,"from","","",626,[[["t"]],["t"]]],[11,"into","","",626,[[["self"]],["u"]]],[11,"try_from","","",626,[[["u"]],["result"]]],[11,"borrow","","",626,[[["self"]],["t"]]],[11,"try_into","","",626,[[["self"]],["result"]]],[11,"borrow_mut","","",626,[[["self"]],["t"]]],[11,"get_type_id","","",626,[[["self"]],["typeid"]]],[11,"to_owned","","",573,[[["self"]],["t"]]],[11,"clone_into","","",573,N],[11,"from","","",573,[[["t"]],["t"]]],[11,"into","","",573,[[["self"]],["u"]]],[11,"try_from","","",573,[[["u"]],["result"]]],[11,"borrow","","",573,[[["self"]],["t"]]],[11,"try_into","","",573,[[["self"]],["result"]]],[11,"borrow_mut","","",573,[[["self"]],["t"]]],[11,"get_type_id","","",573,[[["self"]],["typeid"]]],[11,"to_owned","","",574,[[["self"]],["t"]]],[11,"clone_into","","",574,N],[11,"from","","",574,[[["t"]],["t"]]],[11,"into","","",574,[[["self"]],["u"]]],[11,"try_from","","",574,[[["u"]],["result"]]],[11,"borrow","","",574,[[["self"]],["t"]]],[11,"try_into","","",574,[[["self"]],["result"]]],[11,"borrow_mut","","",574,[[["self"]],["t"]]],[11,"get_type_id","","",574,[[["self"]],["typeid"]]],[11,"to_owned","","",575,[[["self"]],["t"]]],[11,"clone_into","","",575,N],[11,"from","","",575,[[["t"]],["t"]]],[11,"into","","",575,[[["self"]],["u"]]],[11,"try_from","","",575,[[["u"]],["result"]]],[11,"borrow","","",575,[[["self"]],["t"]]],[11,"try_into","","",575,[[["self"]],["result"]]],[11,"borrow_mut","","",575,[[["self"]],["t"]]],[11,"get_type_id","","",575,[[["self"]],["typeid"]]],[11,"from","","",576,[[["t"]],["t"]]],[11,"into","","",576,[[["self"]],["u"]]],[11,"try_from","","",576,[[["u"]],["result"]]],[11,"borrow","","",576,[[["self"]],["t"]]],[11,"try_into","","",576,[[["self"]],["result"]]],[11,"borrow_mut","","",576,[[["self"]],["t"]]],[11,"get_type_id","","",576,[[["self"]],["typeid"]]],[11,"from","","",627,[[["t"]],["t"]]],[11,"into","","",627,[[["self"]],["u"]]],[11,"try_from","","",627,[[["u"]],["result"]]],[11,"borrow","","",627,[[["self"]],["t"]]],[11,"try_into","","",627,[[["self"]],["result"]]],[11,"borrow_mut","","",627,[[["self"]],["t"]]],[11,"get_type_id","","",627,[[["self"]],["typeid"]]],[11,"clone","","",573,[[["self"]],["error"]]],[11,"fmt","","",573,[[["self"],["formatter"]],["result"]]],[11,"eq","","",573,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",573,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",573,[[["self"]],["u32"]]],[11,"clone","","",574,[[["self"]],["anchor"]]],[11,"fmt","","",574,[[["self"],["formatter"]],["result"]]],[11,"eq","","",574,[[["self"],["anchor"]],["bool"]]],[11,"from_raw","","",574,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",574,[[["self"]],["u32"]]],[11,"clone","","",575,[[["self"]],["gravity"]]],[11,"fmt","","",575,[[["self"],["formatter"]],["result"]]],[11,"eq","","",575,[[["self"],["gravity"]],["bool"]]],[11,"from_raw","","",575,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",575,[[["self"]],["u32"]]],[11,"eq","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",625,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",625,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",625,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",625,N],[11,"fmt","","",625,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",625,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",625,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",625,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",625,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",625,N],[18,"SlideX","","move along the x axis until unconstrained",625,N],[18,"SlideY","","move along the y axis until unconstrained",625,N],[18,"FlipX","","invert the anchor and gravity on the x axis",625,N],[18,"FlipY","","invert the anchor and gravity on the y axis",625,N],[18,"ResizeX","","horizontally resize the surface",625,N],[18,"ResizeY","","vertically resize the surface",625,N],[11,"empty","","Returns an empty set of flags.",625,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",625,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",625,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",625,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",625,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",625,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",625,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",625,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",625,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",625,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",625,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",625,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",625,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",625,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",625,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",625,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",625,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",625,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",625,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",625,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",625,[[["self"]],["constraintadjustment"]]],[11,"extend","","",625,[[["self"],["t"]]]],[11,"from_iter","","",625,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",625,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",625,[[["self"]],["u32"]]],[11,"is_destructor","","",576,[[["self"]],["bool"]]],[11,"opcode","","",576,[[["self"]],["u16"]]],[11,"child","","",576,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",576,N],[11,"into_raw","","",576,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",576,N],[11,"as_raw_c_in","","",576,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",627,[[["self"]],["bool"]]],[11,"opcode","","",627,[[["self"]],["u16"]]],[11,"child","","",627,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",627,N],[11,"into_raw","","",627,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",627,N],[11,"as_raw_c_in","","",627,[[["self"],["f"]],["t"]]],[11,"c_interface","","",626,N],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",628,[[["t"]],["t"]]],[11,"into","","",628,[[["self"]],["u"]]],[11,"try_from","","",628,[[["u"]],["result"]]],[11,"borrow","","",628,[[["self"]],["t"]]],[11,"try_into","","",628,[[["self"]],["result"]]],[11,"borrow_mut","","",628,[[["self"]],["t"]]],[11,"get_type_id","","",628,[[["self"]],["typeid"]]],[11,"to_owned","","",578,[[["self"]],["t"]]],[11,"clone_into","","",578,N],[11,"from","","",578,[[["t"]],["t"]]],[11,"into","","",578,[[["self"]],["u"]]],[11,"try_from","","",578,[[["u"]],["result"]]],[11,"borrow","","",578,[[["self"]],["t"]]],[11,"try_into","","",578,[[["self"]],["result"]]],[11,"borrow_mut","","",578,[[["self"]],["t"]]],[11,"get_type_id","","",578,[[["self"]],["typeid"]]],[11,"from","","",579,[[["t"]],["t"]]],[11,"into","","",579,[[["self"]],["u"]]],[11,"try_from","","",579,[[["u"]],["result"]]],[11,"borrow","","",579,[[["self"]],["t"]]],[11,"try_into","","",579,[[["self"]],["result"]]],[11,"borrow_mut","","",579,[[["self"]],["t"]]],[11,"get_type_id","","",579,[[["self"]],["typeid"]]],[11,"from","","",580,[[["t"]],["t"]]],[11,"into","","",580,[[["self"]],["u"]]],[11,"try_from","","",580,[[["u"]],["result"]]],[11,"borrow","","",580,[[["self"]],["t"]]],[11,"try_into","","",580,[[["self"]],["result"]]],[11,"borrow_mut","","",580,[[["self"]],["t"]]],[11,"get_type_id","","",580,[[["self"]],["typeid"]]],[11,"clone","","",578,[[["self"]],["error"]]],[11,"fmt","","",578,[[["self"],["formatter"]],["result"]]],[11,"eq","","",578,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",578,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",578,[[["self"]],["u32"]]],[11,"is_destructor","","",579,[[["self"]],["bool"]]],[11,"opcode","","",579,[[["self"]],["u16"]]],[11,"child","","",579,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",579,N],[11,"into_raw","","",579,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",579,N],[11,"as_raw_c_in","","",579,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",580,[[["self"]],["bool"]]],[11,"opcode","","",580,[[["self"]],["u16"]]],[11,"child","","",580,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",580,N],[11,"into_raw","","",580,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",580,N],[11,"as_raw_c_in","","",580,[[["self"],["f"]],["t"]]],[11,"c_interface","","",628,N],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",629,[[["t"]],["t"]]],[11,"into","","",629,[[["self"]],["u"]]],[11,"try_from","","",629,[[["u"]],["result"]]],[11,"borrow","","",629,[[["self"]],["t"]]],[11,"try_into","","",629,[[["self"]],["result"]]],[11,"borrow_mut","","",629,[[["self"]],["t"]]],[11,"get_type_id","","",629,[[["self"]],["typeid"]]],[11,"to_owned","","",582,[[["self"]],["t"]]],[11,"clone_into","","",582,N],[11,"from","","",582,[[["t"]],["t"]]],[11,"into","","",582,[[["self"]],["u"]]],[11,"try_from","","",582,[[["u"]],["result"]]],[11,"borrow","","",582,[[["self"]],["t"]]],[11,"try_into","","",582,[[["self"]],["result"]]],[11,"borrow_mut","","",582,[[["self"]],["t"]]],[11,"get_type_id","","",582,[[["self"]],["typeid"]]],[11,"to_owned","","",583,[[["self"]],["t"]]],[11,"clone_into","","",583,N],[11,"from","","",583,[[["t"]],["t"]]],[11,"into","","",583,[[["self"]],["u"]]],[11,"try_from","","",583,[[["u"]],["result"]]],[11,"borrow","","",583,[[["self"]],["t"]]],[11,"try_into","","",583,[[["self"]],["result"]]],[11,"borrow_mut","","",583,[[["self"]],["t"]]],[11,"get_type_id","","",583,[[["self"]],["typeid"]]],[11,"from","","",584,[[["t"]],["t"]]],[11,"into","","",584,[[["self"]],["u"]]],[11,"try_from","","",584,[[["u"]],["result"]]],[11,"borrow","","",584,[[["self"]],["t"]]],[11,"try_into","","",584,[[["self"]],["result"]]],[11,"borrow_mut","","",584,[[["self"]],["t"]]],[11,"get_type_id","","",584,[[["self"]],["typeid"]]],[11,"from","","",585,[[["t"]],["t"]]],[11,"into","","",585,[[["self"]],["u"]]],[11,"try_from","","",585,[[["u"]],["result"]]],[11,"borrow","","",585,[[["self"]],["t"]]],[11,"try_into","","",585,[[["self"]],["result"]]],[11,"borrow_mut","","",585,[[["self"]],["t"]]],[11,"get_type_id","","",585,[[["self"]],["typeid"]]],[11,"clone","","",582,[[["self"]],["resizeedge"]]],[11,"fmt","","",582,[[["self"],["formatter"]],["result"]]],[11,"eq","","",582,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",582,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",582,[[["self"]],["u32"]]],[11,"clone","","",583,[[["self"]],["state"]]],[11,"fmt","","",583,[[["self"],["formatter"]],["result"]]],[11,"eq","","",583,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",583,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",583,[[["self"]],["u32"]]],[11,"is_destructor","","",584,[[["self"]],["bool"]]],[11,"opcode","","",584,[[["self"]],["u16"]]],[11,"child","","",584,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",584,N],[11,"into_raw","","",584,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",584,N],[11,"as_raw_c_in","","",584,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",585,[[["self"]],["bool"]]],[11,"opcode","","",585,[[["self"]],["u16"]]],[11,"child","","",585,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",585,N],[11,"into_raw","","",585,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",585,N],[11,"as_raw_c_in","","",585,[[["self"],["f"]],["t"]]],[11,"c_interface","","",629,N],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",630,[[["t"]],["t"]]],[11,"into","","",630,[[["self"]],["u"]]],[11,"try_from","","",630,[[["u"]],["result"]]],[11,"borrow","","",630,[[["self"]],["t"]]],[11,"try_into","","",630,[[["self"]],["result"]]],[11,"borrow_mut","","",630,[[["self"]],["t"]]],[11,"get_type_id","","",630,[[["self"]],["typeid"]]],[11,"to_owned","","",587,[[["self"]],["t"]]],[11,"clone_into","","",587,N],[11,"from","","",587,[[["t"]],["t"]]],[11,"into","","",587,[[["self"]],["u"]]],[11,"try_from","","",587,[[["u"]],["result"]]],[11,"borrow","","",587,[[["self"]],["t"]]],[11,"try_into","","",587,[[["self"]],["result"]]],[11,"borrow_mut","","",587,[[["self"]],["t"]]],[11,"get_type_id","","",587,[[["self"]],["typeid"]]],[11,"from","","",588,[[["t"]],["t"]]],[11,"into","","",588,[[["self"]],["u"]]],[11,"try_from","","",588,[[["u"]],["result"]]],[11,"borrow","","",588,[[["self"]],["t"]]],[11,"try_into","","",588,[[["self"]],["result"]]],[11,"borrow_mut","","",588,[[["self"]],["t"]]],[11,"get_type_id","","",588,[[["self"]],["typeid"]]],[11,"from","","",589,[[["t"]],["t"]]],[11,"into","","",589,[[["self"]],["u"]]],[11,"try_from","","",589,[[["u"]],["result"]]],[11,"borrow","","",589,[[["self"]],["t"]]],[11,"try_into","","",589,[[["self"]],["result"]]],[11,"borrow_mut","","",589,[[["self"]],["t"]]],[11,"get_type_id","","",589,[[["self"]],["typeid"]]],[11,"clone","","",587,[[["self"]],["error"]]],[11,"fmt","","",587,[[["self"],["formatter"]],["result"]]],[11,"eq","","",587,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",587,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",587,[[["self"]],["u32"]]],[11,"is_destructor","","",588,[[["self"]],["bool"]]],[11,"opcode","","",588,[[["self"]],["u16"]]],[11,"child","","",588,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",588,N],[11,"into_raw","","",588,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",588,N],[11,"as_raw_c_in","","",588,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",589,[[["self"]],["bool"]]],[11,"opcode","","",589,[[["self"]],["u16"]]],[11,"child","","",589,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",589,N],[11,"into_raw","","",589,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",589,N],[11,"as_raw_c_in","","",589,[[["self"],["f"]],["t"]]],[11,"c_interface","","",630,N],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",631,[[["t"]],["t"]]],[11,"into","","",631,[[["self"]],["u"]]],[11,"try_from","","",631,[[["u"]],["result"]]],[11,"borrow","","",631,[[["self"]],["t"]]],[11,"try_into","","",631,[[["self"]],["result"]]],[11,"borrow_mut","","",631,[[["self"]],["t"]]],[11,"get_type_id","","",631,[[["self"]],["typeid"]]],[11,"to_owned","","",591,[[["self"]],["t"]]],[11,"clone_into","","",591,N],[11,"from","","",591,[[["t"]],["t"]]],[11,"into","","",591,[[["self"]],["u"]]],[11,"try_from","","",591,[[["u"]],["result"]]],[11,"borrow","","",591,[[["self"]],["t"]]],[11,"try_into","","",591,[[["self"]],["result"]]],[11,"borrow_mut","","",591,[[["self"]],["t"]]],[11,"get_type_id","","",591,[[["self"]],["typeid"]]],[11,"from","","",592,[[["t"]],["t"]]],[11,"into","","",592,[[["self"]],["u"]]],[11,"try_from","","",592,[[["u"]],["result"]]],[11,"borrow","","",592,[[["self"]],["t"]]],[11,"try_into","","",592,[[["self"]],["result"]]],[11,"borrow_mut","","",592,[[["self"]],["t"]]],[11,"get_type_id","","",592,[[["self"]],["typeid"]]],[11,"from","","",593,[[["t"]],["t"]]],[11,"into","","",593,[[["self"]],["u"]]],[11,"try_from","","",593,[[["u"]],["result"]]],[11,"borrow","","",593,[[["self"]],["t"]]],[11,"try_into","","",593,[[["self"]],["result"]]],[11,"borrow_mut","","",593,[[["self"]],["t"]]],[11,"get_type_id","","",593,[[["self"]],["typeid"]]],[11,"clone","","",591,[[["self"]],["error"]]],[11,"fmt","","",591,[[["self"],["formatter"]],["result"]]],[11,"eq","","",591,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",591,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",591,[[["self"]],["u32"]]],[11,"is_destructor","","",592,[[["self"]],["bool"]]],[11,"opcode","","",592,[[["self"]],["u16"]]],[11,"child","","",592,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",592,N],[11,"into_raw","","",592,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",592,N],[11,"as_raw_c_in","","",592,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",593,[[["self"]],["bool"]]],[11,"opcode","","",593,[[["self"]],["u16"]]],[11,"child","","",593,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",593,N],[11,"into_raw","","",593,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",593,N],[11,"as_raw_c_in","","",593,[[["self"],["f"]],["t"]]],[11,"c_interface","","",631,N],[11,"to_owned","wayland_protocols::xdg_shell::server::xdg_positioner","",632,[[["self"]],["t"]]],[11,"clone_into","","",632,N],[11,"from","","",632,[[["t"]],["t"]]],[11,"into","","",632,[[["self"]],["u"]]],[11,"try_from","","",632,[[["u"]],["result"]]],[11,"borrow","","",632,[[["self"]],["t"]]],[11,"try_into","","",632,[[["self"]],["result"]]],[11,"borrow_mut","","",632,[[["self"]],["t"]]],[11,"get_type_id","","",632,[[["self"]],["typeid"]]],[11,"from","","",633,[[["t"]],["t"]]],[11,"into","","",633,[[["self"]],["u"]]],[11,"try_from","","",633,[[["u"]],["result"]]],[11,"borrow","","",633,[[["self"]],["t"]]],[11,"try_into","","",633,[[["self"]],["result"]]],[11,"borrow_mut","","",633,[[["self"]],["t"]]],[11,"get_type_id","","",633,[[["self"]],["typeid"]]],[11,"to_owned","","",594,[[["self"]],["t"]]],[11,"clone_into","","",594,N],[11,"from","","",594,[[["t"]],["t"]]],[11,"into","","",594,[[["self"]],["u"]]],[11,"try_from","","",594,[[["u"]],["result"]]],[11,"borrow","","",594,[[["self"]],["t"]]],[11,"try_into","","",594,[[["self"]],["result"]]],[11,"borrow_mut","","",594,[[["self"]],["t"]]],[11,"get_type_id","","",594,[[["self"]],["typeid"]]],[11,"to_owned","","",595,[[["self"]],["t"]]],[11,"clone_into","","",595,N],[11,"from","","",595,[[["t"]],["t"]]],[11,"into","","",595,[[["self"]],["u"]]],[11,"try_from","","",595,[[["u"]],["result"]]],[11,"borrow","","",595,[[["self"]],["t"]]],[11,"try_into","","",595,[[["self"]],["result"]]],[11,"borrow_mut","","",595,[[["self"]],["t"]]],[11,"get_type_id","","",595,[[["self"]],["typeid"]]],[11,"to_owned","","",596,[[["self"]],["t"]]],[11,"clone_into","","",596,N],[11,"from","","",596,[[["t"]],["t"]]],[11,"into","","",596,[[["self"]],["u"]]],[11,"try_from","","",596,[[["u"]],["result"]]],[11,"borrow","","",596,[[["self"]],["t"]]],[11,"try_into","","",596,[[["self"]],["result"]]],[11,"borrow_mut","","",596,[[["self"]],["t"]]],[11,"get_type_id","","",596,[[["self"]],["typeid"]]],[11,"from","","",597,[[["t"]],["t"]]],[11,"into","","",597,[[["self"]],["u"]]],[11,"try_from","","",597,[[["u"]],["result"]]],[11,"borrow","","",597,[[["self"]],["t"]]],[11,"try_into","","",597,[[["self"]],["result"]]],[11,"borrow_mut","","",597,[[["self"]],["t"]]],[11,"get_type_id","","",597,[[["self"]],["typeid"]]],[11,"from","","",634,[[["t"]],["t"]]],[11,"into","","",634,[[["self"]],["u"]]],[11,"try_from","","",634,[[["u"]],["result"]]],[11,"borrow","","",634,[[["self"]],["t"]]],[11,"try_into","","",634,[[["self"]],["result"]]],[11,"borrow_mut","","",634,[[["self"]],["t"]]],[11,"get_type_id","","",634,[[["self"]],["typeid"]]],[11,"clone","","",594,[[["self"]],["error"]]],[11,"fmt","","",594,[[["self"],["formatter"]],["result"]]],[11,"eq","","",594,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",594,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",594,[[["self"]],["u32"]]],[11,"clone","","",595,[[["self"]],["anchor"]]],[11,"fmt","","",595,[[["self"],["formatter"]],["result"]]],[11,"eq","","",595,[[["self"],["anchor"]],["bool"]]],[11,"from_raw","","",595,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",595,[[["self"]],["u32"]]],[11,"clone","","",596,[[["self"]],["gravity"]]],[11,"fmt","","",596,[[["self"],["formatter"]],["result"]]],[11,"eq","","",596,[[["self"],["gravity"]],["bool"]]],[11,"from_raw","","",596,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",596,[[["self"]],["u32"]]],[11,"eq","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",632,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",632,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",632,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",632,N],[11,"fmt","","",632,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",632,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",632,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",632,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",632,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",632,N],[18,"SlideX","","move along the x axis until unconstrained",632,N],[18,"SlideY","","move along the y axis until unconstrained",632,N],[18,"FlipX","","invert the anchor and gravity on the x axis",632,N],[18,"FlipY","","invert the anchor and gravity on the y axis",632,N],[18,"ResizeX","","horizontally resize the surface",632,N],[18,"ResizeY","","vertically resize the surface",632,N],[11,"empty","","Returns an empty set of flags.",632,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",632,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",632,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",632,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",632,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",632,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",632,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",632,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",632,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",632,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",632,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",632,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",632,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",632,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",632,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",632,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",632,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",632,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",632,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",632,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",632,[[["self"]],["constraintadjustment"]]],[11,"extend","","",632,[[["self"],["t"]]]],[11,"from_iter","","",632,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",632,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",632,[[["self"]],["u32"]]],[11,"is_destructor","","",597,[[["self"]],["bool"]]],[11,"opcode","","",597,[[["self"]],["u16"]]],[11,"child","","",597,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",597,N],[11,"into_raw","","",597,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",597,N],[11,"as_raw_c_in","","",597,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",634,[[["self"]],["bool"]]],[11,"opcode","","",634,[[["self"]],["u16"]]],[11,"child","","",634,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",634,N],[11,"into_raw","","",634,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",634,N],[11,"as_raw_c_in","","",634,[[["self"],["f"]],["t"]]],[11,"c_interface","","",633,N],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",635,[[["t"]],["t"]]],[11,"into","","",635,[[["self"]],["u"]]],[11,"try_from","","",635,[[["u"]],["result"]]],[11,"borrow","","",635,[[["self"]],["t"]]],[11,"try_into","","",635,[[["self"]],["result"]]],[11,"borrow_mut","","",635,[[["self"]],["t"]]],[11,"get_type_id","","",635,[[["self"]],["typeid"]]],[11,"to_owned","","",598,[[["self"]],["t"]]],[11,"clone_into","","",598,N],[11,"from","","",598,[[["t"]],["t"]]],[11,"into","","",598,[[["self"]],["u"]]],[11,"try_from","","",598,[[["u"]],["result"]]],[11,"borrow","","",598,[[["self"]],["t"]]],[11,"try_into","","",598,[[["self"]],["result"]]],[11,"borrow_mut","","",598,[[["self"]],["t"]]],[11,"get_type_id","","",598,[[["self"]],["typeid"]]],[11,"from","","",599,[[["t"]],["t"]]],[11,"into","","",599,[[["self"]],["u"]]],[11,"try_from","","",599,[[["u"]],["result"]]],[11,"borrow","","",599,[[["self"]],["t"]]],[11,"try_into","","",599,[[["self"]],["result"]]],[11,"borrow_mut","","",599,[[["self"]],["t"]]],[11,"get_type_id","","",599,[[["self"]],["typeid"]]],[11,"from","","",600,[[["t"]],["t"]]],[11,"into","","",600,[[["self"]],["u"]]],[11,"try_from","","",600,[[["u"]],["result"]]],[11,"borrow","","",600,[[["self"]],["t"]]],[11,"try_into","","",600,[[["self"]],["result"]]],[11,"borrow_mut","","",600,[[["self"]],["t"]]],[11,"get_type_id","","",600,[[["self"]],["typeid"]]],[11,"clone","","",598,[[["self"]],["error"]]],[11,"fmt","","",598,[[["self"],["formatter"]],["result"]]],[11,"eq","","",598,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",598,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",598,[[["self"]],["u32"]]],[11,"is_destructor","","",599,[[["self"]],["bool"]]],[11,"opcode","","",599,[[["self"]],["u16"]]],[11,"child","","",599,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",599,N],[11,"into_raw","","",599,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",599,N],[11,"as_raw_c_in","","",599,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",600,[[["self"]],["bool"]]],[11,"opcode","","",600,[[["self"]],["u16"]]],[11,"child","","",600,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",600,N],[11,"into_raw","","",600,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",600,N],[11,"as_raw_c_in","","",600,[[["self"],["f"]],["t"]]],[11,"c_interface","","",635,N],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",636,[[["t"]],["t"]]],[11,"into","","",636,[[["self"]],["u"]]],[11,"try_from","","",636,[[["u"]],["result"]]],[11,"borrow","","",636,[[["self"]],["t"]]],[11,"try_into","","",636,[[["self"]],["result"]]],[11,"borrow_mut","","",636,[[["self"]],["t"]]],[11,"get_type_id","","",636,[[["self"]],["typeid"]]],[11,"to_owned","","",601,[[["self"]],["t"]]],[11,"clone_into","","",601,N],[11,"from","","",601,[[["t"]],["t"]]],[11,"into","","",601,[[["self"]],["u"]]],[11,"try_from","","",601,[[["u"]],["result"]]],[11,"borrow","","",601,[[["self"]],["t"]]],[11,"try_into","","",601,[[["self"]],["result"]]],[11,"borrow_mut","","",601,[[["self"]],["t"]]],[11,"get_type_id","","",601,[[["self"]],["typeid"]]],[11,"to_owned","","",602,[[["self"]],["t"]]],[11,"clone_into","","",602,N],[11,"from","","",602,[[["t"]],["t"]]],[11,"into","","",602,[[["self"]],["u"]]],[11,"try_from","","",602,[[["u"]],["result"]]],[11,"borrow","","",602,[[["self"]],["t"]]],[11,"try_into","","",602,[[["self"]],["result"]]],[11,"borrow_mut","","",602,[[["self"]],["t"]]],[11,"get_type_id","","",602,[[["self"]],["typeid"]]],[11,"from","","",603,[[["t"]],["t"]]],[11,"into","","",603,[[["self"]],["u"]]],[11,"try_from","","",603,[[["u"]],["result"]]],[11,"borrow","","",603,[[["self"]],["t"]]],[11,"try_into","","",603,[[["self"]],["result"]]],[11,"borrow_mut","","",603,[[["self"]],["t"]]],[11,"get_type_id","","",603,[[["self"]],["typeid"]]],[11,"from","","",604,[[["t"]],["t"]]],[11,"into","","",604,[[["self"]],["u"]]],[11,"try_from","","",604,[[["u"]],["result"]]],[11,"borrow","","",604,[[["self"]],["t"]]],[11,"try_into","","",604,[[["self"]],["result"]]],[11,"borrow_mut","","",604,[[["self"]],["t"]]],[11,"get_type_id","","",604,[[["self"]],["typeid"]]],[11,"clone","","",601,[[["self"]],["resizeedge"]]],[11,"fmt","","",601,[[["self"],["formatter"]],["result"]]],[11,"eq","","",601,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",601,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",601,[[["self"]],["u32"]]],[11,"clone","","",602,[[["self"]],["state"]]],[11,"fmt","","",602,[[["self"],["formatter"]],["result"]]],[11,"eq","","",602,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",602,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",602,[[["self"]],["u32"]]],[11,"is_destructor","","",603,[[["self"]],["bool"]]],[11,"opcode","","",603,[[["self"]],["u16"]]],[11,"child","","",603,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",603,N],[11,"into_raw","","",603,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",603,N],[11,"as_raw_c_in","","",603,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",604,[[["self"]],["bool"]]],[11,"opcode","","",604,[[["self"]],["u16"]]],[11,"child","","",604,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",604,N],[11,"into_raw","","",604,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",604,N],[11,"as_raw_c_in","","",604,[[["self"],["f"]],["t"]]],[11,"c_interface","","",636,N],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",637,[[["t"]],["t"]]],[11,"into","","",637,[[["self"]],["u"]]],[11,"try_from","","",637,[[["u"]],["result"]]],[11,"borrow","","",637,[[["self"]],["t"]]],[11,"try_into","","",637,[[["self"]],["result"]]],[11,"borrow_mut","","",637,[[["self"]],["t"]]],[11,"get_type_id","","",637,[[["self"]],["typeid"]]],[11,"to_owned","","",605,[[["self"]],["t"]]],[11,"clone_into","","",605,N],[11,"from","","",605,[[["t"]],["t"]]],[11,"into","","",605,[[["self"]],["u"]]],[11,"try_from","","",605,[[["u"]],["result"]]],[11,"borrow","","",605,[[["self"]],["t"]]],[11,"try_into","","",605,[[["self"]],["result"]]],[11,"borrow_mut","","",605,[[["self"]],["t"]]],[11,"get_type_id","","",605,[[["self"]],["typeid"]]],[11,"from","","",606,[[["t"]],["t"]]],[11,"into","","",606,[[["self"]],["u"]]],[11,"try_from","","",606,[[["u"]],["result"]]],[11,"borrow","","",606,[[["self"]],["t"]]],[11,"try_into","","",606,[[["self"]],["result"]]],[11,"borrow_mut","","",606,[[["self"]],["t"]]],[11,"get_type_id","","",606,[[["self"]],["typeid"]]],[11,"from","","",607,[[["t"]],["t"]]],[11,"into","","",607,[[["self"]],["u"]]],[11,"try_from","","",607,[[["u"]],["result"]]],[11,"borrow","","",607,[[["self"]],["t"]]],[11,"try_into","","",607,[[["self"]],["result"]]],[11,"borrow_mut","","",607,[[["self"]],["t"]]],[11,"get_type_id","","",607,[[["self"]],["typeid"]]],[11,"clone","","",605,[[["self"]],["error"]]],[11,"fmt","","",605,[[["self"],["formatter"]],["result"]]],[11,"eq","","",605,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",605,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",605,[[["self"]],["u32"]]],[11,"is_destructor","","",606,[[["self"]],["bool"]]],[11,"opcode","","",606,[[["self"]],["u16"]]],[11,"child","","",606,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",606,N],[11,"into_raw","","",606,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",606,N],[11,"as_raw_c_in","","",606,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",607,[[["self"]],["bool"]]],[11,"opcode","","",607,[[["self"]],["u16"]]],[11,"child","","",607,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",607,N],[11,"into_raw","","",607,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",607,N],[11,"as_raw_c_in","","",607,[[["self"],["f"]],["t"]]],[11,"c_interface","","",637,N],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",638,[[["t"]],["t"]]],[11,"into","","",638,[[["self"]],["u"]]],[11,"try_from","","",638,[[["u"]],["result"]]],[11,"borrow","","",638,[[["self"]],["t"]]],[11,"try_into","","",638,[[["self"]],["result"]]],[11,"borrow_mut","","",638,[[["self"]],["t"]]],[11,"get_type_id","","",638,[[["self"]],["typeid"]]],[11,"to_owned","","",608,[[["self"]],["t"]]],[11,"clone_into","","",608,N],[11,"from","","",608,[[["t"]],["t"]]],[11,"into","","",608,[[["self"]],["u"]]],[11,"try_from","","",608,[[["u"]],["result"]]],[11,"borrow","","",608,[[["self"]],["t"]]],[11,"try_into","","",608,[[["self"]],["result"]]],[11,"borrow_mut","","",608,[[["self"]],["t"]]],[11,"get_type_id","","",608,[[["self"]],["typeid"]]],[11,"from","","",609,[[["t"]],["t"]]],[11,"into","","",609,[[["self"]],["u"]]],[11,"try_from","","",609,[[["u"]],["result"]]],[11,"borrow","","",609,[[["self"]],["t"]]],[11,"try_into","","",609,[[["self"]],["result"]]],[11,"borrow_mut","","",609,[[["self"]],["t"]]],[11,"get_type_id","","",609,[[["self"]],["typeid"]]],[11,"from","","",639,[[["t"]],["t"]]],[11,"into","","",639,[[["self"]],["u"]]],[11,"try_from","","",639,[[["u"]],["result"]]],[11,"borrow","","",639,[[["self"]],["t"]]],[11,"try_into","","",639,[[["self"]],["result"]]],[11,"borrow_mut","","",639,[[["self"]],["t"]]],[11,"get_type_id","","",639,[[["self"]],["typeid"]]],[11,"clone","","",608,[[["self"]],["error"]]],[11,"fmt","","",608,[[["self"],["formatter"]],["result"]]],[11,"eq","","",608,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",608,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",608,[[["self"]],["u32"]]],[11,"is_destructor","","",609,[[["self"]],["bool"]]],[11,"opcode","","",609,[[["self"]],["u16"]]],[11,"child","","",609,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",609,N],[11,"into_raw","","",609,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",609,N],[11,"as_raw_c_in","","",609,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",639,[[["self"]],["bool"]]],[11,"opcode","","",639,[[["self"]],["u16"]]],[11,"child","","",639,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",639,N],[11,"into_raw","","",639,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",639,N],[11,"as_raw_c_in","","",639,[[["self"],["f"]],["t"]]],[11,"c_interface","","",638,N],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",640,[[["t"]],["t"]]],[11,"into","","",640,[[["self"]],["u"]]],[11,"try_from","","",640,[[["u"]],["result"]]],[11,"borrow","","",640,[[["self"]],["t"]]],[11,"try_into","","",640,[[["self"]],["result"]]],[11,"borrow_mut","","",640,[[["self"]],["t"]]],[11,"get_type_id","","",640,[[["self"]],["typeid"]]],[11,"to_owned","","",611,[[["self"]],["t"]]],[11,"clone_into","","",611,N],[11,"from","","",611,[[["t"]],["t"]]],[11,"into","","",611,[[["self"]],["u"]]],[11,"try_from","","",611,[[["u"]],["result"]]],[11,"borrow","","",611,[[["self"]],["t"]]],[11,"try_into","","",611,[[["self"]],["result"]]],[11,"borrow_mut","","",611,[[["self"]],["t"]]],[11,"get_type_id","","",611,[[["self"]],["typeid"]]],[11,"from","","",612,[[["t"]],["t"]]],[11,"into","","",612,[[["self"]],["u"]]],[11,"try_from","","",612,[[["u"]],["result"]]],[11,"borrow","","",612,[[["self"]],["t"]]],[11,"try_into","","",612,[[["self"]],["result"]]],[11,"borrow_mut","","",612,[[["self"]],["t"]]],[11,"get_type_id","","",612,[[["self"]],["typeid"]]],[11,"from","","",641,[[["t"]],["t"]]],[11,"into","","",641,[[["self"]],["u"]]],[11,"try_from","","",641,[[["u"]],["result"]]],[11,"borrow","","",641,[[["self"]],["t"]]],[11,"try_into","","",641,[[["self"]],["result"]]],[11,"borrow_mut","","",641,[[["self"]],["t"]]],[11,"get_type_id","","",641,[[["self"]],["typeid"]]],[11,"clone","","",611,[[["self"]],["error"]]],[11,"fmt","","",611,[[["self"],["formatter"]],["result"]]],[11,"eq","","",611,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",611,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",611,[[["self"]],["u32"]]],[11,"is_destructor","","",612,[[["self"]],["bool"]]],[11,"opcode","","",612,[[["self"]],["u16"]]],[11,"child","","",612,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",612,N],[11,"into_raw","","",612,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",612,N],[11,"as_raw_c_in","","",612,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",641,[[["self"]],["bool"]]],[11,"opcode","","",641,[[["self"]],["u16"]]],[11,"child","","",641,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",641,N],[11,"into_raw","","",641,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",641,N],[11,"as_raw_c_in","","",641,[[["self"],["f"]],["t"]]],[11,"c_interface","","",640,N],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",642,[[["t"]],["t"]]],[11,"into","","",642,[[["self"]],["u"]]],[11,"try_from","","",642,[[["u"]],["result"]]],[11,"borrow","","",642,[[["self"]],["t"]]],[11,"try_into","","",642,[[["self"]],["result"]]],[11,"borrow_mut","","",642,[[["self"]],["t"]]],[11,"get_type_id","","",642,[[["self"]],["typeid"]]],[11,"to_owned","","",614,[[["self"]],["t"]]],[11,"clone_into","","",614,N],[11,"from","","",614,[[["t"]],["t"]]],[11,"into","","",614,[[["self"]],["u"]]],[11,"try_from","","",614,[[["u"]],["result"]]],[11,"borrow","","",614,[[["self"]],["t"]]],[11,"try_into","","",614,[[["self"]],["result"]]],[11,"borrow_mut","","",614,[[["self"]],["t"]]],[11,"get_type_id","","",614,[[["self"]],["typeid"]]],[11,"from","","",615,[[["t"]],["t"]]],[11,"into","","",615,[[["self"]],["u"]]],[11,"try_from","","",615,[[["u"]],["result"]]],[11,"borrow","","",615,[[["self"]],["t"]]],[11,"try_into","","",615,[[["self"]],["result"]]],[11,"borrow_mut","","",615,[[["self"]],["t"]]],[11,"get_type_id","","",615,[[["self"]],["typeid"]]],[11,"from","","",643,[[["t"]],["t"]]],[11,"into","","",643,[[["self"]],["u"]]],[11,"try_from","","",643,[[["u"]],["result"]]],[11,"borrow","","",643,[[["self"]],["t"]]],[11,"try_into","","",643,[[["self"]],["result"]]],[11,"borrow_mut","","",643,[[["self"]],["t"]]],[11,"get_type_id","","",643,[[["self"]],["typeid"]]],[11,"clone","","",614,[[["self"]],["error"]]],[11,"fmt","","",614,[[["self"],["formatter"]],["result"]]],[11,"eq","","",614,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",614,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",614,[[["self"]],["u32"]]],[11,"is_destructor","","",615,[[["self"]],["bool"]]],[11,"opcode","","",615,[[["self"]],["u16"]]],[11,"child","","",615,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",615,N],[11,"into_raw","","",615,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",615,N],[11,"as_raw_c_in","","",615,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",643,[[["self"]],["bool"]]],[11,"opcode","","",643,[[["self"]],["u16"]]],[11,"child","","",643,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",643,N],[11,"into_raw","","",643,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",643,N],[11,"as_raw_c_in","","",643,[[["self"],["f"]],["t"]]],[11,"c_interface","","",642,N],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",644,[[["t"]],["t"]]],[11,"into","","",644,[[["self"]],["u"]]],[11,"try_from","","",644,[[["u"]],["result"]]],[11,"borrow","","",644,[[["self"]],["t"]]],[11,"try_into","","",644,[[["self"]],["result"]]],[11,"borrow_mut","","",644,[[["self"]],["t"]]],[11,"get_type_id","","",644,[[["self"]],["typeid"]]],[11,"to_owned","","",616,[[["self"]],["t"]]],[11,"clone_into","","",616,N],[11,"from","","",616,[[["t"]],["t"]]],[11,"into","","",616,[[["self"]],["u"]]],[11,"try_from","","",616,[[["u"]],["result"]]],[11,"borrow","","",616,[[["self"]],["t"]]],[11,"try_into","","",616,[[["self"]],["result"]]],[11,"borrow_mut","","",616,[[["self"]],["t"]]],[11,"get_type_id","","",616,[[["self"]],["typeid"]]],[11,"from","","",617,[[["t"]],["t"]]],[11,"into","","",617,[[["self"]],["u"]]],[11,"try_from","","",617,[[["u"]],["result"]]],[11,"borrow","","",617,[[["self"]],["t"]]],[11,"try_into","","",617,[[["self"]],["result"]]],[11,"borrow_mut","","",617,[[["self"]],["t"]]],[11,"get_type_id","","",617,[[["self"]],["typeid"]]],[11,"from","","",645,[[["t"]],["t"]]],[11,"into","","",645,[[["self"]],["u"]]],[11,"try_from","","",645,[[["u"]],["result"]]],[11,"borrow","","",645,[[["self"]],["t"]]],[11,"try_into","","",645,[[["self"]],["result"]]],[11,"borrow_mut","","",645,[[["self"]],["t"]]],[11,"get_type_id","","",645,[[["self"]],["typeid"]]],[11,"clone","","",616,[[["self"]],["error"]]],[11,"fmt","","",616,[[["self"],["formatter"]],["result"]]],[11,"eq","","",616,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",616,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",616,[[["self"]],["u32"]]],[11,"is_destructor","","",617,[[["self"]],["bool"]]],[11,"opcode","","",617,[[["self"]],["u16"]]],[11,"child","","",617,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",617,N],[11,"into_raw","","",617,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",617,N],[11,"as_raw_c_in","","",617,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",645,[[["self"]],["bool"]]],[11,"opcode","","",645,[[["self"]],["u16"]]],[11,"child","","",645,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",645,N],[11,"into_raw","","",645,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",645,N],[11,"as_raw_c_in","","",645,[[["self"],["f"]],["t"]]],[11,"c_interface","","",644,N]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"Position"],[4,"Request"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[4,"Request"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[3,"ZwlrExportDmabufFrameV1"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[3,"ZwlrExportDmabufFrameV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[3,"ZwlrGammaControlV1"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[3,"ZwlrGammaControlV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Error"],[4,"Layer"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Layer"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwlrLayerShellV1"],[3,"Anchor"],[3,"ZwlrLayerSurfaceV1"],[4,"Event"],[3,"ZwlrLayerShellV1"],[3,"Anchor"],[3,"ZwlrLayerSurfaceV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]};
searchIndex["wayland_scanner"]={"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",N,N],[13,"Client","","wayland client applications",0,N],[13,"Server","","wayland compositors",0,N],[5,"generate_c_interfaces","","Generate the interfaces for a protocol",N,[[["p1"],["p2"]]]],[5,"generate_rust_code","","Generate the code for a protocol using the Rust implementation",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_code","","Generate the code for a protocol using the C system libs",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",N,[[["p1"],["p2"]]]],[5,"generate_rust_code_streams","","Generate the code for a protocol from/to IO streams using the rust implementation",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_code_streams","","Generate the code for a protocol from/to IO streams using the C system libs",N,[[["p1"],["p2"],["side"]]]],[11,"clone","","",0,[[["self"]],["side"]]],[11,"eq","","",0,[[["self"],["side"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"]={"doc":"Server-side Wayland connector","items":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[3,"AnonymousObject","","Anonymous interface",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[10,"c_interface","","Pointer to the C representation of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,N],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Client","","A handle to a client connected to your server",N,N],[3,"Display","","The wayland display",N,N],[3,"DisplayToken","","A token that is required for providing non-Send implementations to resources",N,N],[3,"Global","","A handle to a global object",N,N],[3,"NewResource","","A newly-created resource that needs implementation",N,N],[3,"Resource","","An handle to a wayland resource",N,N],[4,"ResourceMap","","A handle to the object map internal to the lib state",N,N],[11,"clone","","",2,[[["self"]],["client"]]],[11,"from_ptr","","Create a client from a `wayland-server.so` pointer",2,N],[11,"c_ptr","","Retrieve a pointer to the underlying `wl_client` of `wayland-server.so`",2,N],[11,"alive","","Check whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Check whether this client handle refers to the same client as an other",2,[[["self"],["client"]],["bool"]]],[11,"flush","","Flush the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Access the map handling user data associated to this client",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Add a destructor for this client",2,[[["self"],["f"]]]],[11,"create_resource","","Create a new resource for this client",2,[[["self"],["u32"]],["option",["newresource"]]]],[11,"clone","","",3,[[["self"]],["displaytoken"]]],[11,"new","","Create a new display",4,[[["loophandle"]],["display"]]],[11,"get_token","","Get a `DisplayToken` for make non-send implementations",4,[[["self"]],["displaytoken"]]],[11,"create_global","","Create a new global object",4,[[["self"],["u32"],["f"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a filter",4,[[["self"],["u32"],["f1"],["f2"]],["global"]]],[11,"flush_clients","","Flush events to the clients",4,[[["self"]]]],[11,"add_socket","","Add a listening socket to this display",4,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",4,[[["self"]],["ioresult",["osstring"]]]],[11,"add_socket_from","","Add existing listening socket to this display",4,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",4,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an already-existing connected Fd",4,[[["self"],["rawfd"]],["client"]]],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",4,N],[11,"destroy","","Destroy the associated global object.",5,[[["self"]]]],[11,"eq","","",6,[[["self"],["resource"]],["bool"]]],[11,"send","","Send an event through this object",6,N],[11,"is_alive","","Check if the object associated with this resource is still alive",6,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",6,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying wayland object",6,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same client",6,[[["self"],["resource"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",6,[[["self"],["u32"],["string"]]]],[11,"user_data","","Access the arbitrary payload associated to this object",6,[[["self"]],["option"]]],[11,"client","","Retrieve an handle to the client associated with this resource",6,[[["self"]],["option",["client"]]]],[11,"id","","Retrieve the object id of this wayland object",6,[[["self"]],["u32"]]],[11,"is_external","","Check whether this resource is managed by the library or not",6,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",6,N],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",6,N],[11,"implement","","Implement this resource using given function, destructor, and user data.",7,[[["self"],["f"],["option"],["ud"]],["resource"]]],[11,"implement_nonsend","","Implement this resource using given function and implementation data.",7,[[["self"],["f"],["option"],["ud"],["displaytoken"]],["resource"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",7,N],[11,"from_c_ptr","","Create a `NewResource` instance from a C pointer.",7,N],[11,"clone","","",6,[[["self"]],["resource"]]],[0,"sys","","C-associated types",N,N],[0,"common","wayland_server::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_server::sys::common","",N,N],[12,"name","","",8,N],[12,"signature","","",8,N],[12,"types","","",8,N],[3,"wl_interface","","",N,N],[12,"name","","",9,N],[12,"version","","",9,N],[12,"request_count","","",9,N],[12,"requests","","",9,N],[12,"event_count","","",9,N],[12,"events","","",9,N],[3,"wl_list","","",N,N],[12,"prev","","",10,N],[12,"next","","",10,N],[3,"wl_array","","",N,N],[12,"size","","",11,N],[12,"alloc","","",11,N],[12,"data","","",11,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",12,N],[12,"u","","",12,N],[12,"f","","",12,N],[12,"s","","",12,N],[12,"o","","",12,N],[12,"n","","",12,N],[12,"a","","",12,N],[12,"h","","",12,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",N,N],[4,"wl_client","wayland_server::sys::server","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[6,"wl_event_loop_fd_func_t","","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",13,N],[12,"notify","","",13,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",14,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",15,N],[12,"wl_client_destroy","","",15,N],[12,"wl_client_get_display","","",15,N],[12,"wl_client_get_credentials","","",15,N],[12,"wl_client_get_object","","",15,N],[12,"wl_client_add_destroy_listener","","",15,N],[12,"wl_client_get_destroy_listener","","",15,N],[12,"wl_client_post_no_memory","","",15,N],[12,"wl_resource_create","","",15,N],[12,"wl_client_create","","",15,N],[12,"wl_display_create","","",15,N],[12,"wl_display_destroy","","",15,N],[12,"wl_display_destroy_clients","","",15,N],[12,"wl_display_get_serial","","",15,N],[12,"wl_display_next_serial","","",15,N],[12,"wl_display_add_socket","","",15,N],[12,"wl_display_add_socket_auto","","",15,N],[12,"wl_display_add_socket_fd","","",15,N],[12,"wl_display_add_shm_format","","",15,N],[12,"wl_display_get_event_loop","","",15,N],[12,"wl_display_terminate","","",15,N],[12,"wl_display_run","","",15,N],[12,"wl_display_flush_clients","","",15,N],[12,"wl_display_add_destroy_listener","","",15,N],[12,"wl_display_get_destroy_listener","","",15,N],[12,"wl_global_create","","",15,N],[12,"wl_display_init_shm","","",15,N],[12,"wl_display_add_client_created_listener","","",15,N],[12,"wl_display_set_global_filter","","",15,N],[12,"wl_event_loop_create","","",15,N],[12,"wl_event_loop_destroy","","",15,N],[12,"wl_event_loop_add_fd","","",15,N],[12,"wl_event_loop_add_timer","","",15,N],[12,"wl_event_loop_add_signal","","",15,N],[12,"wl_event_loop_dispatch","","",15,N],[12,"wl_event_loop_dispatch_idle","","",15,N],[12,"wl_event_loop_add_idle","","",15,N],[12,"wl_event_loop_get_fd","","",15,N],[12,"wl_event_loop_add_destroy_listener","","",15,N],[12,"wl_event_loop_get_destroy_listener","","",15,N],[12,"wl_event_source_fd_update","","",15,N],[12,"wl_event_source_timer_update","","",15,N],[12,"wl_event_source_remove","","",15,N],[12,"wl_event_source_check","","",15,N],[12,"wl_global_destroy","","",15,N],[12,"wl_global_get_user_data","","",15,N],[12,"wl_resource_post_event_array","","",15,N],[12,"wl_resource_queue_event_array","","",15,N],[12,"wl_resource_post_no_memory","","",15,N],[12,"wl_resource_set_implementation","","",15,N],[12,"wl_resource_set_dispatcher","","",15,N],[12,"wl_resource_destroy","","",15,N],[12,"wl_resource_get_client","","",15,N],[12,"wl_resource_get_id","","",15,N],[12,"wl_resource_get_link","","",15,N],[12,"wl_resource_from_link","","",15,N],[12,"wl_resource_find_for_client","","",15,N],[12,"wl_resource_set_user_data","","",15,N],[12,"wl_resource_get_user_data","","",15,N],[12,"wl_resource_get_version","","",15,N],[12,"wl_resource_set_destructor","","",15,N],[12,"wl_resource_instance_of","","",15,N],[12,"wl_resource_add_destroy_listener","","",15,N],[12,"wl_resource_get_destroy_listener","","",15,N],[12,"wl_shm_buffer_begin_access","","",15,N],[12,"wl_shm_buffer_end_access","","",15,N],[12,"wl_shm_buffer_get","","",15,N],[12,"wl_shm_buffer_get_data","","",15,N],[12,"wl_shm_buffer_get_stride","","",15,N],[12,"wl_shm_buffer_get_format","","",15,N],[12,"wl_shm_buffer_get_width","","",15,N],[12,"wl_shm_buffer_get_height","","",15,N],[12,"wl_log_set_handler_server","","",15,N],[12,"wl_list_init","","",15,N],[12,"wl_list_insert","","",15,N],[12,"wl_list_remove","","",15,N],[12,"wl_list_length","","",15,N],[12,"wl_list_empty","","",15,N],[12,"wl_list_insert_list","","",15,N],[12,"wl_array_init","","",15,N],[12,"wl_array_release","","",15,N],[12,"wl_array_add","","",15,N],[12,"wl_array_copy","","",15,N],[12,"wl_resource_post_event","","",15,N],[12,"wl_resource_queue_event","","",15,N],[12,"wl_resource_post_error","","",15,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_server::sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[0,"protocol_interfaces","wayland_server::sys","",N,N],[7,"wl_display_requests","wayland_server::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[11,"get","wayland_server","Retrieve the Resource corresponding to a given id",16,[[["self"],["u32"]],["option",["resource"]]]],[11,"get_new","","Create a new resource for a given id",16,[[["self"],["u32"]],["option",["newresource"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",N,N],[0,"wl_callback","wayland_server::protocol","callback object",N,N],[3,"WlCallback","wayland_server::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",17,N],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",17,N],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",18,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,N],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",18,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,N],[4,"Event","wayland_server::protocol::wl_compositor","",N,N],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",19,N],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",19,N],[12,"offset","","",19,N],[12,"width","","",19,N],[12,"height","","",19,N],[12,"stride","","",19,N],[12,"format","","",19,N],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",19,N],[13,"Resize","","change the size of the pool mapping",19,N],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",19,N],[4,"Event","wayland_server::protocol::wl_shm_pool","",N,N],[0,"wl_shm","wayland_server::protocol","shared memory support",N,N],[3,"WlShm","wayland_server::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",20,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",20,N],[13,"InvalidFd","","mmapping the file descriptor failed",20,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",21,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",21,N],[13,"C8","","8-bit color index format, [7:0] C",21,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",21,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",21,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",21,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",21,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",21,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",21,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",21,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",21,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",21,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",21,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",21,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",21,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",21,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",21,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",21,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",21,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",21,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",21,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",21,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",21,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",21,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",21,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",21,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",21,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",21,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",21,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",21,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",21,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",21,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",21,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",21,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",21,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",21,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",21,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",21,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",21,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",21,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",21,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",21,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",21,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",21,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",21,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",21,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",21,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",21,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",21,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",21,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",21,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",22,N],[12,"id","wayland_server::protocol::wl_shm::Request","",22,N],[12,"fd","","",22,N],[12,"size","","",22,N],[4,"Event","wayland_server::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",23,N],[12,"format","wayland_server::protocol::wl_shm::Event","",23,N],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",24,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",25,N],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",26,N],[13,"InvalidActionMask","","action mask contains invalid values",26,N],[13,"InvalidAction","","action argument has an invalid value",26,N],[13,"InvalidOffer","","offer doesn't accept this request",26,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",27,N],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"mime_type","","",27,N],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",27,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"fd","","",27,N],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",27,N],[13,"Finish","","the offer will no longer be used",27,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",27,N],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",27,N],[12,"preferred_action","","",27,N],[4,"Event","wayland_server::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",28,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",28,N],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",28,N],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",28,N],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",28,N],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",28,N],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",29,N],[13,"InvalidSource","","source doesn't accept this request",29,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",30,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",30,N],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",30,N],[13,"SetActions","","set the available drag-and-drop actions",30,N],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",30,N],[4,"Event","wayland_server::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",31,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,N],[13,"Send","wayland_server::protocol::wl_data_source","send the data",31,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,N],[12,"fd","","",31,N],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",31,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",31,N],[13,"DndFinished","","the drag-and-drop operation concluded",31,N],[13,"Action","","notify the selected action",31,N],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",31,N],[0,"wl_data_device","wayland_server::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",32,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",33,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,N],[12,"origin","","",33,N],[12,"icon","","",33,N],[12,"serial","","",33,N],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",33,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,N],[12,"serial","","",33,N],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",33,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",34,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,N],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",34,N],[12,"serial","wayland_server::protocol::wl_data_device::Event","",34,N],[12,"surface","","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[12,"id","","",34,N],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",34,N],[13,"Motion","","drag-and-drop session motion",34,N],[12,"time","wayland_server::protocol::wl_data_device::Event","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",34,N],[13,"Selection","","advertise new selection",34,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,N],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",N,N],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",35,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,N],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",35,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,N],[12,"seat","","",35,N],[4,"Event","wayland_server::protocol::wl_data_device_manager","",N,N],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_server::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",36,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",37,N],[12,"id","wayland_server::protocol::wl_shell::Request","",37,N],[12,"surface","","",37,N],[4,"Event","wayland_server::protocol::wl_shell","",N,N],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",38,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",38,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",38,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",38,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",39,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"edges","","",39,N],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",39,N],[13,"SetTransient","","make the surface a transient surface",39,N],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",39,N],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"framerate","","",39,N],[12,"output","","",39,N],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"parent","","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",39,N],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",39,N],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",39,N],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",39,N],[4,"Event","wayland_server::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",40,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",40,N],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",40,N],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",40,N],[12,"width","","",40,N],[12,"height","","",40,N],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",40,N],[0,"wl_surface","wayland_server::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_server::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",41,N],[13,"InvalidTransform","","buffer transform value is invalid",41,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",42,N],[13,"Attach","","set the surface contents",42,N],[12,"buffer","wayland_server::protocol::wl_surface::Request","",42,N],[12,"x","","",42,N],[12,"y","","",42,N],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",42,N],[12,"x","wayland_server::protocol::wl_surface::Request","",42,N],[12,"y","","",42,N],[12,"width","","",42,N],[12,"height","","",42,N],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",42,N],[12,"callback","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",42,N],[12,"region","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",42,N],[12,"region","wayland_server::protocol::wl_surface::Request","",42,N],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",42,N],[13,"SetBufferTransform","","sets the buffer transformation",42,N],[12,"transform","wayland_server::protocol::wl_surface::Request","",42,N],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",42,N],[12,"scale","wayland_server::protocol::wl_surface::Request","",42,N],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",42,N],[12,"x","wayland_server::protocol::wl_surface::Request","",42,N],[12,"y","","",42,N],[12,"width","","",42,N],[12,"height","","",42,N],[4,"Event","wayland_server::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",43,N],[12,"output","wayland_server::protocol::wl_surface::Event","",43,N],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",43,N],[12,"output","wayland_server::protocol::wl_surface::Event","",43,N],[0,"wl_seat","wayland_server::protocol","group of input devices",N,N],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",44,N],[12,"id","wayland_server::protocol::wl_seat::Request","",44,N],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",44,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",45,N],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",45,N],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",45,N],[12,"name","wayland_server::protocol::wl_seat::Event","",45,N],[0,"wl_pointer","wayland_server::protocol","pointer input device",N,N],[3,"WlPointer","wayland_server::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",46,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",47,N],[13,"Pressed","","the button is pressed",47,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",48,N],[13,"HorizontalScroll","","horizontal axis",48,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",49,N],[13,"Finger","","finger on a touch surface",49,N],[13,"Continuous","","continuous coordinate space",49,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",50,N],[12,"serial","wayland_server::protocol::wl_pointer::Request","",50,N],[12,"surface","","",50,N],[12,"hotspot_x","","",50,N],[12,"hotspot_y","","",50,N],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",50,N],[4,"Event","","",N,N],[13,"Enter","","enter event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface","","",51,N],[12,"surface_x","","",51,N],[12,"surface_y","","",51,N],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface","","",51,N],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"surface_x","","",51,N],[12,"surface_y","","",51,N],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",51,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"time","","",51,N],[12,"button","","",51,N],[12,"state","","",51,N],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"axis","","",51,N],[12,"value","","",51,N],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",51,N],[13,"AxisSource","","axis source event",51,N],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",51,N],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",51,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"axis","","",51,N],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",51,N],[12,"axis","wayland_server::protocol::wl_pointer::Event","",51,N],[12,"discrete","","",51,N],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",52,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",52,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",53,N],[13,"Pressed","","key is pressed",53,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",54,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",55,N],[12,"format","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"fd","","",55,N],[12,"size","","",55,N],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"surface","","",55,N],[12,"keys","","",55,N],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"surface","","",55,N],[13,"Key","wayland_server::protocol::wl_keyboard","key event",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"time","","",55,N],[12,"key","","",55,N],[12,"state","","",55,N],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",55,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"mods_depressed","","",55,N],[12,"mods_latched","","",55,N],[12,"mods_locked","","",55,N],[12,"group","","",55,N],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",55,N],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",55,N],[12,"delay","","",55,N],[0,"wl_touch","wayland_server::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_server::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",56,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",57,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,N],[12,"time","","",57,N],[12,"surface","","",57,N],[12,"id","","",57,N],[12,"x","","",57,N],[12,"y","","",57,N],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",57,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,N],[12,"time","","",57,N],[12,"id","","",57,N],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",57,N],[12,"time","wayland_server::protocol::wl_touch::Event","",57,N],[12,"id","","",57,N],[12,"x","","",57,N],[12,"y","","",57,N],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",57,N],[13,"Cancel","","touch session cancelled",57,N],[0,"wl_output","wayland_server::protocol","compositor output region",N,N],[3,"Mode","wayland_server::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",58,N],[13,"None","","no geometry",58,N],[13,"HorizontalRgb","","horizontal RGB",58,N],[13,"HorizontalBgr","","horizontal BGR",58,N],[13,"VerticalRgb","","vertical RGB",58,N],[13,"VerticalBgr","","vertical BGR",58,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",59,N],[13,"_90","","90 degrees counter-clockwise",59,N],[13,"_180","","180 degrees counter-clockwise",59,N],[13,"_270","","270 degrees counter-clockwise",59,N],[13,"Flipped","","180 degree flip around a vertical axis",59,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",59,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",59,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",59,N],[4,"Request","","",N,N],[13,"Release","","release the output object",60,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",61,N],[12,"x","wayland_server::protocol::wl_output::Event","",61,N],[12,"y","","",61,N],[12,"physical_width","","",61,N],[12,"physical_height","","",61,N],[12,"subpixel","","",61,N],[12,"make","","",61,N],[12,"model","","",61,N],[12,"transform","","",61,N],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",61,N],[12,"flags","wayland_server::protocol::wl_output::Event","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[12,"refresh","","",61,N],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",61,N],[13,"Scale","","output scaling properties",61,N],[12,"factor","wayland_server::protocol::wl_output::Event","",61,N],[0,"wl_region","wayland_server::protocol","region interface",N,N],[3,"WlRegion","wayland_server::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",62,N],[13,"Add","","add rectangle to region",62,N],[12,"x","wayland_server::protocol::wl_region::Request","",62,N],[12,"y","","",62,N],[12,"width","","",62,N],[12,"height","","",62,N],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",62,N],[12,"x","wayland_server::protocol::wl_region::Request","",62,N],[12,"y","","",62,N],[12,"width","","",62,N],[12,"height","","",62,N],[4,"Event","wayland_server::protocol::wl_region","",N,N],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",63,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",64,N],[13,"GetSubsurface","","give a surface the role sub-surface",64,N],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",64,N],[12,"surface","","",64,N],[12,"parent","","",64,N],[4,"Event","wayland_server::protocol::wl_subcompositor","",N,N],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",65,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",66,N],[13,"SetPosition","","reposition the sub-surface",66,N],[12,"x","wayland_server::protocol::wl_subsurface::Request","",66,N],[12,"y","","",66,N],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,N],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,N],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",66,N],[13,"SetDesync","","set sub-surface to desynchronized mode",66,N],[4,"Event","","",N,N],[11,"is_destructor","wayland_server::protocol::wl_callback","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",17,N],[11,"as_raw_c_in","","",17,[[["self"],["f"]],["t"]]],[11,"c_interface","","",68,N],[11,"is_destructor","wayland_server::protocol::wl_compositor","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",18,N],[11,"as_raw_c_in","","",18,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",69,N],[11,"into_raw","","",69,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",69,N],[11,"as_raw_c_in","","",69,[[["self"],["f"]],["t"]]],[11,"c_interface","","",70,N],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",19,N],[11,"as_raw_c_in","","",19,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",71,N],[11,"into_raw","","",71,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",71,N],[11,"as_raw_c_in","","",71,[[["self"],["f"]],["t"]]],[11,"c_interface","","",72,N],[11,"clone","wayland_server::protocol::wl_shm","",20,[[["self"]],["error"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"eq","","",20,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",20,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",20,[[["self"]],["u32"]]],[11,"clone","","",21,[[["self"]],["format"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"eq","","",21,[[["self"],["format"]],["bool"]]],[11,"from_raw","","",21,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"is_destructor","","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"c_interface","","",73,N],[11,"is_destructor","wayland_server::protocol::wl_buffer","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",24,N],[11,"into_raw","","",24,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",25,N],[11,"into_raw","","",25,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"c_interface","","",74,N],[11,"clone","wayland_server::protocol::wl_data_offer","",26,[[["self"]],["error"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"eq","","",26,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",26,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",26,[[["self"]],["u32"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",28,N],[11,"into_raw","","",28,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"c_interface","","",75,N],[11,"clone","wayland_server::protocol::wl_data_source","",29,[[["self"]],["error"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"eq","","",29,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",29,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",29,[[["self"]],["u32"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"c_interface","","",76,N],[11,"clone","wayland_server::protocol::wl_data_device","",32,[[["self"]],["error"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"eq","","",32,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",32,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[11,"is_destructor","","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",33,N],[11,"as_raw_c_in","","",33,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",34,N],[11,"as_raw_c_in","","",34,[[["self"],["f"]],["t"]]],[11,"c_interface","","",77,N],[11,"eq","wayland_server::protocol::wl_data_device_manager","",78,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"clone","","",78,[[["self"]],["dndaction"]]],[11,"partial_cmp","","",78,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",78,[[["self"],["dndaction"]],["bool"]]],[11,"cmp","","",78,[[["self"],["dndaction"]],["ordering"]]],[11,"hash","","",78,N],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[18,"None","","no action",78,N],[18,"Copy","","copy action",78,N],[18,"Move","","move action",78,N],[18,"Ask","","ask action",78,N],[11,"empty","","Returns an empty set of flags.",78,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",78,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",78,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",78,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",78,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",78,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",78,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",78,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",78,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",78,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",78,[[["self"],["dndaction"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor_assign","","Adds the set of flags.",78,[[["self"],["dndaction"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor_assign","","Toggles the set of flags.",78,[[["self"],["dndaction"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",78,[[["self"],["dndaction"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",78,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub_assign","","Disables all flags enabled in the set.",78,[[["self"],["dndaction"]]]],[11,"not","","Returns the complement of this set of flags.",78,[[["self"]],["dndaction"]]],[11,"extend","","",78,[[["self"],["t"]]]],[11,"from_iter","","",78,[[["t"]],["dndaction"]]],[11,"from_raw","","",78,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"is_destructor","","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",35,N],[11,"into_raw","","",35,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",35,N],[11,"as_raw_c_in","","",35,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"c_interface","","",80,N],[11,"clone","wayland_server::protocol::wl_shell","",36,[[["self"]],["error"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"eq","","",36,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",36,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",36,[[["self"]],["u32"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",81,[[["self"]],["bool"]]],[11,"opcode","","",81,[[["self"]],["u16"]]],[11,"child","","",81,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",81,N],[11,"into_raw","","",81,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",81,N],[11,"as_raw_c_in","","",81,[[["self"],["f"]],["t"]]],[11,"c_interface","","",82,N],[11,"eq","wayland_server::protocol::wl_shell_surface","",83,[[["self"],["resize"]],["bool"]]],[11,"ne","","",83,[[["self"],["resize"]],["bool"]]],[11,"clone","","",83,[[["self"]],["resize"]]],[11,"partial_cmp","","",83,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["resize"]],["bool"]]],[11,"le","","",83,[[["self"],["resize"]],["bool"]]],[11,"gt","","",83,[[["self"],["resize"]],["bool"]]],[11,"ge","","",83,[[["self"],["resize"]],["bool"]]],[11,"cmp","","",83,[[["self"],["resize"]],["ordering"]]],[11,"hash","","",83,N],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[18,"None","","no edge",83,N],[18,"Top","","top edge",83,N],[18,"Bottom","","bottom edge",83,N],[18,"Left","","left edge",83,N],[18,"TopLeft","","top and left edges",83,N],[18,"BottomLeft","","bottom and left edges",83,N],[18,"Right","","right edge",83,N],[18,"TopRight","","top and right edges",83,N],[18,"BottomRight","","bottom and right edges",83,N],[11,"empty","","Returns an empty set of flags.",83,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",83,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",83,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",83,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",83,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",83,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",83,[[["self"],["resize"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"bitor_assign","","Adds the set of flags.",83,[[["self"],["resize"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",83,[[["self"],["resize"]],["resize"]]],[11,"bitxor_assign","","Toggles the set of flags.",83,[[["self"],["resize"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",83,[[["self"],["resize"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",83,[[["self"],["resize"]],["resize"]]],[11,"sub_assign","","Disables all flags enabled in the set.",83,[[["self"],["resize"]]]],[11,"not","","Returns the complement of this set of flags.",83,[[["self"]],["resize"]]],[11,"extend","","",83,[[["self"],["t"]]]],[11,"from_iter","","",83,[[["t"]],["resize"]]],[11,"from_raw","","",83,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",83,[[["self"]],["u32"]]],[11,"eq","","",84,[[["self"],["transient"]],["bool"]]],[11,"ne","","",84,[[["self"],["transient"]],["bool"]]],[11,"clone","","",84,[[["self"]],["transient"]]],[11,"partial_cmp","","",84,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",84,[[["self"],["transient"]],["bool"]]],[11,"le","","",84,[[["self"],["transient"]],["bool"]]],[11,"gt","","",84,[[["self"],["transient"]],["bool"]]],[11,"ge","","",84,[[["self"],["transient"]],["bool"]]],[11,"cmp","","",84,[[["self"],["transient"]],["ordering"]]],[11,"hash","","",84,N],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[18,"Inactive","","do not set keyboard focus",84,N],[11,"empty","","Returns an empty set of flags.",84,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",84,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",84,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",84,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",84,[[["self"],["transient"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"bitor_assign","","Adds the set of flags.",84,[[["self"],["transient"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,[[["self"],["transient"]],["transient"]]],[11,"bitxor_assign","","Toggles the set of flags.",84,[[["self"],["transient"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",84,[[["self"],["transient"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",84,[[["self"],["transient"]],["transient"]]],[11,"sub_assign","","Disables all flags enabled in the set.",84,[[["self"],["transient"]]]],[11,"not","","Returns the complement of this set of flags.",84,[[["self"]],["transient"]]],[11,"extend","","",84,[[["self"],["t"]]]],[11,"from_iter","","",84,[[["t"]],["transient"]]],[11,"from_raw","","",84,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[11,"clone","","",38,[[["self"]],["fullscreenmethod"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"eq","","",38,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"from_raw","","",38,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",38,[[["self"]],["u32"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"c_interface","","",85,N],[11,"clone","wayland_server::protocol::wl_surface","",41,[[["self"]],["error"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"eq","","",41,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",41,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[11,"is_destructor","","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"c_interface","","",86,N],[11,"eq","wayland_server::protocol::wl_seat","",87,[[["self"],["capability"]],["bool"]]],[11,"ne","","",87,[[["self"],["capability"]],["bool"]]],[11,"clone","","",87,[[["self"]],["capability"]]],[11,"partial_cmp","","",87,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",87,[[["self"],["capability"]],["bool"]]],[11,"le","","",87,[[["self"],["capability"]],["bool"]]],[11,"gt","","",87,[[["self"],["capability"]],["bool"]]],[11,"ge","","",87,[[["self"],["capability"]],["bool"]]],[11,"cmp","","",87,[[["self"],["capability"]],["ordering"]]],[11,"hash","","",87,N],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[18,"Pointer","","the seat has pointer devices",87,N],[18,"Keyboard","","the seat has one or more keyboards",87,N],[18,"Touch","","the seat has touch devices",87,N],[11,"empty","","Returns an empty set of flags.",87,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",87,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",87,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",87,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",87,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",87,[[["self"],["capability"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"bitor_assign","","Adds the set of flags.",87,[[["self"],["capability"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,[[["self"],["capability"]],["capability"]]],[11,"bitxor_assign","","Toggles the set of flags.",87,[[["self"],["capability"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",87,[[["self"],["capability"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",87,[[["self"],["capability"]],["capability"]]],[11,"sub_assign","","Disables all flags enabled in the set.",87,[[["self"],["capability"]]]],[11,"not","","Returns the complement of this set of flags.",87,[[["self"]],["capability"]]],[11,"extend","","",87,[[["self"],["t"]]]],[11,"from_iter","","",87,[[["t"]],["capability"]]],[11,"from_raw","","",87,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",87,[[["self"]],["u32"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",45,N],[11,"into_raw","","",45,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",45,N],[11,"as_raw_c_in","","",45,[[["self"],["f"]],["t"]]],[11,"c_interface","","",88,N],[11,"clone","wayland_server::protocol::wl_pointer","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"clone","","",47,[[["self"]],["buttonstate"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"eq","","",47,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",47,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"clone","","",48,[[["self"]],["axis"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"eq","","",48,[[["self"],["axis"]],["bool"]]],[11,"from_raw","","",48,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",48,[[["self"]],["u32"]]],[11,"clone","","",49,[[["self"]],["axissource"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"eq","","",49,[[["self"],["axissource"]],["bool"]]],[11,"from_raw","","",49,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"is_destructor","","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",50,N],[11,"as_raw_c_in","","",50,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"c_interface","","",89,N],[11,"clone","wayland_server::protocol::wl_keyboard","",52,[[["self"]],["keymapformat"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"eq","","",52,[[["self"],["keymapformat"]],["bool"]]],[11,"from_raw","","",52,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",52,[[["self"]],["u32"]]],[11,"clone","","",53,[[["self"]],["keystate"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"eq","","",53,[[["self"],["keystate"]],["bool"]]],[11,"from_raw","","",53,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",54,N],[11,"as_raw_c_in","","",54,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",55,N],[11,"into_raw","","",55,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",55,N],[11,"as_raw_c_in","","",55,[[["self"],["f"]],["t"]]],[11,"c_interface","","",90,N],[11,"is_destructor","wayland_server::protocol::wl_touch","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",56,N],[11,"as_raw_c_in","","",56,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",57,N],[11,"into_raw","","",57,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"c_interface","","",91,N],[11,"clone","wayland_server::protocol::wl_output","",58,[[["self"]],["subpixel"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"eq","","",58,[[["self"],["subpixel"]],["bool"]]],[11,"from_raw","","",58,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[11,"clone","","",59,[[["self"]],["transform"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"eq","","",59,[[["self"],["transform"]],["bool"]]],[11,"from_raw","","",59,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"eq","","",92,[[["self"],["mode"]],["bool"]]],[11,"ne","","",92,[[["self"],["mode"]],["bool"]]],[11,"clone","","",92,[[["self"]],["mode"]]],[11,"partial_cmp","","",92,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["mode"]],["bool"]]],[11,"le","","",92,[[["self"],["mode"]],["bool"]]],[11,"gt","","",92,[[["self"],["mode"]],["bool"]]],[11,"ge","","",92,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",92,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",92,N],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[18,"Current","","indicates this is the current mode",92,N],[18,"Preferred","","indicates this is the preferred mode",92,N],[11,"empty","","Returns an empty set of flags.",92,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",92,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",92,[[["self"]],["mode"]]],[11,"extend","","",92,[[["self"],["t"]]]],[11,"from_iter","","",92,[[["t"]],["mode"]]],[11,"from_raw","","",92,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"c_interface","","",93,N],[11,"is_destructor","wayland_server::protocol::wl_region","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",62,N],[11,"into_raw","","",62,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",62,N],[11,"as_raw_c_in","","",62,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",94,[[["self"]],["bool"]]],[11,"opcode","","",94,[[["self"]],["u16"]]],[11,"child","","",94,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",94,N],[11,"into_raw","","",94,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",94,N],[11,"as_raw_c_in","","",94,[[["self"],["f"]],["t"]]],[11,"c_interface","","",95,N],[11,"clone","wayland_server::protocol::wl_subcompositor","",63,[[["self"]],["error"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"eq","","",63,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",63,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"is_destructor","","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",64,N],[11,"into_raw","","",64,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"opcode","","",96,[[["self"]],["u16"]]],[11,"child","","",96,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",96,N],[11,"into_raw","","",96,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"c_interface","","",97,N],[11,"clone","wayland_server::protocol::wl_subsurface","",65,[[["self"]],["error"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"eq","","",65,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",65,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"is_destructor","","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",66,N],[11,"as_raw_c_in","","",66,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",98,N],[11,"as_raw_c_in","","",98,[[["self"],["f"]],["t"]]],[11,"c_interface","","",99,N],[11,"new","wayland_server","Create a new map",100,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",100,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",100,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",100,[[["self"],["f"]],["bool"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"child","","",101,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",101,N],[11,"as_raw_c_in","","",101,[[["self"],["f"]],["t"]]],[11,"c_interface","","",102,N],[11,"deref","wayland_server::sys::server","",103,[[["self"]],["option"]]],[11,"deref","","",104,[[["self"]],["waylandserver"]]],[11,"initialize","","",104,N],[11,"initialize","","",103,N],[11,"from","wayland_server","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::common","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::server","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"open","","",15,[[["str"]],["result",["waylandserver","dlerror"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_callback","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_compositor","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_buffer","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_offer","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_source","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_device","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_data_device_manager","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shell","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_shell_surface","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_surface","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_seat","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_pointer","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_keyboard","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_touch","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","wayland_server::protocol::wl_output","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_region","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subsurface","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"DisplayToken"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[3,"UserDataMap"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"]]};
searchIndex["wayland_sys"]={"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[0,"common","","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_sys::common","",N,N],[12,"name","","",0,N],[12,"signature","","",0,N],[12,"types","","",0,N],[3,"wl_interface","","",N,N],[12,"name","","",1,N],[12,"version","","",1,N],[12,"request_count","","",1,N],[12,"requests","","",1,N],[12,"event_count","","",1,N],[12,"events","","",1,N],[3,"wl_list","","",N,N],[12,"prev","","",2,N],[12,"next","","",2,N],[3,"wl_array","","",N,N],[12,"size","","",3,N],[12,"alloc","","",3,N],[12,"data","","",3,N],[19,"wl_argument","","",N,N],[12,"i","","",4,N],[12,"u","","",4,N],[12,"f","","",4,N],[12,"s","","",4,N],[12,"o","","",4,N],[12,"n","","",4,N],[12,"a","","",4,N],[12,"h","","",4,N],[5,"wl_fixed_to_double","","",N,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",N,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",N,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",N,N],[3,"WaylandClient","wayland_sys::client","",N,N],[12,"wl_display_connect_to_fd","","",5,N],[12,"wl_display_connect","","",5,N],[12,"wl_display_disconnect","","",5,N],[12,"wl_display_get_fd","","",5,N],[12,"wl_display_roundtrip","","",5,N],[12,"wl_display_read_events","","",5,N],[12,"wl_display_prepare_read","","",5,N],[12,"wl_display_cancel_read","","",5,N],[12,"wl_display_dispatch","","",5,N],[12,"wl_display_dispatch_pending","","",5,N],[12,"wl_display_get_error","","",5,N],[12,"wl_display_get_protocol_error","","",5,N],[12,"wl_display_flush","","",5,N],[12,"wl_event_queue_destroy","","",5,N],[12,"wl_display_create_queue","","",5,N],[12,"wl_display_roundtrip_queue","","",5,N],[12,"wl_display_prepare_read_queue","","",5,N],[12,"wl_display_dispatch_queue","","",5,N],[12,"wl_display_dispatch_queue_pending","","",5,N],[12,"wl_proxy_create","","",5,N],[12,"wl_proxy_destroy","","",5,N],[12,"wl_proxy_add_listener","","",5,N],[12,"wl_proxy_get_listener","","",5,N],[12,"wl_proxy_add_dispatcher","","",5,N],[12,"wl_proxy_marshal_array_constructor","","",5,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,N],[12,"wl_proxy_marshal_array","","",5,N],[12,"wl_proxy_set_user_data","","",5,N],[12,"wl_proxy_get_user_data","","",5,N],[12,"wl_proxy_get_id","","",5,N],[12,"wl_proxy_get_class","","",5,N],[12,"wl_proxy_set_queue","","",5,N],[12,"wl_proxy_get_version","","",5,N],[12,"wl_proxy_create_wrapper","","",5,N],[12,"wl_proxy_wrapper_destroy","","",5,N],[12,"wl_log_set_handler_client","","",5,N],[12,"wl_list_init","","",5,N],[12,"wl_list_insert","","",5,N],[12,"wl_list_remove","","",5,N],[12,"wl_list_length","","",5,N],[12,"wl_list_empty","","",5,N],[12,"wl_list_insert_list","","",5,N],[12,"wl_array_init","","",5,N],[12,"wl_array_release","","",5,N],[12,"wl_array_add","","",5,N],[12,"wl_array_copy","","",5,N],[12,"wl_proxy_marshal_constructor","","",5,N],[12,"wl_proxy_marshal_constructor_versioned","","",5,N],[12,"wl_proxy_marshal","","",5,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[4,"wl_proxy","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",5,[[["str"]],["result",["waylandclient","dlerror"]]]],[11,"deref","","",6,[[["self"]],["option"]]],[11,"initialize","","",6,[[["self"]]]],[11,"deref","","",7,[[["self"]],["waylandclient"]]],[11,"initialize","","",7,[[["self"]]]],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",N,N],[3,"wl_listener","wayland_sys::server","",N,N],[12,"link","","",8,N],[12,"notify","","",8,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",9,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",10,N],[12,"wl_client_destroy","","",10,N],[12,"wl_client_get_display","","",10,N],[12,"wl_client_get_credentials","","",10,N],[12,"wl_client_get_object","","",10,N],[12,"wl_client_add_destroy_listener","","",10,N],[12,"wl_client_get_destroy_listener","","",10,N],[12,"wl_client_post_no_memory","","",10,N],[12,"wl_resource_create","","",10,N],[12,"wl_client_create","","",10,N],[12,"wl_display_create","","",10,N],[12,"wl_display_destroy","","",10,N],[12,"wl_display_destroy_clients","","",10,N],[12,"wl_display_get_serial","","",10,N],[12,"wl_display_next_serial","","",10,N],[12,"wl_display_add_socket","","",10,N],[12,"wl_display_add_socket_auto","","",10,N],[12,"wl_display_add_socket_fd","","",10,N],[12,"wl_display_add_shm_format","","",10,N],[12,"wl_display_get_event_loop","","",10,N],[12,"wl_display_terminate","","",10,N],[12,"wl_display_run","","",10,N],[12,"wl_display_flush_clients","","",10,N],[12,"wl_display_add_destroy_listener","","",10,N],[12,"wl_display_get_destroy_listener","","",10,N],[12,"wl_global_create","","",10,N],[12,"wl_display_init_shm","","",10,N],[12,"wl_display_add_client_created_listener","","",10,N],[12,"wl_display_set_global_filter","","",10,N],[12,"wl_event_loop_create","","",10,N],[12,"wl_event_loop_destroy","","",10,N],[12,"wl_event_loop_add_fd","","",10,N],[12,"wl_event_loop_add_timer","","",10,N],[12,"wl_event_loop_add_signal","","",10,N],[12,"wl_event_loop_dispatch","","",10,N],[12,"wl_event_loop_dispatch_idle","","",10,N],[12,"wl_event_loop_add_idle","","",10,N],[12,"wl_event_loop_get_fd","","",10,N],[12,"wl_event_loop_add_destroy_listener","","",10,N],[12,"wl_event_loop_get_destroy_listener","","",10,N],[12,"wl_event_source_fd_update","","",10,N],[12,"wl_event_source_timer_update","","",10,N],[12,"wl_event_source_remove","","",10,N],[12,"wl_event_source_check","","",10,N],[12,"wl_global_destroy","","",10,N],[12,"wl_global_get_user_data","","",10,N],[12,"wl_resource_post_event_array","","",10,N],[12,"wl_resource_queue_event_array","","",10,N],[12,"wl_resource_post_no_memory","","",10,N],[12,"wl_resource_set_implementation","","",10,N],[12,"wl_resource_set_dispatcher","","",10,N],[12,"wl_resource_destroy","","",10,N],[12,"wl_resource_get_client","","",10,N],[12,"wl_resource_get_id","","",10,N],[12,"wl_resource_get_link","","",10,N],[12,"wl_resource_from_link","","",10,N],[12,"wl_resource_find_for_client","","",10,N],[12,"wl_resource_set_user_data","","",10,N],[12,"wl_resource_get_user_data","","",10,N],[12,"wl_resource_get_version","","",10,N],[12,"wl_resource_set_destructor","","",10,N],[12,"wl_resource_instance_of","","",10,N],[12,"wl_resource_add_destroy_listener","","",10,N],[12,"wl_resource_get_destroy_listener","","",10,N],[12,"wl_shm_buffer_begin_access","","",10,N],[12,"wl_shm_buffer_end_access","","",10,N],[12,"wl_shm_buffer_get","","",10,N],[12,"wl_shm_buffer_get_data","","",10,N],[12,"wl_shm_buffer_get_stride","","",10,N],[12,"wl_shm_buffer_get_format","","",10,N],[12,"wl_shm_buffer_get_width","","",10,N],[12,"wl_shm_buffer_get_height","","",10,N],[12,"wl_log_set_handler_server","","",10,N],[12,"wl_list_init","","",10,N],[12,"wl_list_insert","","",10,N],[12,"wl_list_remove","","",10,N],[12,"wl_list_length","","",10,N],[12,"wl_list_empty","","",10,N],[12,"wl_list_insert_list","","",10,N],[12,"wl_array_init","","",10,N],[12,"wl_array_release","","",10,N],[12,"wl_array_add","","",10,N],[12,"wl_array_copy","","",10,N],[12,"wl_resource_post_event","","",10,N],[12,"wl_resource_queue_event","","",10,N],[12,"wl_resource_post_error","","",10,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[4,"wl_client","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[11,"open","","",10,[[["str"]],["result",["waylandserver","dlerror"]]]],[11,"deref","","",11,[[["self"]],["option"]]],[11,"initialize","","",11,[[["self"]]]],[11,"deref","","",12,[[["self"]],["waylandserver"]]],[11,"initialize","","",12,[[["self"]]]],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",N,N],[3,"WaylandEgl","wayland_sys::egl","",N,N],[12,"wl_egl_window_create","","",13,N],[12,"wl_egl_window_destroy","","",13,N],[12,"wl_egl_window_resize","","",13,N],[12,"wl_egl_window_get_attached_size","","",13,N],[3,"WAYLAND_EGL_OPTION","","",N,N],[3,"WAYLAND_EGL_HANDLE","","",N,N],[4,"wl_egl_window","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",13,[[["str"]],["result",["waylandegl","dlerror"]]]],[11,"deref","","",14,[[["self"]],["option"]]],[11,"initialize","","",14,[[["self"]]]],[11,"deref","","",15,[[["self"]],["waylandegl"]]],[11,"initialize","","",15,[[["self"]]]],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",N,N],[3,"wl_cursor_image","wayland_sys::cursor","",N,N],[12,"width","","actual width",16,N],[12,"height","","actual height",16,N],[12,"hotspot_x","","hot spot x (must be inside image)",16,N],[12,"hotspot_y","","hot spot y (must be inside image)",16,N],[12,"delay","","animation delay to next frame",16,N],[3,"wl_cursor","","",N,N],[12,"image_count","","",17,N],[12,"images","","",17,N],[12,"name","","",17,N],[3,"WaylandCursor","","",N,N],[12,"wl_cursor_theme_load","","",18,N],[12,"wl_cursor_theme_destroy","","",18,N],[12,"wl_cursor_theme_get_cursor","","",18,N],[12,"wl_cursor_image_get_buffer","","",18,N],[12,"wl_cursor_frame","","",18,N],[12,"wl_cursor_frame_and_duration","","",18,N],[3,"WAYLAND_CURSOR_OPTION","","",N,N],[3,"WAYLAND_CURSOR_HANDLE","","",N,N],[4,"wl_cursor_theme","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",18,[[["str"]],["result",["waylandcursor","dlerror"]]]],[11,"deref","","",19,[[["self"]],["option"]]],[11,"initialize","","",19,[[["self"]]]],[11,"deref","","",20,[[["self"]],["waylandcursor"]]],[11,"initialize","","",20,[[["self"]]]],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",N,N],[14,"ffi_dispatch","","",N,N],[11,"from","wayland_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_sys::client","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","wayland_sys::server","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","wayland_sys::egl","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","wayland_sys::cursor","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[4,"wl_egl_window"],[4,"wl_cursor_theme"]]};
initSearch(searchIndex);
